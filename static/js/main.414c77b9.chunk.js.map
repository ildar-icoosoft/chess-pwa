{"version":3,"sources":["features/game-clock/gameClockSlice.ts","normalizr/schemas/gameSchema.ts","features/games-list/GamePreviewClock.module.scss","features/single-game/singleGameSlice.ts","features/single-game/GameMoves.module.scss","features/games-list/GamePreviewsList.module.scss","features/games-list/GamePreviewResult.module.scss","services/ioClient.ts","features/current-user/currentUserSlice.ts","features/games-list/GamePreviewUserName.tsx","features/games-list/GamePreviewResult.tsx","features/games-list/GamePreviewClock.tsx","features/games-list/GamePreviewsListItem.tsx","features/games-list/GamePreviewsList.tsx","features/games-list/OngoingGamesContainer.tsx","features/home-page/ChallengeButtons.tsx","features/home-page/ChallengeButtonsContainer.tsx","features/challenge-ai-modal/ChallengeAiForm.tsx","features/challenge-ai-modal/ChallengeAiFormContainer.tsx","features/home-page/ChallengeAiModal.tsx","features/home-page/ChallengeAiModalContainer.tsx","features/games-list/CompletedGamesContainer.tsx","features/home-page/HomePage.tsx","features/single-game/GameMeta.tsx","utils/getGameStatusText.ts","features/single-game/GameMetaContainer.tsx","features/single-game/GameClock.tsx","features/single-game/GameMoves.tsx","features/single-game/GameControlPanelUserName.tsx","features/single-game/GameControlPanelTopToolbar.tsx","features/single-game/GameControlPanelBottomToolbar.tsx","features/single-game/DrawOfferDialog.tsx","features/single-game/GameControlPanel.tsx","features/single-game/GameControlPanelWrapper.tsx","features/single-game/GameControlPanelContainer.tsx","features/single-game/SingleGameBoard.tsx","features/single-game/SingleGameBoardContainer.tsx","features/single-game/GamePage.tsx","features/header/Header.tsx","features/header/HeaderContainer.tsx","features/auth-modal/LoginForm.tsx","features/auth-modal/RegistrationForm.tsx","features/auth-modal/LoginTabsContainer.tsx","features/auth-modal/AuthModal.tsx","features/auth-modal/AuthModalContainer.tsx","app/App.tsx","serviceWorker.ts","features/entities/entitiesSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx","utils/makeChessInstance.ts","normalizr/schemas/userSchema.ts","features/challenge-ai-modal/ChallengeAiForm.module.scss","features/games-list/gamesListSlice.ts","features/auth-modal/authModalSlice.ts","features/challenge-ai-modal/challengeAiModalSlice.ts","features/challenge/challengeSlice.ts","features/data-subscription/dataSubscriptionSlice.ts","features/move/moveSlice.ts","features/games-list/GamePreviewsListItem.module.scss"],"names":["gameClockSlice","createSlice","name","initialState","reducers","oneSecondPassed","extraReducers","actions","startGameClock","dispatch","setInterval","gameSchema","schema","Entity","white","userSchema","black","module","exports","defaultSingleGameItemState","isLoading","error","isFlipped","rewindToMoveIndex","singleGameSlice","getSingleGameRequest","state","action","payload","Object","assign","getSingleGameSuccess","result","getSingleGameError","itemId","abortGameRequest","_state","_action","abortGameSuccess","abortGameError","resignGameRequest","resignGameSuccess","resignGameError","offerDrawRequest","offerDrawSuccess","offerDrawError","acceptDrawOfferRequest","acceptDrawOfferSuccess","acceptDrawOfferError","declineDrawOfferRequest","declineDrawOfferSuccess","declineDrawOfferError","flipBoard","rewindToMove","gameId","moveIndex","fetchGame","id","Promise","resolve","reject","ioClient","socket","get","body","jwr","statusCode","normalizedGame","normalize","abortGame","post","resignGame","offerDraw","acceptDrawOffer","declineDrawOffer","sailsIOClient","socketIOClient","sails","url","currentUserSlice","userId","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","loginSuccess","registerSuccess","logoutSuccess","fetchCurrentUser","normalizedUser","login","data","put","emailAddress","email","password","register","fullName","confirmPassword","agreed","logout","GamePreviewUserName","game","color","aiLevel","GamePreviewResult","winner","className","css","GamePreviewClock","time","isRunning","formattedTime","moment","startOf","milliseconds","format","data-testid","cx","clock","clockRun","GamePreviewsListItem","fen","makeChessInstance","gamePreview","player","status","btime","turn","board","to","position","viewOnly","width","wtime","GamePreviewsList","games","grid","map","item","key","OngoingGamesContainer","useSelector","denormalize","keys","entities","filter","sort","a","b","createdAt","slice","ChallengeButtons","onChallengeAi","handleChallengeAi","useCallback","Button","variant","onClick","ChallengeButtonsContainer","useDispatch","showChallengeAiModal","ChallengeAiForm","onSubmit","initialValues","level","clockLimit","clockIncrement","values","formikHelpers","handleChange","handleBlur","handleSubmit","isSubmitting","setStatus","setFieldValue","Form","noValidate","e","onChange","Alert","Group","Label","Control","type","onBlur","value","min","max","step","Row","ButtonGroup","levelButtonGroup","colorSubmits","disabled","title","colorSubmitsButton","blackButton","randomButton","whiteButton","ChallengeAiFormContainer","history","useHistory","challengeAiAndOpenGamePage","challengeAi","then","push","catch","err","ChallengeAiModal","show","onHide","Modal","animation","Header","closeButton","Title","Body","ChallengeAiModalContainer","isChallengeAiModalVisible","challengeAiModal","handleHide","hideChallengeAiModal","CompletedGamesContainer","HomePage","Card","GameMeta","getGameStatusText","GameMetaContainer","GameClock","formatMove","move","from","GameMoves","onRewindToMove","movesHistory","verbose","movesPairs","_chunk","makeRewindToMoveHandler","pair","index","role","selected","GameControlPanelUserName","GameControlPanelTopToolbar","isFirstMove","isLastMove","hasPrevMove","hasNextMove","onFlipBoard","onRewindToPrevMove","onRewindToNextMove","onRewindToFirstMove","onRewindToLastMove","handleFlipBoard","handleRewindToPrevMove","handleRewindToNextMove","handleRewindToFirstMove","handleRewindToLastMove","GameControlPanelBottomToolbar","canAbortGame","canOfferDraw","canResignGame","onAbortGame","onOfferDraw","onResignGame","handleAbortGame","handleOfferDraw","handleResignGame","DrawOfferDialog","onAccept","onDecline","handleAccept","handleDecline","GameControlPanel","orientation","drawOfferSentByCurrentUser","drawOfferSentByOpponent","onAcceptDrawOffer","onDeclineDrawOffer","length","GameControlPanelWrapper","currentUser","PieceColor","WHITE","BLACK","playerPiecesColor","drawOffer","GameControlPanelContainer","singleGameItemState","singleGame","handleAcceptDrawOffer","handleDeclineDrawOffer","handleRewindToMove","SingleGameBoard","onMove","movableColor","chessWithAllMoves","chess","check","in_check","turnColor","validMoves","getValidMoves","lastMoveSquares","lastMove","allowMarkers","clickable","draggable","SingleGameBoardContainer","handleMove","makeMove","GamePage","useParams","idAsNumber","Number","useEffect","onLogout","onShowAuthModal","handleLogout","handleShowAuthModal","href","target","rel","src","process","alt","HeaderContainer","showAuthModal","loginSchema","Yup","shape","required","LoginForm","validationSchema","errors","touched","placeholder","isValid","isInvalid","Feedback","registrationSchema","equals","RegistrationForm","LoginTabsContainer","doLogin","React","doSignUp","Tabs","transition","Tab","eventKey","AuthModal","AuthModalContainer","isAuthModalVisible","authModal","hideAuthModal","App","watchGames","fetchGames","path","Boolean","window","location","hostname","match","getNormalizedDataReducer","users","entitiesSlice","getGamesListSuccess","challengeAiSuccess","updateGameBySubscription","createGameBySubscription","makeMoveRequest","moves","trim","makeMoveSuccess","forEach","timePropName","rootReducer","combineReducers","authModalReducer","challengeAiModalReducer","currentUserReducer","gamesList","gamesListReducer","entitiesReducer","singleGameReducer","store","configureStore","reducer","require","default","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","startPositionFen","initialFen","Chess","split","sloppy","Error","gamesListSlice","getGamesListRequest","getGamesListError","normalizedGames","authModalSlice","challengeAiModalSlice","challengeSlice","challengeAiRequest","challengeAiError","dataSubscriptionSlice","on","subscriptionData","verb","previous","moveSlice","makeMoveError"],"mappings":"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","file":"static/js/main.414c77b9.chunk.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../../app/store\";\n\ninterface GameClockState {}\n\nconst initialState: GameClockState = {};\n\nconst gameClockSlice = createSlice({\n  name: \"gameClock\",\n  initialState,\n  reducers: {\n    oneSecondPassed() {},\n  },\n  extraReducers: {},\n});\n\nexport const { oneSecondPassed } = gameClockSlice.actions;\n\nexport default gameClockSlice.reducer;\n\nexport const startGameClock = (): AppThunk<void> => (dispatch) => {\n  setInterval(() => {\n    dispatch(oneSecondPassed());\n  }, 1000);\n};\n","import { schema } from \"normalizr\";\nimport userSchema from \"./userSchema\";\n\nconst gameSchema = new schema.Entity(\"games\", {\n  white: userSchema,\n  black: userSchema,\n});\n\nexport default gameSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockRun\":\"GamePreviewClock_clockRun__2fzqU\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable prefer-object-spread */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\nexport interface RewindToMovePayload {\n  gameId: number;\n  moveIndex: number | null;\n}\n\ninterface SingleGameItemState {\n  isLoading: boolean;\n  error: string | null;\n  isFlipped: boolean;\n  rewindToMoveIndex: number | null;\n}\n\ninterface SingleGameState {\n  [gameId: string]: SingleGameItemState;\n}\n\nexport const defaultSingleGameItemState: SingleGameItemState = {\n  isLoading: true,\n  error: null,\n  isFlipped: false,\n  rewindToMoveIndex: null,\n};\n\nconst initialState: SingleGameState = {};\n\nconst singleGameSlice = createSlice({\n  name: \"singleGame\",\n  initialState,\n  reducers: {\n    getSingleGameRequest(state, action: PayloadAction<number>) {\n      state[action.payload] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload],\n        {\n          isLoading: true,\n          error: null,\n        }\n      );\n    },\n    getSingleGameSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state[action.payload.result] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.result],\n        {\n          isLoading: false,\n          error: null,\n        }\n      );\n    },\n    getSingleGameError(state, action: PayloadAction<ItemErrorPayload>) {\n      state[action.payload.itemId] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.itemId],\n        {\n          isLoading: false,\n          error: action.payload.error,\n        }\n      );\n    },\n    abortGameRequest(_state, _action: PayloadAction<number>) {},\n    abortGameSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    abortGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n    resignGameRequest(_state, _action: PayloadAction<number>) {},\n    resignGameSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    resignGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    offerDrawRequest(_state, _action: PayloadAction<number>) {},\n    offerDrawSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    offerDrawError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    acceptDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    acceptDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    acceptDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    declineDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    declineDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    declineDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    flipBoard(state, action: PayloadAction<number>) {\n      state[action.payload].isFlipped = !state[action.payload].isFlipped;\n    },\n    rewindToMove(state, action: PayloadAction<RewindToMovePayload>) {\n      state[action.payload.gameId].rewindToMoveIndex = action.payload.moveIndex;\n    },\n  },\n  extraReducers: {},\n});\n\nexport const {\n  getSingleGameRequest,\n  getSingleGameSuccess,\n  getSingleGameError,\n  flipBoard,\n  rewindToMove,\n  abortGameRequest,\n  abortGameSuccess,\n  abortGameError,\n  resignGameRequest,\n  resignGameSuccess,\n  resignGameError,\n  offerDrawRequest,\n  offerDrawSuccess,\n  offerDrawError,\n  acceptDrawOfferRequest,\n  acceptDrawOfferSuccess,\n  acceptDrawOfferError,\n  declineDrawOfferRequest,\n  declineDrawOfferSuccess,\n  declineDrawOfferError,\n} = singleGameSlice.actions;\n\nexport default singleGameSlice.reducer;\n\nexport const fetchGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(getSingleGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(`/game/${id}`, (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGame = normalize(body as Game, gameSchema);\n        dispatch(getSingleGameSuccess(normalizedGame));\n        resolve(body as Game);\n      } else {\n        dispatch(\n          getSingleGameError({\n            itemId: id,\n            error: body as string,\n          })\n        );\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const abortGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(abortGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/abort`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(abortGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            abortGameError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const resignGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(resignGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/resign`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(resignGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            resignGameError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const offerDraw = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(offerDrawRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(offerDrawSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            offerDrawError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const acceptDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(acceptDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(acceptDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            acceptDrawOfferError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\nexport const declineDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(declineDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/no`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(declineDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            declineDrawOfferError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"GameMoves_selected__2FXRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"GamePreviewsList_grid__2iggX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"GamePreviewResult_result__2DwMU\"};","import socketIOClient from \"socket.io-client\";\nimport sailsIOClient from \"sails.io.js\";\n\nconst ioClient = sailsIOClient(socketIOClient);\n\nioClient.sails.url = \"http://localhost:1337\";\n\nexport default ioClient;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport { JWR } from \"sails.io.js\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport User from \"../../interfaces/User\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport SignUpData from \"../../interfaces/SignUpData\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface CurrentUserState {\n  userId: number | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: CurrentUserState = {\n  userId: null,\n  isLoading: true,\n  error: null,\n};\n\nconst currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    getCurrentUserRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getCurrentUserSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number> | null>\n    ) {\n      state.userId = action.payload ? action.payload.result : null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    getCurrentUserError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    loginSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    registerSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    logoutSuccess(state) {\n      state.userId = null;\n    },\n  },\n});\n\nexport const {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n  loginSuccess,\n  registerSuccess,\n  logoutSuccess,\n} = currentUserSlice.actions;\n\nexport default currentUserSlice.reducer;\n\nexport const fetchCurrentUser = (): AppThunk<Promise<User | null>> => (\n  dispatch\n) => {\n  dispatch(getCurrentUserRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/api/v1/account/me\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedUser = normalize(body as User, userSchema);\n\n        dispatch(getCurrentUserSuccess(normalizedUser));\n        resolve(body as User);\n      } else if (jwr.statusCode === 401) {\n        dispatch(getCurrentUserSuccess(null));\n        resolve(null);\n      } else {\n        dispatch(getCurrentUserError(body as string));\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const login = (data: LoginData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.put(\n      \"/api/v1/entrance/login\",\n      {\n        // rememberMe: true, // because of warning in backend @see https://tracker.yandex.ru/CHESSPWA-47\n        emailAddress: data.email,\n        password: data.password,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(loginSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const register = (data: SignUpData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/entrance/signup\",\n      {\n        fullName: data.fullName,\n        emailAddress: data.email,\n        password: data.password,\n        confirmPassword: data.password,\n        agreed: true,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(registerSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const logout = (): AppThunk<Promise<void>> => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/account/logout\",\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          dispatch(logoutSuccess());\n          resolve();\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\n\nexport interface GamePreviewUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GamePreviewUserName: FC<GamePreviewUserNameProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <span>\n      {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n    </span>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport css from \"./GamePreviewResult.module.scss\";\n\nexport interface GamePreviewResultProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GamePreviewResult: FC<GamePreviewResultProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  let result = \"½\";\n  if (game.winner) {\n    if (game.winner === color) {\n      result = \"1\";\n    } else {\n      result = \"0\";\n    }\n  }\n\n  return <span className={css.result}>{result}</span>;\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\nimport css from \"./GamePreviewClock.module.scss\";\n\nexport interface GamePreviewClockProps {\n  time?: number; // in msec\n  isRunning?: boolean; // in msec\n}\n\nexport const GamePreviewClock: FC<GamePreviewClockProps> = ({\n  time = 0,\n  isRunning = false,\n}) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm:ss\");\n\n  return (\n    <div\n      data-testid=\"time\"\n      className={cx(css.clock, { [css.clockRun]: isRunning })}\n    >\n      {formattedTime}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Board } from \"ii-react-chessboard\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GamePreviewsListItem.module.scss\";\nimport { GamePreviewUserName } from \"./GamePreviewUserName\";\nimport { GamePreviewResult } from \"./GamePreviewResult\";\nimport { GamePreviewClock } from \"./GamePreviewClock\";\n\nexport interface GamePreviewsListItemProps {\n  game?: Game;\n}\n\nexport const GamePreviewsListItem: FC<GamePreviewsListItemProps> = ({\n  game,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const fen: string = makeChessInstance(game).fen();\n\n  return (\n    <div className={css.gamePreview}>\n      <div className={css.player}>\n        <GamePreviewUserName game={game} color=\"black\" />\n        {game.status === \"started\" && (\n          <GamePreviewClock\n            time={game.btime}\n            isRunning={game.turn === \"black\"}\n          />\n        )}\n        {game.status !== \"started\" && game.status !== \"aborted\" && (\n          <GamePreviewResult game={game} color=\"black\" />\n        )}\n      </div>\n      <div className={css.board}>\n        <Link to={`/game/${game.id}`}>\n          <Board position={fen} viewOnly={false} width={240} />\n        </Link>\n      </div>\n      <div className={css.player}>\n        <GamePreviewUserName game={game} color=\"white\" />\n        {game.status === \"started\" && (\n          <GamePreviewClock\n            time={game.wtime}\n            isRunning={game.turn === \"white\"}\n          />\n        )}\n        {game.status !== \"started\" && game.status !== \"aborted\" && (\n          <GamePreviewResult game={game} color=\"white\" />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport css from \"./GamePreviewsList.module.scss\";\nimport { GamePreviewsListItem } from \"./GamePreviewsListItem\";\n\nexport interface GamePreviewsListProps {\n  games?: Game[];\n}\n\nexport const GamePreviewsList: FC<GamePreviewsListProps> = ({ games = [] }) => {\n  return (\n    <div className={css.grid}>\n      {games.map((item) => (\n        <GamePreviewsListItem game={item} key={item.id} />\n      ))}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst limit = 9;\n\nconst OngoingGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter((game: Game) => game.status === \"started\")\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n      .slice(0, limit)\n  );\n\n  return <GamePreviewsList games={games} />;\n};\n\nexport default OngoingGamesContainer;\n","import React, { FC, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface ChallengeButtonsProps {\n  onChallengeAi?(): void;\n}\n\nexport const ChallengeButtons: FC<ChallengeButtonsProps> = ({\n  onChallengeAi,\n}) => {\n  const handleChallengeAi = useCallback(() => {\n    if (onChallengeAi) {\n      onChallengeAi();\n    }\n  }, [onChallengeAi]);\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={handleChallengeAi}\n      data-testid=\"challenge-ai-btn\"\n    >\n      Play with the computer\n    </Button>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeButtons } from \"./ChallengeButtons\";\nimport { showChallengeAiModal } from \"../challenge-ai-modal/challengeAiModalSlice\";\n\nconst ChallengeButtonsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch();\n\n  const handleChallengeAi = useCallback(() => {\n    dispatch(showChallengeAiModal());\n  }, [dispatch]);\n\n  return <ChallengeButtons onChallengeAi={handleChallengeAi} />;\n};\n\nexport default ChallengeButtonsContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Formik, FormikHelpers } from \"formik\";\nimport React, { FC, FormEvent } from \"react\";\nimport cx from \"classnames\";\nimport { Alert, Button, ButtonGroup, Form, Row } from \"react-bootstrap\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport css from \"./ChallengeAiForm.module.scss\";\n\nexport interface ChallengeAiFormProps {\n  onSubmit?(\n    values: ChallengeAiData,\n    formikHelpers: FormikHelpers<ChallengeAiData>\n  ): void | Promise<any>;\n}\n\nexport const ChallengeAiForm: FC<ChallengeAiFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        level: 3,\n        color: \"\",\n        clockLimit: 300,\n        clockIncrement: 3,\n      }}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(\n            values as ChallengeAiData,\n            formikHelpers as FormikHelpers<ChallengeAiData>\n          );\n        }\n        return undefined;\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        setFieldValue,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <fieldset>\n            <Form.Group>\n              <Form.Label>\n                Minutes per side: {values.clockLimit / 60}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockLimit\"\n                onBlur={handleBlur}\n                value={values.clockLimit}\n                onChange={handleChange}\n                min=\"60\"\n                max=\"1800\"\n                step=\"60\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Increment in seconds: {values.clockIncrement}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockIncrement\"\n                onBlur={handleBlur}\n                value={values.clockIncrement}\n                onChange={handleChange}\n                min=\"0\"\n                max=\"60\"\n              />\n            </Form.Group>\n          </fieldset>\n\n          <div className=\"text-center\">Level</div>\n\n          <Row>\n            <ButtonGroup className={cx(\"mx-auto\", css.levelButtonGroup)}>\n              {[1, 2, 3, 4].map((level) => (\n                <Button\n                  key={level}\n                  type=\"button\"\n                  variant={level === values.level ? \"dark\" : \"light\"}\n                  onClick={() => setFieldValue(\"level\", level)}\n                >\n                  {level}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Row>\n\n          <div className=\"text-center\">A.I. Level: {values.level}</div>\n\n          <div className={css.colorSubmits}>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Black\"\n              className={cx(css.colorSubmitsButton, css.blackButton)}\n              onClick={() => setFieldValue(\"color\", \"black\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Random side\"\n              className={cx(css.colorSubmitsButton, css.randomButton)}\n              onClick={() => setFieldValue(\"color\", \"random\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"White\"\n              className={cx(css.colorSubmitsButton, css.whiteButton)}\n              onClick={() => setFieldValue(\"color\", \"white\")}\n            >\n              <i />\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { FormikHelpers } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeAiForm } from \"./ChallengeAiForm\";\nimport { AppDispatch } from \"../../app/store\";\nimport { challengeAi } from \"../challenge/challengeSlice\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport Game from \"../../interfaces/Game\";\n\nconst ChallengeAiFormContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const history = useHistory();\n\n  const challengeAiAndOpenGamePage = useCallback(\n    (\n      values: ChallengeAiData,\n      formikHelpers: FormikHelpers<ChallengeAiData>\n    ) => {\n      return dispatch(challengeAi(values))\n        .then((game: Game) => {\n          history.push(`/game/${game.id}`);\n        })\n        .catch((err) => {\n          if (err.statusCode === 401) {\n            formikHelpers.setStatus(\"You must log in to play with computer\");\n          } else {\n            formikHelpers.setStatus(\"Internal server error\");\n          }\n        });\n    },\n    [dispatch, history]\n  );\n\n  return <ChallengeAiForm onSubmit={challengeAiAndOpenGamePage} />;\n};\n\nexport default ChallengeAiFormContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport ChallengeAiFormContainer from \"../challenge-ai-modal/ChallengeAiFormContainer\";\n\nexport interface ChallengeAiModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const ChallengeAiModal: FC<ChallengeAiModalProps> = ({\n  show = false,\n  onHide,\n}) => {\n  return (\n    <Modal show={show} onHide={onHide} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Play with the computer</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <ChallengeAiFormContainer />\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChallengeAiModal } from \"./ChallengeAiModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideChallengeAiModal } from \"../challenge-ai-modal/challengeAiModalSlice\";\n\nconst ChallengeAiModalContainer: FC<unknown> = () => {\n  const { isChallengeAiModalVisible } = useSelector(\n    (state: RootState) => state.challengeAiModal\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideChallengeAiModal());\n  }, [dispatch]);\n\n  return (\n    <ChallengeAiModal show={isChallengeAiModalVisible} onHide={handleHide} />\n  );\n};\n\nexport default ChallengeAiModalContainer;\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst limit = 9;\n\nconst CompletedGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter(\n        (game: Game) => game.status !== \"started\" && game.status !== \"aborted\"\n      )\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n      .slice(0, limit)\n  );\n\n  return <GamePreviewsList games={games} />;\n};\n\nexport default CompletedGamesContainer;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport OngoingGamesContainer from \"../games-list/OngoingGamesContainer\";\nimport ChallengeButtonsContainer from \"./ChallengeButtonsContainer\";\nimport ChallengeAiModalContainer from \"./ChallengeAiModalContainer\";\nimport CompletedGamesContainer from \"../games-list/CompletedGamesContainer\";\n\nconst HomePage: FC<unknown> = () => {\n  return (\n    <>\n      <ChallengeAiModalContainer />\n      <div className=\"d-flex justify-content-center\">\n        <ChallengeButtonsContainer />\n      </div>\n      <Card className=\"mb-3\">\n        <Card.Body>\n          <Card.Title>Playing right now</Card.Title>\n          <OngoingGamesContainer />\n        </Card.Body>\n      </Card>\n\n      <Card>\n        <Card.Body>\n          <Card.Title>Finished</Card.Title>\n          <CompletedGamesContainer />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport getGameStatusText from \"../../utils/getGameStatusText\";\n\nexport interface GameMetaProps {\n  game?: Game;\n}\n\nexport const GameMeta: FC<GameMetaProps> = ({ game }) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <>\n      <div>{getGameStatusText(game)}</div>\n      <div>\n        {game.clockLimit / 60} + {game.clockIncrement}\n      </div>\n      <div data-testid=\"white-user\">\n        White: {game.white ? game.white.fullName : `AI level ${game.aiLevel}`}\n      </div>\n      <div data-testid=\"black-user\">\n        Black: {game.black ? game.black.fullName : `AI level ${game.aiLevel}`}\n      </div>\n    </>\n  );\n};\n","import Game from \"../interfaces/Game\";\n\nexport default (game: Game): string => {\n  if (game.status === \"outoftime\") {\n    if (game.winner === \"white\") {\n      return \"Time out • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Time out • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"resign\") {\n    if (game.winner === \"black\") {\n      return \"White resigned • Black is victorious\";\n    }\n    if (game.winner === \"white\") {\n      return \"Black resigned • White is victorious\";\n    }\n  }\n\n  if (game.status === \"aborted\") {\n    return \"Game aborted\";\n  }\n\n  if (game.status === \"mate\") {\n    if (game.winner === \"white\") {\n      return \"Checkmate • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Checkmate • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"draw\") {\n    return \"Draw\";\n  }\n\n  if (game.status === \"stalemate\") {\n    return \"Stalemate\";\n  }\n\n  return \"Playing right now\";\n};\n","import React, { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { GameMeta } from \"./GameMeta\";\n\nexport interface SingleGameMetaContainerProps {\n  id: number;\n}\n\nexport const GameMetaContainer: FC<SingleGameMetaContainerProps> = ({ id }) => {\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  if (game) {\n    return <GameMeta game={game} />;\n  }\n  return null;\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\n\nexport interface GameClockProps {\n  time?: number; // in msec\n}\n\nexport const GameClock: FC<GameClockProps> = ({ time = 0 }) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm : ss\");\n\n  return <div data-testid=\"time\">{formattedTime}</div>;\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/click-events-have-key-events */ // @todo\n/* eslint-disable jsx-a11y/interactive-supports-focus */ // @todo\n\nimport React, { FC } from \"react\";\nimport { chunk as _chunk } from \"lodash\";\nimport { Move } from \"chess.js\";\nimport cx from \"classnames\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GameMoves.module.scss\";\n\nexport interface GameMovesProps {\n  game?: Game;\n  rewindToMoveIndex?: number | null;\n  onRewindToMove?(moveIndex: number): void;\n}\n\nconst formatMove = (move: Move): string => {\n  return `${move.from}${move.to}`;\n};\n\nexport const GameMoves: FC<GameMovesProps> = ({\n  game,\n  rewindToMoveIndex = null,\n  onRewindToMove,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chess = makeChessInstance(game);\n\n  const movesHistory = chess.history({ verbose: true });\n\n  const movesPairs = _chunk(movesHistory, 2);\n\n  const makeRewindToMoveHandler = (moveIndex: number) => {\n    return () => {\n      if (onRewindToMove) {\n        onRewindToMove(moveIndex);\n      }\n    };\n  };\n\n  return (\n    <table>\n      <tbody>\n        {movesPairs.map((pair, index) => (\n          <tr key={`move-${index}`}>\n            <td>{index + 1}</td>\n            <td>\n              <div\n                data-testid={`move-${index * 2}`}\n                onClick={makeRewindToMoveHandler(index * 2)}\n                role=\"button\"\n                className={cx({\n                  [css.selected]: rewindToMoveIndex === index * 2,\n                })}\n              >\n                {formatMove(pair[0])}\n              </div>\n            </td>\n            <td>\n              {pair[1] && (\n                <div\n                  data-testid={`move-${index * 2 + 1}`}\n                  onClick={makeRewindToMoveHandler(index * 2 + 1)}\n                  role=\"button\"\n                  className={cx({\n                    [css.selected]: rewindToMoveIndex === index * 2 + 1,\n                  })}\n                >\n                  {formatMove(pair[1])}\n                </div>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\n\nexport interface GameControlPanelUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GameControlPanelUserName: FC<GameControlPanelUserNameProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <div>\n      {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface GameControlPanelTopToolbarProps {\n  isFirstMove?: boolean;\n  isLastMove?: boolean;\n  hasPrevMove?: boolean;\n  hasNextMove?: boolean;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n}\n\nexport const GameControlPanelTopToolbar: FC<GameControlPanelTopToolbarProps> = ({\n  isFirstMove = false,\n  isLastMove = false,\n  hasPrevMove = false,\n  hasNextMove = false,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n}) => {\n  const handleFlipBoard = useCallback(() => {\n    if (onFlipBoard) {\n      onFlipBoard();\n    }\n  }, [onFlipBoard]);\n  const handleRewindToPrevMove = useCallback(() => {\n    if (onRewindToPrevMove) {\n      onRewindToPrevMove();\n    }\n  }, [onRewindToPrevMove]);\n  const handleRewindToNextMove = useCallback(() => {\n    if (onRewindToNextMove) {\n      onRewindToNextMove();\n    }\n  }, [onRewindToNextMove]);\n  const handleRewindToFirstMove = useCallback(() => {\n    if (onRewindToFirstMove) {\n      onRewindToFirstMove();\n    }\n  }, [onRewindToFirstMove]);\n  const handleRewindToLastMove = useCallback(() => {\n    if (onRewindToLastMove) {\n      onRewindToLastMove();\n    }\n  }, [onRewindToLastMove]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-testid=\"flip-board-btn\"\n        onClick={handleFlipBoard}\n      >\n        Flip board\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-prev-move-btn\"\n        onClick={handleRewindToPrevMove}\n        disabled={!hasPrevMove}\n      >\n        Rewind to prev move\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-first-move-btn\"\n        onClick={handleRewindToFirstMove}\n        disabled={isFirstMove}\n      >\n        Rewind to first move\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-last-move-btn\"\n        onClick={handleRewindToLastMove}\n        disabled={isLastMove}\n      >\n        Rewind to last move\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-next-move-btn\"\n        onClick={handleRewindToNextMove}\n        disabled={!hasNextMove}\n      >\n        Rewind to next move\n      </button>\n    </>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface GameControlPanelBottomToolbarProps {\n  canAbortGame?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanelBottomToolbar: FC<GameControlPanelBottomToolbarProps> = ({\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  const handleAbortGame = useCallback(() => {\n    if (onAbortGame) {\n      onAbortGame();\n    }\n  }, [onAbortGame]);\n  const handleOfferDraw = useCallback(() => {\n    if (onOfferDraw) {\n      onOfferDraw();\n    }\n  }, [onOfferDraw]);\n  const handleResignGame = useCallback(() => {\n    if (onResignGame) {\n      onResignGame();\n    }\n  }, [onResignGame]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-testid=\"abort-game-btn\"\n        onClick={handleAbortGame}\n        disabled={!canAbortGame}\n      >\n        Abort\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"offer-draw-btn\"\n        onClick={handleOfferDraw}\n        disabled={!canOfferDraw}\n      >\n        Offer a draw\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"resign-game-btn\"\n        onClick={handleResignGame}\n        disabled={!canResignGame}\n      >\n        Resign\n      </button>\n    </>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface DrawOfferDialogProps {\n  onAccept?(): void;\n  onDecline?(): void;\n}\n\nexport const DrawOfferDialog: FC<DrawOfferDialogProps> = ({\n  onAccept,\n  onDecline,\n}) => {\n  const handleAccept = useCallback(() => {\n    if (onAccept) {\n      onAccept();\n    }\n  }, [onAccept]);\n\n  const handleDecline = useCallback(() => {\n    if (onDecline) {\n      onDecline();\n    }\n  }, [onDecline]);\n\n  return (\n    <div>\n      <button type=\"button\" data-testid=\"accept-btn\" onClick={handleAccept}>\n        Accept\n      </button>\n      <button type=\"button\" data-testid=\"decline-btn\" onClick={handleDecline}>\n        Decline\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport { GameClock } from \"./GameClock\";\nimport { GameMoves } from \"./GameMoves\";\nimport { GameControlPanelUserName } from \"./GameControlPanelUserName\";\nimport { GameControlPanelTopToolbar } from \"./GameControlPanelTopToolbar\";\nimport { GameControlPanelBottomToolbar } from \"./GameControlPanelBottomToolbar\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport { DrawOfferDialog } from \"./DrawOfferDialog\";\n\nexport interface GameControlPanelProps {\n  game?: Game;\n  orientation?: PieceColor;\n  rewindToMoveIndex?: number | null;\n  canAbortGame?: boolean;\n  canDrawOffer?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  drawOfferSentByCurrentUser?: boolean;\n  drawOfferSentByOpponent?: boolean;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onRewindToMove?(moveIndex: number): void;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanel: FC<GameControlPanelProps> = ({\n  game,\n  orientation = \"white\",\n  rewindToMoveIndex = null,\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  drawOfferSentByCurrentUser = false,\n  drawOfferSentByOpponent = false,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onRewindToMove,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chess = makeChessInstance(game);\n\n  const movesHistory = chess.history();\n\n  const isFirstMove = movesHistory.length <= 1 || rewindToMoveIndex === 0;\n\n  const isLastMove = rewindToMoveIndex === null;\n\n  const hasPrevMove = movesHistory.length > 1 && rewindToMoveIndex !== 0;\n\n  const hasNextMove = rewindToMoveIndex !== null;\n\n  return (\n    <div>\n      <GameClock time={orientation === \"white\" ? game.btime : game.wtime} />\n      <GameControlPanelUserName\n        game={game}\n        color={orientation === \"white\" ? \"black\" : \"white\"}\n      />\n      <GameControlPanelTopToolbar\n        isFirstMove={isFirstMove}\n        isLastMove={isLastMove}\n        hasPrevMove={hasPrevMove}\n        hasNextMove={hasNextMove}\n        onFlipBoard={onFlipBoard}\n        onRewindToPrevMove={onRewindToPrevMove}\n        onRewindToNextMove={onRewindToNextMove}\n        onRewindToFirstMove={onRewindToFirstMove}\n        onRewindToLastMove={onRewindToLastMove}\n      />\n      <GameMoves\n        game={game}\n        rewindToMoveIndex={rewindToMoveIndex}\n        onRewindToMove={onRewindToMove}\n      />\n      {drawOfferSentByOpponent && (\n        <DrawOfferDialog\n          onAccept={onAcceptDrawOffer}\n          onDecline={onDeclineDrawOffer}\n        />\n      )}\n      {drawOfferSentByCurrentUser && (\n        <div data-testid=\"draw-offer-sent-message\">Draw offer sent</div>\n      )}\n      <GameControlPanelBottomToolbar\n        canAbortGame={canAbortGame}\n        canOfferDraw={canOfferDraw}\n        canResignGame={canResignGame}\n        onAbortGame={onAbortGame}\n        onOfferDraw={onOfferDraw}\n        onResignGame={onResignGame}\n      />\n      <GameControlPanelUserName\n        game={game}\n        color={orientation === \"white\" ? \"white\" : \"black\"}\n      />\n      <GameClock time={orientation === \"white\" ? game.wtime : game.btime} />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ChessInstance } from \"chess.js\";\nimport { PieceColor } from \"ii-react-chessboard\";\nimport Game from \"../../interfaces/Game\";\nimport { GameControlPanel } from \"./GameControlPanel\";\nimport User from \"../../interfaces/User\";\nimport { PieceColor as AppPieceColor } from \"../../types/PieceColor\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\n\nexport interface SingleGameControlPanelWrapperProps {\n  game?: Game;\n  currentUser?: User;\n  isFlipped?: boolean;\n  rewindToMoveIndex?: number | null;\n  onFlipBoard?(): void;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n  onRewindToMove?(moveIndex: number | null): void;\n}\n\nexport const GameControlPanelWrapper: FC<SingleGameControlPanelWrapperProps> = ({\n  game,\n  currentUser,\n  isFlipped = false,\n  rewindToMoveIndex = null,\n  onFlipBoard,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n  onRewindToMove,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chessWithAllMoves: ChessInstance = makeChessInstance(game);\n\n  const movesHistory = chessWithAllMoves.history({ verbose: true });\n\n  let orientation = PieceColor.WHITE;\n  if (currentUser && currentUser.id === game.black?.id) {\n    orientation = PieceColor.BLACK;\n  }\n  if (isFlipped) {\n    orientation =\n      orientation === PieceColor.WHITE ? PieceColor.BLACK : PieceColor.WHITE;\n  }\n\n  let playerPiecesColor: AppPieceColor | null = null;\n  if (currentUser) {\n    if (currentUser.id === game.white?.id) {\n      playerPiecesColor = \"white\";\n    } else if (currentUser.id === game.black?.id) {\n      playerPiecesColor = \"black\";\n    }\n  }\n\n  let drawOfferSentByCurrentUser = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer === playerPiecesColor\n  ) {\n    drawOfferSentByCurrentUser = true;\n  }\n\n  let drawOfferSentByOpponent = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer !== null &&\n    game.drawOffer !== playerPiecesColor\n  ) {\n    drawOfferSentByOpponent = true;\n  }\n\n  let canAbortGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesHistory.length < 2\n  ) {\n    canAbortGame = true;\n  }\n\n  let canResignGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesHistory.length > 1\n  ) {\n    canResignGame = true;\n  }\n\n  let canOfferDraw = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.drawOffer === null &&\n    game.aiLevel === 0 &&\n    game.status === \"started\" &&\n    movesHistory.length > 1\n  ) {\n    canOfferDraw = true;\n  }\n\n  // @todo. use useCallback hook\n  const handleRewindToMove = (moveIndex: number) => {\n    if (onRewindToMove) {\n      if (moveIndex === movesHistory.length - 1) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove(moveIndex);\n      }\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToFirstMove = () => {\n    if (onRewindToMove) {\n      onRewindToMove(0);\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToLastMove = () => {\n    if (onRewindToMove) {\n      onRewindToMove(null);\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToPrevMove = () => {\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === null) {\n        onRewindToMove(movesHistory.length - 2);\n      } else {\n        onRewindToMove(rewindToMoveIndex - 1);\n      }\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToNextMove = () => {\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === movesHistory.length - 2) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove((rewindToMoveIndex as number) + 1);\n      }\n    }\n  };\n\n  return (\n    <GameControlPanel\n      game={game}\n      orientation={orientation as AppPieceColor}\n      rewindToMoveIndex={rewindToMoveIndex}\n      canAbortGame={canAbortGame}\n      canResignGame={canResignGame}\n      canOfferDraw={canOfferDraw}\n      drawOfferSentByCurrentUser={drawOfferSentByCurrentUser}\n      drawOfferSentByOpponent={drawOfferSentByOpponent}\n      onAcceptDrawOffer={onAcceptDrawOffer}\n      onDeclineDrawOffer={onDeclineDrawOffer}\n      onFlipBoard={onFlipBoard}\n      onAbortGame={onAbortGame}\n      onOfferDraw={onOfferDraw}\n      onResignGame={onResignGame}\n      onRewindToMove={handleRewindToMove}\n      onRewindToFirstMove={handleRewindToFirstMove}\n      onRewindToLastMove={handleRewindToLastMove}\n      onRewindToPrevMove={handleRewindToPrevMove}\n      onRewindToNextMove={handleRewindToNextMove}\n    />\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { GameControlPanelWrapper } from \"./GameControlPanelWrapper\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport {\n  abortGame,\n  acceptDrawOffer,\n  declineDrawOffer,\n  defaultSingleGameItemState,\n  flipBoard,\n  offerDraw,\n  resignGame,\n  rewindToMove,\n} from \"./singleGameSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nexport interface SingleGameControlPanelContainerProps {\n  id: number;\n}\n\nexport const GameControlPanelContainer: FC<SingleGameControlPanelContainerProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  const currentUser: User | undefined = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return undefined;\n  });\n\n  const handleFlipBoard = useCallback(() => {\n    dispatch(flipBoard(id));\n  }, [dispatch, id]);\n\n  const handleAbortGame = useCallback(() => {\n    dispatch(abortGame(id));\n  }, [dispatch, id]);\n\n  const handleAcceptDrawOffer = useCallback(() => {\n    dispatch(acceptDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleDeclineDrawOffer = useCallback(() => {\n    dispatch(declineDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleResignGame = useCallback(() => {\n    dispatch(resignGame(id));\n  }, [dispatch, id]);\n\n  const handleOfferDraw = useCallback(() => {\n    dispatch(offerDraw(id));\n  }, [dispatch, id]);\n\n  const handleRewindToMove = useCallback(\n    (moveIndex: number | null) => {\n      dispatch(\n        rewindToMove({\n          moveIndex,\n          gameId: id,\n        })\n      );\n    },\n    [dispatch, id]\n  );\n\n  if (game) {\n    return (\n      <GameControlPanelWrapper\n        game={game}\n        currentUser={currentUser}\n        isFlipped={singleGameItemState.isFlipped}\n        rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n        onFlipBoard={handleFlipBoard}\n        onAbortGame={handleAbortGame}\n        onAcceptDrawOffer={handleAcceptDrawOffer}\n        onDeclineDrawOffer={handleDeclineDrawOffer}\n        onOfferDraw={handleOfferDraw}\n        onResignGame={handleResignGame}\n        onRewindToMove={handleRewindToMove}\n      />\n    );\n  }\n  return null;\n};\n","import React, { FC } from \"react\";\nimport {\n  Board,\n  getValidMoves,\n  Move,\n  PieceColor,\n  ValidMoves,\n} from \"ii-react-chessboard\";\nimport { ChessInstance } from \"chess.js\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport User from \"../../interfaces/User\";\n\nexport interface SingleGameBoardProps {\n  currentUser?: User;\n  game?: Game;\n  isFlipped?: boolean;\n  onMove?(move: Move): void;\n  rewindToMoveIndex?: number | null;\n}\n\nexport const SingleGameBoard: FC<SingleGameBoardProps> = ({\n  currentUser,\n  game,\n  isFlipped = false,\n  onMove,\n  rewindToMoveIndex = null,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chessWithAllMoves: ChessInstance = makeChessInstance(game);\n\n  const chess: ChessInstance =\n    rewindToMoveIndex === null\n      ? chessWithAllMoves\n      : makeChessInstance(game, rewindToMoveIndex);\n\n  const fen: string = chess.fen();\n\n  const check: boolean = chess.in_check();\n\n  const turnColor: PieceColor =\n    game.turn === \"white\" ? PieceColor.WHITE : PieceColor.BLACK;\n\n  const validMoves: ValidMoves = getValidMoves(chess);\n\n  let viewOnly = true;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    rewindToMoveIndex === null\n  ) {\n    viewOnly = false;\n  }\n\n  let movableColor: PieceColor | undefined;\n  if (currentUser && currentUser.id === game.white?.id) {\n    movableColor = PieceColor.WHITE;\n  }\n  if (currentUser && currentUser.id === game.black?.id) {\n    movableColor = PieceColor.BLACK;\n  }\n\n  let orientation = PieceColor.WHITE;\n  if (currentUser && currentUser.id === game.black?.id) {\n    orientation = PieceColor.BLACK;\n  }\n  if (isFlipped) {\n    orientation =\n      orientation === PieceColor.WHITE ? PieceColor.BLACK : PieceColor.WHITE;\n  }\n\n  const movesHistory = chessWithAllMoves.history({ verbose: true });\n\n  let lastMoveSquares: string[] | undefined;\n  if (rewindToMoveIndex === null) {\n    if (movesHistory.length) {\n      const lastMove = movesHistory[movesHistory.length - 1];\n      lastMoveSquares = [lastMove.from, lastMove.to];\n    }\n  } else {\n    const lastMove = movesHistory[rewindToMoveIndex];\n    lastMoveSquares = [lastMove.from, lastMove.to];\n  }\n\n  return (\n    <Board\n      allowMarkers\n      check={check}\n      clickable\n      draggable\n      lastMoveSquares={lastMoveSquares}\n      movableColor={movableColor}\n      onMove={onMove}\n      orientation={orientation}\n      position={fen}\n      turnColor={turnColor}\n      validMoves={validMoves}\n      viewOnly={viewOnly}\n    />\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Move } from \"ii-react-chessboard\";\nimport { denormalize } from \"normalizr\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { SingleGameBoard } from \"./SingleGameBoard\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { defaultSingleGameItemState } from \"./singleGameSlice\";\nimport { makeMove } from \"../move/moveSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nexport interface SingleGameBoardProps {\n  id: number;\n}\n\nexport const SingleGameBoardContainer: FC<SingleGameBoardProps> = ({ id }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  const currentUser: User | undefined = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return undefined;\n  });\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  const handleMove = useCallback(\n    (move: Move) => {\n      dispatch(makeMove(id, `${move.from}${move.to}`));\n    },\n    [dispatch, id]\n  );\n\n  if (game) {\n    return (\n      <SingleGameBoard\n        game={game}\n        currentUser={currentUser}\n        isFlipped={singleGameItemState.isFlipped}\n        rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n        onMove={handleMove}\n      />\n    );\n  }\n  return null;\n};\n","import React, { FC, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { GameMetaContainer } from \"./GameMetaContainer\";\nimport { GameControlPanelContainer } from \"./GameControlPanelContainer\";\nimport { SingleGameBoardContainer } from \"./SingleGameBoardContainer\";\nimport { fetchGame } from \"./singleGameSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\ninterface GamePageParams {\n  id: string;\n}\n\nconst GamePage: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { id } = useParams<GamePageParams>();\n\n  const idAsNumber = Number(id);\n\n  useEffect(() => {\n    dispatch(fetchGame(idAsNumber));\n  }, [dispatch, idAsNumber]);\n\n  return (\n    <>\n      <GameMetaContainer id={idAsNumber} />\n      <GameControlPanelContainer id={idAsNumber} />\n      <SingleGameBoardContainer id={idAsNumber} />\n    </>\n  );\n};\n\nexport default GamePage;\n","import React, { FC, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport User from \"../../interfaces/User\";\n\nexport interface HeaderProps {\n  currentUser?: User | null;\n  onLogout?(): void;\n  onShowAuthModal?(): void;\n}\n\nexport const Header: FC<HeaderProps> = ({\n  currentUser = null,\n  onLogout,\n  onShowAuthModal,\n}) => {\n  const handleLogout = useCallback(() => {\n    if (onLogout) {\n      onLogout();\n    }\n  }, [onLogout]);\n\n  const handleShowAuthModal = useCallback(() => {\n    if (onShowAuthModal) {\n      onShowAuthModal();\n    }\n  }, [onShowAuthModal]);\n\n  return (\n    <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n      <div className=\"offset-4 col-4 text-center\">\n        <Link className=\"blog-header-logo text-dark\" to=\"/\">\n          Chess PWA\n        </Link>\n      </div>\n      <div className=\"col-4 d-flex justify-content-end align-items-center\">\n        {currentUser ? (\n          <>\n            <div className=\"mr-3\">Hi, {currentUser.fullName}</div>\n            <Button\n              className=\"btn btn-sm btn-danger mr-3\"\n              data-testid=\"logout-btn\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </>\n        ) : (\n          <Button\n            className=\"btn btn-sm btn-success mr-3\"\n            data-testid=\"login-btn\"\n            onClick={handleShowAuthModal}\n          >\n            Login / Register\n          </Button>\n        )}\n\n        <a\n          href=\"https://github.com/ildar-icoosoft/chess-pwa\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/imgs/GitHub-Mark-32px.png`}\n            alt=\"\"\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from \"./Header\";\nimport User from \"../../interfaces/User\";\nimport { RootState } from \"../../app/rootReducer\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { logout } from \"../current-user/currentUserSlice\";\nimport { showAuthModal } from \"../auth-modal/authModalSlice\";\n\nconst HeaderContainer: FC<unknown> = () => {\n  const currentUser: User | null = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return null;\n  });\n\n  const dispatch = useDispatch();\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  const handleShowAuthModal = useCallback(() => {\n    dispatch(showAuthModal());\n  }, [dispatch]);\n\n  return (\n    <Header\n      currentUser={currentUser}\n      onLogout={handleLogout}\n      onShowAuthModal={handleShowAuthModal}\n    />\n  );\n};\n\nexport default HeaderContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport LoginData from \"../../interfaces/LoginData\";\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n});\n\nexport interface LoginFormProps {\n  onSubmit?(\n    values: LoginData,\n    formikHelpers: FormikHelpers<LoginData>\n  ): void | Promise<any>;\n}\n\nexport const LoginForm: FC<LoginFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={loginSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as LoginData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { FormikHelpers } from \"formik/dist/types\";\n\nconst registrationSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n  confirmPassword: Yup.string()\n    .equals([Yup.ref(\"password\")], \"Please repeat the password\")\n    .required(\"Required\"),\n});\n\nexport interface RegistrationFormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface RegistrationFormProps {\n  onSubmit?(\n    values: RegistrationFormData,\n    formikHelpers: FormikHelpers<RegistrationFormData>\n  ): void | Promise<any>;\n}\n\nexport const RegistrationForm: FC<RegistrationFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        fullName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={registrationSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as RegistrationFormData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n\n          <Form.Group>\n            <Form.Label>Full name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"Enter full name\"\n              onBlur={handleBlur}\n              value={values.fullName}\n              onChange={handleChange}\n              isValid={touched.fullName && !errors.fullName}\n              isInvalid={touched.fullName && !!errors.fullName}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.fullName}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.confirmPassword}\n              isValid={touched.confirmPassword && !errors.confirmPassword}\n              isInvalid={touched.confirmPassword && !!errors.confirmPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.confirmPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikHelpers } from \"formik\";\nimport { LoginForm } from \"./LoginForm\";\nimport { RegistrationForm, RegistrationFormData } from \"./RegistrationForm\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport { login, register } from \"../current-user/currentUserSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nconst LoginTabsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const doLogin = React.useCallback(\n    (values: LoginData, formikHelpers: FormikHelpers<LoginData>) => {\n      return dispatch(login(values)).catch((err) => {\n        if (err.statusCode === 401) {\n          formikHelpers.setStatus(\"Incorrect email or password\");\n        } else {\n          formikHelpers.setStatus(\"Internal server error\");\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const doSignUp = React.useCallback(\n    (\n      values: RegistrationFormData,\n      formikHelpers: FormikHelpers<RegistrationFormData>\n    ) => {\n      return dispatch(\n        register({\n          fullName: values.fullName,\n          email: values.email,\n          password: values.password,\n        })\n      ).catch((err) => {\n        if (err.statusCode === 409) {\n          formikHelpers.setStatus(\n            \"The provided email address is already in use\"\n          );\n        } else {\n          formikHelpers.setStatus(\"Internal server error\");\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <Tabs transition={false}>\n      <Tab eventKey=\"home\" title=\"Login\">\n        <LoginForm onSubmit={doLogin} />\n      </Tab>\n      <Tab eventKey=\"profile\" title=\"Register\">\n        <RegistrationForm onSubmit={doSignUp} />\n      </Tab>\n    </Tabs>\n  );\n};\n\nexport default LoginTabsContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport LoginTabsContainer from \"./LoginTabsContainer\";\n\nexport interface AuthModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const AuthModal: FC<AuthModalProps> = ({ show = false, onHide }) => {\n  return (\n    <div>\n      <Modal show={show} onHide={onHide} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoginTabsContainer />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthModal } from \"./AuthModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideAuthModal } from \"./authModalSlice\";\n\nconst AuthModalContainer: FC<unknown> = () => {\n  const { isAuthModalVisible } = useSelector(\n    (state: RootState) => state.authModal\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideAuthModal());\n  }, [dispatch]);\n\n  return <AuthModal show={isAuthModalVisible} onHide={handleHide} />;\n};\n\nexport default AuthModalContainer;\n","import React, { FC, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport HomePage from \"../features/home-page/HomePage\";\nimport GamePage from \"../features/single-game/GamePage\";\nimport { fetchCurrentUser } from \"../features/current-user/currentUserSlice\";\nimport { watchGames } from \"../features/data-subscription/dataSubscriptionSlice\";\nimport { startGameClock } from \"../features/game-clock/gameClockSlice\";\nimport HeaderContainer from \"../features/header/HeaderContainer\";\nimport AuthModalContainer from \"../features/auth-modal/AuthModalContainer\";\nimport { fetchGames } from \"../features/games-list/gamesListSlice\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n    dispatch(watchGames());\n    dispatch(startGameClock());\n    dispatch(fetchGames());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <HeaderContainer />\n        <AuthModalContainer />\n\n        <Switch>\n          <Route path=\"/game/:id\">\n            <GamePage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  getCurrentUserSuccess,\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\nimport { getGamesListSuccess } from \"../games-list/gamesListSlice\";\nimport {\n  getSingleGameSuccess,\n  abortGameSuccess,\n  resignGameSuccess,\n  offerDrawSuccess,\n  acceptDrawOfferSuccess,\n  declineDrawOfferSuccess,\n} from \"../single-game/singleGameSlice\";\nimport { challengeAiSuccess } from \"../challenge/challengeSlice\";\nimport { oneSecondPassed } from \"../game-clock/gameClockSlice\";\nimport {\n  updateGameBySubscription,\n  createGameBySubscription,\n} from \"../data-subscription/dataSubscriptionSlice\";\nimport {\n  makeMoveRequest,\n  makeMoveSuccess,\n  MoveRequestPayload,\n} from \"../move/moveSlice\";\nimport NormalizedUserEntity from \"../../normalizr/interfaces/NormalizedUserEntity\";\nimport NormalizedGameEntity from \"../../normalizr/interfaces/NormalizedGameEntity\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\n\nexport interface EntitiesState {\n  users: Record<string, NormalizedUserEntity>;\n  games: Record<string, NormalizedGameEntity>;\n}\n\nconst initialState: EntitiesState = {\n  users: {},\n  games: {},\n};\n\nconst getNormalizedDataReducer = (\n  state: EntitiesState,\n  action: PayloadAction<{\n    entities: Partial<EntitiesState>;\n  }>\n) => {\n  Object.assign(state.users, action.payload.entities.users);\n  Object.assign(state.games, action.payload.entities.games);\n};\n\nconst entitiesSlice = createSlice({\n  name: \"entities\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getCurrentUserSuccess.type]: (\n      state: EntitiesState,\n      action: PayloadAction<null | {\n        entities: Partial<EntitiesState>;\n      }>\n    ) => {\n      if (action.payload) {\n        getNormalizedDataReducer(state, {\n          type: action.type,\n          payload: action.payload,\n        });\n      }\n    },\n    [loginSuccess.type]: getNormalizedDataReducer,\n    [registerSuccess.type]: getNormalizedDataReducer,\n    [getGamesListSuccess.type]: getNormalizedDataReducer,\n    [getSingleGameSuccess.type]: getNormalizedDataReducer,\n    [abortGameSuccess.type]: getNormalizedDataReducer,\n    [resignGameSuccess.type]: getNormalizedDataReducer,\n    [offerDrawSuccess.type]: getNormalizedDataReducer,\n    [acceptDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [declineDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [challengeAiSuccess.type]: getNormalizedDataReducer,\n    [updateGameBySubscription.type]: getNormalizedDataReducer,\n    [createGameBySubscription.type]: getNormalizedDataReducer,\n    [makeMoveRequest.type]: (\n      state: EntitiesState,\n      action: PayloadAction<MoveRequestPayload>\n    ) => {\n      state.games[action.payload.gameId].turn =\n        state.games[action.payload.gameId].turn === \"white\" ? \"black\" : \"white\";\n      state.games[action.payload.gameId].moves = `${\n        state.games[action.payload.gameId].moves\n      } ${action.payload.move}`.trim();\n    },\n    [makeMoveSuccess.type]: getNormalizedDataReducer,\n    [oneSecondPassed.type]: (state: EntitiesState) => {\n      const gameIds = Object.keys(state.games);\n\n      gameIds.forEach((gameId) => {\n        const game = state.games[gameId];\n\n        if (game.status === \"started\") {\n          const chess = makeChessInstance(game);\n\n          if (chess.history().length > 1) {\n            const timePropName = game.turn === \"white\" ? \"wtime\" : \"btime\";\n\n            game[timePropName] -= 1000;\n            if (game[timePropName] < 0) {\n              game[timePropName] = 0;\n            }\n\n            if (game[timePropName] === 0) {\n              game.status = \"outoftime\";\n              game.winner = game.turn === \"white\" ? \"black\" : \"white\";\n            }\n          }\n        }\n      });\n    },\n  },\n});\n\nexport default entitiesSlice.reducer;\n","/* eslint-disable import/no-cycle */\n\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport gamesListReducer from \"../features/games-list/gamesListSlice\";\nimport currentUserReducer from \"../features/current-user/currentUserSlice\";\nimport authModalReducer from \"../features/auth-modal/authModalSlice\";\nimport challengeAiModalReducer from \"../features/challenge-ai-modal/challengeAiModalSlice\";\nimport entitiesReducer from \"../features/entities/entitiesSlice\";\nimport singleGameReducer from \"../features/single-game/singleGameSlice\";\n// import dataSubscriptionReducer from \"../redux/slices/dataSubscriptionSlice\";\n\nconst rootReducer = combineReducers({\n  authModal: authModalReducer,\n  challengeAiModal: challengeAiModalReducer,\n  // challenge: challengeReducer,\n  currentUser: currentUserReducer,\n  gamesList: gamesListReducer,\n  entities: entitiesReducer,\n  // dataSubscription: dataSubscriptionReducer,\n  singleGame: singleGameReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-cycle */\n\nimport { Action, configureStore } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk<R> = ThunkAction<R, RootState, unknown, Action<string>>;\n\nexport default store;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./app/store\";\n\nconst render = () => {\n  const App = require(\"./app/App\").default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./app/App\", render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Chess, ChessInstance } from \"chess.js\";\nimport Game from \"../interfaces/Game\";\n\nconst startPositionFen =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nexport default (\n  game: Pick<Game, \"initialFen\" | \"moves\">,\n  rewindToMoveIndex: number | null = null\n): ChessInstance => {\n  let { initialFen } = game;\n  if (initialFen === \"startpos\") {\n    initialFen = startPositionFen;\n  }\n\n  const chess = new Chess(initialFen);\n\n  if (game.moves) {\n    game.moves.split(\" \").forEach((move, index) => {\n      if (rewindToMoveIndex !== null && index > rewindToMoveIndex) {\n        return;\n      }\n\n      const result = chess.move(move, {\n        sloppy: true,\n      });\n\n      if (!result) {\n        throw Error(`incorrect move: ${move}`);\n      }\n    });\n  }\n\n  return chess;\n};\n","import { schema } from \"normalizr\";\n\nconst userSchema = new schema.Entity(\"users\");\n\nexport default userSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"levelButtonGroup\":\"ChallengeAiForm_levelButtonGroup__1lnm_\",\"colorSubmits\":\"ChallengeAiForm_colorSubmits__1pM28\",\"colorSubmitsButton\":\"ChallengeAiForm_colorSubmitsButton__2P6Lx\",\"whiteButton\":\"ChallengeAiForm_whiteButton__2nTjs\",\"blackButton\":\"ChallengeAiForm_blackButton__1LVeL\",\"randomButton\":\"ChallengeAiForm_randomButton__1S07l\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface GamesListState {\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: GamesListState = {\n  isLoading: true,\n  error: null,\n};\n\nconst gamesListSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    getGamesListRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getGamesListSuccess(\n      state,\n      _action: PayloadAction<NormalizedData<number[]>>\n    ) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getGamesListError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getGamesListRequest,\n  getGamesListSuccess,\n  getGamesListError,\n} = gamesListSlice.actions;\n\nexport default gamesListSlice.reducer;\n\nexport const fetchGames = (): AppThunk<Promise<Game[]>> => (dispatch) => {\n  dispatch(getGamesListRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/game\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGames = normalize(body as Game[], [gameSchema]);\n        dispatch(getGamesListSuccess(normalizedGames));\n\n        resolve(body as Game[]);\n      } else {\n        dispatch(getGamesListError(body as string));\n        reject(jwr);\n      }\n    });\n  });\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\n\ninterface AuthModalState {\n  isAuthModalVisible: boolean;\n}\n\nconst initialState: AuthModalState = {\n  isAuthModalVisible: false,\n};\n\nconst authModalSlice = createSlice({\n  name: \"authModal\",\n  initialState,\n  reducers: {\n    showAuthModal(state) {\n      state.isAuthModalVisible = true;\n    },\n    hideAuthModal(state) {\n      state.isAuthModalVisible = false;\n    },\n  },\n  extraReducers: {\n    [loginSuccess.type]: (state) => {\n      state.isAuthModalVisible = false;\n    },\n    [registerSuccess.type]: (state) => {\n      state.isAuthModalVisible = false;\n    },\n  },\n});\n\nexport const { showAuthModal, hideAuthModal } = authModalSlice.actions;\n\nexport default authModalSlice.reducer;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { challengeAiSuccess } from \"../challenge/challengeSlice\";\n\ninterface ChallengeAiModalState {\n  isChallengeAiModalVisible: boolean;\n}\n\nconst initialState: ChallengeAiModalState = {\n  isChallengeAiModalVisible: false,\n};\n\nconst challengeAiModalSlice = createSlice({\n  name: \"challengeAiModal\",\n  initialState,\n  reducers: {\n    showChallengeAiModal(state) {\n      state.isChallengeAiModalVisible = true;\n    },\n    hideChallengeAiModal(state) {\n      state.isChallengeAiModalVisible = false;\n    },\n  },\n  extraReducers: {\n    [challengeAiSuccess.type]: (state) => {\n      state.isChallengeAiModalVisible = false;\n    },\n  },\n});\n\nexport const {\n  showChallengeAiModal,\n  hideChallengeAiModal,\n} = challengeAiModalSlice.actions;\n\nexport default challengeAiModalSlice.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface ChallengeState {}\n\nconst initialState: ChallengeState = {};\n\nconst challengeSlice = createSlice({\n  name: \"challenge\",\n  initialState,\n  reducers: {\n    challengeAiRequest() {},\n    challengeAiSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    challengeAiError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  challengeAiRequest,\n  challengeAiSuccess,\n  challengeAiError,\n} = challengeSlice.actions;\n\nexport default challengeSlice.reducer;\n\nexport const challengeAi = (data: ChallengeAiData): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(challengeAiRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/challenge/ai`,\n      data,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(challengeAiSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(challengeAiError(body as string));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport { SubscriptionData } from \"../../interfaces/SubscriptionData\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface DataSubscriptionState {}\n\nconst initialState: DataSubscriptionState = {};\n\nconst dataSubscriptionSlice = createSlice({\n  name: \"dataSubscription\",\n  initialState,\n  reducers: {\n    updateGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  updateGameBySubscription,\n  createGameBySubscription,\n} = dataSubscriptionSlice.actions;\n\nexport default dataSubscriptionSlice.reducer;\n\nexport const watchGames = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"game\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"updated\") {\n      const game = {\n        ...subscriptionData.previous,\n        ...subscriptionData.data,\n      };\n\n      const normalizedGame = normalize(game, gameSchema);\n\n      dispatch(updateGameBySubscription(normalizedGame));\n    } else if (subscriptionData.verb === \"created\") {\n      const normalizedGame = normalize(subscriptionData.data, gameSchema);\n\n      dispatch(createGameBySubscription(normalizedGame));\n    }\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface MoveState {}\n\nconst initialState: MoveState = {};\n\nconst moveSlice = createSlice({\n  name: \"move\",\n  initialState,\n  reducers: {\n    makeMoveRequest(_state, _action: PayloadAction<MoveRequestPayload>) {},\n    makeMoveSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    makeMoveError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  makeMoveRequest,\n  makeMoveSuccess,\n  makeMoveError,\n} = moveSlice.actions;\n\nexport default moveSlice.reducer;\n\nexport interface MoveRequestPayload {\n  gameId: number;\n  move: string;\n}\n\nexport const makeMove = (\n  gameId: number,\n  move: string\n): AppThunk<Promise<Game>> => (dispatch) => {\n  dispatch(\n    makeMoveRequest({\n      gameId,\n      move,\n    })\n  );\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${gameId}/move/${move}`,\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(makeMoveSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(makeMoveError(body as string));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePreview\":\"GamePreviewsListItem_gamePreview__wYvMw\",\"player\":\"GamePreviewsListItem_player__1GbNi\",\"board\":\"GamePreviewsListItem_board__2y4Yc\"};"],"sourceRoot":""}