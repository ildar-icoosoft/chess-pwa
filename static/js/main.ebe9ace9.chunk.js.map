{"version":3,"sources":["features/game-clock/gameClockSlice.ts","normalizr/schemas/gameSchema.ts","features/single-game/GameClock.module.scss","features/single-game/GameControlPanelStatus.module.scss","features/single-game/singleGameSlice.ts","features/games-list/GamePreviewClock.module.scss","features/single-game/GameControlPanel.module.scss","services/ioClient.ts","features/games-list/GamePreviewsList.module.scss","features/games-list/GamePreviewResult.module.scss","features/single-game/GameControlPanelUserName.module.scss","features/single-game/GameControlPanelTopToolbar.module.scss","features/single-game/GameControlPanelBottomToolbar.module.scss","features/single-game/SingleGameBoard.module.scss","features/current-user/currentUserSlice.ts","features/games-list/GamePreviewUserName.tsx","features/games-list/GamePreviewResult.tsx","features/games-list/GamePreviewClock.tsx","features/games-list/GamePreviewsListItem.tsx","features/games-list/GamePreviewsList.tsx","features/games-list/OngoingGamesContainer.tsx","features/home-page/ChallengeButtons.tsx","features/home-page/ChallengeButtonsContainer.tsx","features/challenge-ai-modal/ChallengeAiForm.tsx","features/challenge-ai-modal/ChallengeAiFormContainer.tsx","features/home-page/ChallengeAiModal.tsx","features/home-page/ChallengeAiModalContainer.tsx","features/games-list/CompletedGamesContainer.tsx","features/home-page/HomePage.tsx","utils/getGameStatusText.ts","features/single-game/GameMeta.tsx","features/single-game/GameMetaContainer.tsx","features/single-game/GameClock.tsx","features/single-game/GameControlPanelStatus.tsx","features/single-game/GameMoves.tsx","features/single-game/GameControlPanelUserName.tsx","features/single-game/GameControlPanelTopToolbar.tsx","features/single-game/GameControlPanelBottomToolbar.tsx","features/single-game/DrawOfferDialog.tsx","features/single-game/GameControlPanel.tsx","features/single-game/GameControlPanelWrapper.tsx","features/single-game/GameControlPanelContainer.tsx","features/single-game/SingleGameBoard.tsx","features/single-game/SingleGameBoardContainer.tsx","features/single-game/GamePage.tsx","features/header/Header.tsx","features/header/HeaderContainer.tsx","features/auth-modal/LoginForm.tsx","features/auth-modal/RegistrationForm.tsx","features/auth-modal/LoginTabsContainer.tsx","features/auth-modal/AuthModal.tsx","features/auth-modal/AuthModalContainer.tsx","app/App.tsx","serviceWorker.ts","features/entities/entitiesSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx","utils/makeChessInstance.ts","normalizr/schemas/userSchema.ts","features/challenge-ai-modal/ChallengeAiForm.module.scss","features/single-game/GameMoves.module.scss","features/games-list/gamesListSlice.ts","features/auth-modal/authModalSlice.ts","features/challenge-ai-modal/challengeAiModalSlice.ts","features/challenge/challengeSlice.ts","features/data-subscription/dataSubscriptionSlice.ts","features/move/moveSlice.ts","features/games-list/GamePreviewsListItem.module.scss"],"names":["gameClockSlice","createSlice","name","initialState","reducers","oneSecondPassed","extraReducers","actions","startGameClock","dispatch","setInterval","gameSchema","schema","Entity","white","userSchema","black","module","exports","defaultSingleGameItemState","isLoading","error","isFlipped","rewindToMoveIndex","singleGameSlice","getSingleGameRequest","state","action","payload","Object","assign","getSingleGameSuccess","result","getSingleGameError","itemId","abortGameRequest","_state","_action","abortGameSuccess","abortGameError","resignGameRequest","resignGameSuccess","resignGameError","offerDrawRequest","offerDrawSuccess","offerDrawError","acceptDrawOfferRequest","acceptDrawOfferSuccess","acceptDrawOfferError","declineDrawOfferRequest","declineDrawOfferSuccess","declineDrawOfferError","flipBoard","rewindToMove","gameId","moveIndex","fetchGame","id","Promise","resolve","reject","ioClient","socket","get","body","jwr","statusCode","normalizedGame","normalize","abortGame","post","resignGame","offerDraw","acceptDrawOffer","declineDrawOffer","sailsIOClient","socketIOClient","sails","url","currentUserSlice","userId","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","loginSuccess","registerSuccess","logoutSuccess","fetchCurrentUser","normalizedUser","login","data","put","emailAddress","email","password","register","fullName","confirmPassword","agreed","logout","GamePreviewUserName","game","color","aiLevel","GamePreviewResult","winner","className","css","GamePreviewClock","time","isRunning","formattedTime","moment","startOf","milliseconds","format","data-testid","cx","clock","clockRun","GamePreviewsListItem","fen","makeChessInstance","gamePreview","player","status","btime","turn","board","to","position","viewOnly","width","wtime","GamePreviewsList","games","grid","map","item","key","OngoingGamesContainer","useSelector","denormalize","keys","entities","filter","sort","a","b","createdAt","slice","ChallengeButtons","onChallengeAi","handleChallengeAi","useCallback","Button","variant","onClick","ChallengeButtonsContainer","useDispatch","showChallengeAiModal","ChallengeAiForm","onSubmit","initialValues","level","clockLimit","clockIncrement","values","formikHelpers","handleChange","handleBlur","handleSubmit","isSubmitting","setStatus","setFieldValue","Form","noValidate","e","onChange","Alert","Group","Label","Control","type","onBlur","value","min","max","step","Row","ButtonGroup","levelButtonGroup","colorSubmits","disabled","title","colorSubmitsButton","blackButton","randomButton","whiteButton","ChallengeAiFormContainer","history","useHistory","challengeAiAndOpenGamePage","challengeAi","then","push","catch","err","ChallengeAiModal","show","onHide","Modal","animation","Header","closeButton","Title","Body","ChallengeAiModalContainer","isChallengeAiModalVisible","challengeAiModal","handleHide","hideChallengeAiModal","CompletedGamesContainer","HomePage","Card","GameMeta","getGameStatusText","height","cy","r","stroke","strokeWidth","fill","GameMetaContainer","GameClock","clockEmerg","GameControlPanelStatus","container","formatMove","move","from","GameMoves","onRewindToMove","movesHistory","scrollToElementRef","useRef","lastMovesQnt","lastGameStatus","useEffect","current","length","scrollTop","scrollHeight","chess","movesQnt","verbose","movesPairs","_chunk","makeRewindToMoveHandler","movesWrapper","ref","pair","index","whiteMoveIndex","blackMoveIndex","Fragment","moveNumber","role","selected","GameControlPanelUserName","userName","GameControlPanelTopToolbar","isFirstMove","isLastMove","hasPrevMove","hasNextMove","onFlipBoard","onRewindToPrevMove","onRewindToNextMove","onRewindToFirstMove","onRewindToLastMove","handleFlipBoard","handleRewindToPrevMove","handleRewindToNextMove","handleRewindToFirstMove","handleRewindToLastMove","buttonsWrapper","icon","faRetweet","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","GameControlPanelBottomToolbar","canAbortGame","canOfferDraw","canResignGame","onAbortGame","onOfferDraw","onResignGame","handleAbortGame","handleOfferDraw","handleResignGame","faTimes","faHandshake","faFlag","DrawOfferDialog","onAccept","onDecline","handleAccept","handleDecline","GameControlPanel","orientation","drawOfferSentByCurrentUser","drawOfferSentByOpponent","onAcceptDrawOffer","onDeclineDrawOffer","controlPanel","controlPanelInner","GameControlPanelWrapper","currentUser","playerPiecesColor","drawOffer","GameControlPanelContainer","singleGameItemState","singleGame","handleAcceptDrawOffer","handleDeclineDrawOffer","handleRewindToMove","SingleGameBoard","onMove","movableColor","chessWithAllMoves","check","in_check","turnColor","PieceColor","WHITE","BLACK","validMoves","getValidMoves","lastMoveSquares","lastMove","singleGameBoard","allowMarkers","clickable","draggable","SingleGameBoardContainer","handleMove","makeMove","GamePage","useParams","idAsNumber","Number","onLogout","onShowAuthModal","handleLogout","handleShowAuthModal","href","target","rel","src","process","alt","HeaderContainer","showAuthModal","loginSchema","Yup","shape","required","LoginForm","validationSchema","errors","touched","placeholder","isValid","isInvalid","Feedback","registrationSchema","equals","RegistrationForm","LoginTabsContainer","doLogin","React","doSignUp","Tabs","transition","Tab","eventKey","AuthModal","AuthModalContainer","isAuthModalVisible","authModal","hideAuthModal","App","watchGames","fetchGames","path","Boolean","window","location","hostname","match","getNormalizedDataReducer","users","entitiesSlice","getGamesListSuccess","challengeAiSuccess","updateGameBySubscription","createGameBySubscription","makeMoveRequest","moves","trim","makeMoveSuccess","forEach","timePropName","rootReducer","combineReducers","authModalReducer","challengeAiModalReducer","currentUserReducer","gamesList","gamesListReducer","entitiesReducer","singleGameReducer","store","configureStore","reducer","require","default","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","startPositionFen","initialFen","Chess","split","sloppy","Error","gamesListSlice","getGamesListRequest","getGamesListError","normalizedGames","authModalSlice","challengeAiModalSlice","challengeSlice","challengeAiRequest","challengeAiError","dataSubscriptionSlice","on","subscriptionData","verb","previous","moveSlice","makeMoveError"],"mappings":"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","file":"static/js/main.ebe9ace9.chunk.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../../app/store\";\n\ninterface GameClockState {}\n\nconst initialState: GameClockState = {};\n\nconst gameClockSlice = createSlice({\n  name: \"gameClock\",\n  initialState,\n  reducers: {\n    oneSecondPassed() {},\n  },\n  extraReducers: {},\n});\n\nexport const { oneSecondPassed } = gameClockSlice.actions;\n\nexport default gameClockSlice.reducer;\n\nexport const startGameClock = (): AppThunk<void> => (dispatch) => {\n  setInterval(() => {\n    dispatch(oneSecondPassed());\n  }, 1000);\n};\n","import { schema } from \"normalizr\";\nimport userSchema from \"./userSchema\";\n\nconst gameSchema = new schema.Entity(\"games\", {\n  white: userSchema,\n  black: userSchema,\n});\n\nexport default gameSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"GameClock_clock__1XkXv\",\"clockRun\":\"GameClock_clockRun__2zomt\",\"clockEmerg\":\"GameClock_clockEmerg__1sFO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameControlPanelStatus_container__119WU\",\"status\":\"GameControlPanelStatus_status__1IARo\",\"result\":\"GameControlPanelStatus_result__3Qu_O\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable prefer-object-spread */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\nexport interface RewindToMovePayload {\n  gameId: number;\n  moveIndex: number | null;\n}\n\ninterface SingleGameItemState {\n  isLoading: boolean;\n  error: string | null;\n  isFlipped: boolean;\n  rewindToMoveIndex: number | null;\n}\n\ninterface SingleGameState {\n  [gameId: string]: SingleGameItemState;\n}\n\nexport const defaultSingleGameItemState: SingleGameItemState = {\n  isLoading: true,\n  error: null,\n  isFlipped: false,\n  rewindToMoveIndex: null,\n};\n\nconst initialState: SingleGameState = {};\n\nconst singleGameSlice = createSlice({\n  name: \"singleGame\",\n  initialState,\n  reducers: {\n    getSingleGameRequest(state, action: PayloadAction<number>) {\n      state[action.payload] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload],\n        {\n          isLoading: true,\n          error: null,\n        }\n      );\n    },\n    getSingleGameSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state[action.payload.result] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.result],\n        {\n          isLoading: false,\n          error: null,\n        }\n      );\n    },\n    getSingleGameError(state, action: PayloadAction<ItemErrorPayload>) {\n      state[action.payload.itemId] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.itemId],\n        {\n          isLoading: false,\n          error: action.payload.error,\n        }\n      );\n    },\n    abortGameRequest(_state, _action: PayloadAction<number>) {},\n    abortGameSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    abortGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n    resignGameRequest(_state, _action: PayloadAction<number>) {},\n    resignGameSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    resignGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    offerDrawRequest(_state, _action: PayloadAction<number>) {},\n    offerDrawSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    offerDrawError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    acceptDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    acceptDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    acceptDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    declineDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    declineDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    declineDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    flipBoard(state, action: PayloadAction<number>) {\n      state[action.payload].isFlipped = !state[action.payload].isFlipped;\n    },\n    rewindToMove(state, action: PayloadAction<RewindToMovePayload>) {\n      state[action.payload.gameId].rewindToMoveIndex = action.payload.moveIndex;\n    },\n  },\n  extraReducers: {},\n});\n\nexport const {\n  getSingleGameRequest,\n  getSingleGameSuccess,\n  getSingleGameError,\n  flipBoard,\n  rewindToMove,\n  abortGameRequest,\n  abortGameSuccess,\n  abortGameError,\n  resignGameRequest,\n  resignGameSuccess,\n  resignGameError,\n  offerDrawRequest,\n  offerDrawSuccess,\n  offerDrawError,\n  acceptDrawOfferRequest,\n  acceptDrawOfferSuccess,\n  acceptDrawOfferError,\n  declineDrawOfferRequest,\n  declineDrawOfferSuccess,\n  declineDrawOfferError,\n} = singleGameSlice.actions;\n\nexport default singleGameSlice.reducer;\n\nexport const fetchGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(getSingleGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(`/game/${id}`, (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGame = normalize(body as Game, gameSchema);\n        dispatch(getSingleGameSuccess(normalizedGame));\n        resolve(body as Game);\n      } else {\n        dispatch(\n          getSingleGameError({\n            itemId: id,\n            error: body as string,\n          })\n        );\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const abortGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(abortGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/abort`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(abortGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            abortGameError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const resignGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(resignGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/resign`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(resignGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            resignGameError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const offerDraw = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(offerDrawRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(offerDrawSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            offerDrawError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const acceptDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(acceptDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(acceptDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            acceptDrawOfferError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\nexport const declineDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(declineDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/no`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(declineDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            declineDrawOfferError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockRun\":\"GamePreviewClock_clockRun__2fzqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"GameControlPanel_controlPanel__31q_E\",\"controlPanelInner\":\"GameControlPanel_controlPanelInner__mVrde\"};","import socketIOClient from \"socket.io-client\";\nimport sailsIOClient from \"sails.io.js\";\n\nconst ioClient = sailsIOClient(socketIOClient);\n\nioClient.sails.url = \"http://localhost:1337\";\n\nexport default ioClient;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"GamePreviewsList_grid__2iggX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"GamePreviewResult_result__2DwMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userName\":\"GameControlPanelUserName_userName__3wRKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"GameControlPanelTopToolbar_buttonsWrapper__TJIBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"GameControlPanelBottomToolbar_buttonsWrapper__21ame\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singleGameBoard\":\"SingleGameBoard_singleGameBoard__2rYay\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport { JWR } from \"sails.io.js\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport User from \"../../interfaces/User\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport SignUpData from \"../../interfaces/SignUpData\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface CurrentUserState {\n  userId: number | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: CurrentUserState = {\n  userId: null,\n  isLoading: true,\n  error: null,\n};\n\nconst currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    getCurrentUserRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getCurrentUserSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number> | null>\n    ) {\n      state.userId = action.payload ? action.payload.result : null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    getCurrentUserError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    loginSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    registerSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    logoutSuccess(state) {\n      state.userId = null;\n    },\n  },\n});\n\nexport const {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n  loginSuccess,\n  registerSuccess,\n  logoutSuccess,\n} = currentUserSlice.actions;\n\nexport default currentUserSlice.reducer;\n\nexport const fetchCurrentUser = (): AppThunk<Promise<User | null>> => (\n  dispatch\n) => {\n  dispatch(getCurrentUserRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/api/v1/account/me\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedUser = normalize(body as User, userSchema);\n\n        dispatch(getCurrentUserSuccess(normalizedUser));\n        resolve(body as User);\n      } else if (jwr.statusCode === 401) {\n        dispatch(getCurrentUserSuccess(null));\n        resolve(null);\n      } else {\n        dispatch(getCurrentUserError(body as string));\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const login = (data: LoginData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.put(\n      \"/api/v1/entrance/login\",\n      {\n        // rememberMe: true, // because of warning in backend @see https://tracker.yandex.ru/CHESSPWA-47\n        emailAddress: data.email,\n        password: data.password,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(loginSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const register = (data: SignUpData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/entrance/signup\",\n      {\n        fullName: data.fullName,\n        emailAddress: data.email,\n        password: data.password,\n        confirmPassword: data.password,\n        agreed: true,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(registerSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const logout = (): AppThunk<Promise<void>> => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/account/logout\",\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          dispatch(logoutSuccess());\n          resolve();\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\n\nexport interface GamePreviewUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GamePreviewUserName: FC<GamePreviewUserNameProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <span>\n      {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n    </span>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport css from \"./GamePreviewResult.module.scss\";\n\nexport interface GamePreviewResultProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GamePreviewResult: FC<GamePreviewResultProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  let result = \"½\";\n  if (game.winner) {\n    if (game.winner === color) {\n      result = \"1\";\n    } else {\n      result = \"0\";\n    }\n  }\n\n  return <span className={css.result}>{result}</span>;\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\nimport css from \"./GamePreviewClock.module.scss\";\n\nexport interface GamePreviewClockProps {\n  time?: number; // in msec\n  isRunning?: boolean;\n}\n\nexport const GamePreviewClock: FC<GamePreviewClockProps> = ({\n  time = 0,\n  isRunning = false,\n}) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm:ss\");\n\n  return (\n    <div\n      data-testid=\"time\"\n      className={cx(css.clock, { [css.clockRun]: isRunning })}\n    >\n      {formattedTime}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Board } from \"ii-react-chessboard\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GamePreviewsListItem.module.scss\";\nimport { GamePreviewUserName } from \"./GamePreviewUserName\";\nimport { GamePreviewResult } from \"./GamePreviewResult\";\nimport { GamePreviewClock } from \"./GamePreviewClock\";\n\nexport interface GamePreviewsListItemProps {\n  game?: Game;\n}\n\nexport const GamePreviewsListItem: FC<GamePreviewsListItemProps> = ({\n  game,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const fen: string = makeChessInstance(game).fen();\n\n  return (\n    <div className={css.gamePreview}>\n      <div className={css.player}>\n        <GamePreviewUserName game={game} color=\"black\" />\n        {game.status === \"started\" && (\n          <GamePreviewClock\n            time={game.btime}\n            isRunning={game.turn === \"black\"}\n          />\n        )}\n        {game.status !== \"started\" && game.status !== \"aborted\" && (\n          <GamePreviewResult game={game} color=\"black\" />\n        )}\n      </div>\n      <div className={css.board}>\n        <Link to={`/game/${game.id}`}>\n          <Board position={fen} viewOnly={false} width={240} />\n        </Link>\n      </div>\n      <div className={css.player}>\n        <GamePreviewUserName game={game} color=\"white\" />\n        {game.status === \"started\" && (\n          <GamePreviewClock\n            time={game.wtime}\n            isRunning={game.turn === \"white\"}\n          />\n        )}\n        {game.status !== \"started\" && game.status !== \"aborted\" && (\n          <GamePreviewResult game={game} color=\"white\" />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport css from \"./GamePreviewsList.module.scss\";\nimport { GamePreviewsListItem } from \"./GamePreviewsListItem\";\n\nexport interface GamePreviewsListProps {\n  games?: Game[];\n}\n\nexport const GamePreviewsList: FC<GamePreviewsListProps> = ({ games = [] }) => {\n  return (\n    <div className={css.grid}>\n      {games.map((item) => (\n        <GamePreviewsListItem game={item} key={item.id} />\n      ))}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst limit = 9;\n\nconst OngoingGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter((game: Game) => game.status === \"started\")\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n      .slice(0, limit)\n  );\n\n  return <GamePreviewsList games={games} />;\n};\n\nexport default OngoingGamesContainer;\n","import React, { FC, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface ChallengeButtonsProps {\n  onChallengeAi?(): void;\n}\n\nexport const ChallengeButtons: FC<ChallengeButtonsProps> = ({\n  onChallengeAi,\n}) => {\n  const handleChallengeAi = useCallback(() => {\n    if (onChallengeAi) {\n      onChallengeAi();\n    }\n  }, [onChallengeAi]);\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={handleChallengeAi}\n      data-testid=\"challenge-ai-btn\"\n    >\n      Play with the computer\n    </Button>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeButtons } from \"./ChallengeButtons\";\nimport { showChallengeAiModal } from \"../challenge-ai-modal/challengeAiModalSlice\";\n\nconst ChallengeButtonsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch();\n\n  const handleChallengeAi = useCallback(() => {\n    dispatch(showChallengeAiModal());\n  }, [dispatch]);\n\n  return <ChallengeButtons onChallengeAi={handleChallengeAi} />;\n};\n\nexport default ChallengeButtonsContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Formik, FormikHelpers } from \"formik\";\nimport React, { FC, FormEvent } from \"react\";\nimport cx from \"classnames\";\nimport { Alert, Button, ButtonGroup, Form, Row } from \"react-bootstrap\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport css from \"./ChallengeAiForm.module.scss\";\n\nexport interface ChallengeAiFormProps {\n  onSubmit?(\n    values: ChallengeAiData,\n    formikHelpers: FormikHelpers<ChallengeAiData>\n  ): void | Promise<any>;\n}\n\nexport const ChallengeAiForm: FC<ChallengeAiFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        level: 2,\n        color: \"\",\n        clockLimit: 300,\n        clockIncrement: 3,\n      }}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(\n            values as ChallengeAiData,\n            formikHelpers as FormikHelpers<ChallengeAiData>\n          );\n        }\n        return undefined;\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        setFieldValue,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <fieldset>\n            <Form.Group>\n              <Form.Label>\n                Minutes per side: {values.clockLimit / 60}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockLimit\"\n                onBlur={handleBlur}\n                value={values.clockLimit}\n                onChange={handleChange}\n                min=\"60\"\n                max=\"1800\"\n                step=\"60\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Increment in seconds: {values.clockIncrement}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockIncrement\"\n                onBlur={handleBlur}\n                value={values.clockIncrement}\n                onChange={handleChange}\n                min=\"0\"\n                max=\"60\"\n              />\n            </Form.Group>\n          </fieldset>\n\n          <div className=\"text-center\">Level</div>\n\n          <Row>\n            <ButtonGroup className={cx(\"mx-auto\", css.levelButtonGroup)}>\n              {[1, 2, 3, 4].map((level) => (\n                <Button\n                  key={level}\n                  type=\"button\"\n                  variant={level === values.level ? \"dark\" : \"light\"}\n                  onClick={() => setFieldValue(\"level\", level)}\n                >\n                  {level}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Row>\n\n          <div className=\"text-center\">A.I. Level: {values.level}</div>\n\n          <div className={css.colorSubmits}>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Black\"\n              className={cx(css.colorSubmitsButton, css.blackButton)}\n              onClick={() => setFieldValue(\"color\", \"black\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Random side\"\n              className={cx(css.colorSubmitsButton, css.randomButton)}\n              onClick={() => setFieldValue(\"color\", \"random\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"White\"\n              className={cx(css.colorSubmitsButton, css.whiteButton)}\n              onClick={() => setFieldValue(\"color\", \"white\")}\n            >\n              <i />\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { FormikHelpers } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeAiForm } from \"./ChallengeAiForm\";\nimport { AppDispatch } from \"../../app/store\";\nimport { challengeAi } from \"../challenge/challengeSlice\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport Game from \"../../interfaces/Game\";\n\nconst ChallengeAiFormContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const history = useHistory();\n\n  const challengeAiAndOpenGamePage = useCallback(\n    (\n      values: ChallengeAiData,\n      formikHelpers: FormikHelpers<ChallengeAiData>\n    ) => {\n      return dispatch(challengeAi(values))\n        .then((game: Game) => {\n          history.push(`/game/${game.id}`);\n        })\n        .catch((err) => {\n          if (err.statusCode === 401) {\n            formikHelpers.setStatus(\"You must log in to play with computer\");\n          } else {\n            formikHelpers.setStatus(\"Internal server error\");\n          }\n        });\n    },\n    [dispatch, history]\n  );\n\n  return <ChallengeAiForm onSubmit={challengeAiAndOpenGamePage} />;\n};\n\nexport default ChallengeAiFormContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport ChallengeAiFormContainer from \"../challenge-ai-modal/ChallengeAiFormContainer\";\n\nexport interface ChallengeAiModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const ChallengeAiModal: FC<ChallengeAiModalProps> = ({\n  show = false,\n  onHide,\n}) => {\n  return (\n    <Modal show={show} onHide={onHide} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Play with the computer</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <ChallengeAiFormContainer />\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChallengeAiModal } from \"./ChallengeAiModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideChallengeAiModal } from \"../challenge-ai-modal/challengeAiModalSlice\";\n\nconst ChallengeAiModalContainer: FC<unknown> = () => {\n  const { isChallengeAiModalVisible } = useSelector(\n    (state: RootState) => state.challengeAiModal\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideChallengeAiModal());\n  }, [dispatch]);\n\n  return (\n    <ChallengeAiModal show={isChallengeAiModalVisible} onHide={handleHide} />\n  );\n};\n\nexport default ChallengeAiModalContainer;\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst limit = 9;\n\nconst CompletedGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter(\n        (game: Game) => game.status !== \"started\" && game.status !== \"aborted\"\n      )\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n      .slice(0, limit)\n  );\n\n  return <GamePreviewsList games={games} />;\n};\n\nexport default CompletedGamesContainer;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport OngoingGamesContainer from \"../games-list/OngoingGamesContainer\";\nimport ChallengeButtonsContainer from \"./ChallengeButtonsContainer\";\nimport ChallengeAiModalContainer from \"./ChallengeAiModalContainer\";\nimport CompletedGamesContainer from \"../games-list/CompletedGamesContainer\";\n\nconst HomePage: FC<unknown> = () => {\n  return (\n    <>\n      <ChallengeAiModalContainer />\n      <div className=\"d-flex justify-content-center\">\n        <ChallengeButtonsContainer />\n      </div>\n      <Card className=\"mb-3\">\n        <Card.Body>\n          <Card.Title>Playing right now</Card.Title>\n          <OngoingGamesContainer />\n        </Card.Body>\n      </Card>\n\n      <Card>\n        <Card.Body>\n          <Card.Title>Finished</Card.Title>\n          <CompletedGamesContainer />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default HomePage;\n","import Game from \"../interfaces/Game\";\n\nexport default (game: Game): string => {\n  if (game.status === \"outoftime\") {\n    if (game.winner === \"white\") {\n      return \"Time out • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Time out • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"resign\") {\n    if (game.winner === \"black\") {\n      return \"White resigned • Black is victorious\";\n    }\n    if (game.winner === \"white\") {\n      return \"Black resigned • White is victorious\";\n    }\n  }\n\n  if (game.status === \"aborted\") {\n    return \"Game aborted\";\n  }\n\n  if (game.status === \"mate\") {\n    if (game.winner === \"white\") {\n      return \"Checkmate • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Checkmate • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"draw\") {\n    return \"Draw\";\n  }\n\n  if (game.status === \"stalemate\") {\n    return \"Stalemate\";\n  }\n\n  return \"Playing right now\";\n};\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport Game from \"../../interfaces/Game\";\nimport getGameStatusText from \"../../utils/getGameStatusText\";\n\nexport interface GameMetaProps {\n  game?: Game;\n}\n\nexport const GameMeta: FC<GameMetaProps> = ({ game }) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <div>\n          Time Control:{\" \"}\n          <span data-testid=\"time-control\">\n            {game.clockLimit / 60} + {game.clockIncrement}\n          </span>\n        </div>\n        <div\n          data-testid=\"game-status\"\n          className={cx({\n            \"text-success\": game.status === \"started\",\n            \"text-danger\": game.status !== \"started\",\n          })}\n        >\n          {getGameStatusText(game)}\n        </div>\n        <div data-testid=\"white-user\">\n          <svg height=\"18\" width=\"16\" className=\"mr-1\">\n            <circle\n              cx=\"9\"\n              cy=\"9\"\n              r=\"6\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n              fill=\"#fff\"\n            />\n          </svg>\n          {game.white ? game.white.fullName : `AI level ${game.aiLevel}`}\n        </div>\n        <div data-testid=\"black-user\">\n          <svg height=\"18\" width=\"16\" className=\"mr-1\">\n            <circle\n              cx=\"8\"\n              cy=\"8\"\n              r=\"6\"\n              stroke=\"black\"\n              strokeWidth=\"1\"\n              fill=\"#000\"\n            />\n          </svg>\n          {game.black ? game.black.fullName : `AI level ${game.aiLevel}`}\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { GameMeta } from \"./GameMeta\";\n\nexport interface SingleGameMetaContainerProps {\n  id: number;\n}\n\nexport const GameMetaContainer: FC<SingleGameMetaContainerProps> = ({ id }) => {\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  if (game) {\n    return <GameMeta game={game} />;\n  }\n  return null;\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\nimport css from \"./GameClock.module.scss\";\n\nexport interface GameClockProps {\n  time?: number; // in msec\n  isRunning?: boolean;\n}\n\nexport const GameClock: FC<GameClockProps> = ({\n  time = 0,\n  isRunning = false,\n}) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm:ss\");\n\n  return (\n    <div\n      data-testid=\"time\"\n      className={cx(css.clock, {\n        [css.clockRun]: isRunning,\n        [css.clockEmerg]: time < 10000,\n      })}\n    >\n      {formattedTime}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport getGameStatusText from \"../../utils/getGameStatusText\";\nimport css from \"./GameControlPanelStatus.module.scss\";\n\nexport interface GameControlPanelStatusProps {\n  game?: Game;\n}\n\nexport const GameControlPanelStatus: FC<GameControlPanelStatusProps> = ({\n  game,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  let result = \"½-½\";\n  if (game.winner) {\n    if (game.winner === \"white\") {\n      result = \"1-0\";\n    } else {\n      result = \"0-1\";\n    }\n  }\n\n  return (\n    <div className={css.container}>\n      <div className={css.result} data-testid=\"game-result\">\n        {result}\n      </div>\n      <div className={css.status} data-testid=\"game-status\">\n        {getGameStatusText(game)}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/click-events-have-key-events */ // @todo\n/* eslint-disable jsx-a11y/interactive-supports-focus */ // @todo\n\nimport React, { FC, useEffect, useRef } from \"react\";\nimport { chunk as _chunk } from \"lodash\";\nimport { Move } from \"chess.js\";\nimport cx from \"classnames\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GameMoves.module.scss\";\nimport { GameControlPanelStatus } from \"./GameControlPanelStatus\";\nimport GameStatus from \"../../types/GameStatus\";\n\nexport interface GameMovesProps {\n  game?: Game;\n  rewindToMoveIndex?: number | null;\n  onRewindToMove?(moveIndex: number): void;\n}\n\nconst formatMove = (move: Move): string => {\n  return `${move.from}${move.to}`;\n};\n\nexport const GameMoves: FC<GameMovesProps> = ({\n  game,\n  rewindToMoveIndex = null,\n  onRewindToMove,\n}) => {\n  let movesHistory: Move[] = [];\n\n  const scrollToElementRef = useRef<HTMLDivElement>(null);\n  const lastMovesQnt = useRef<number>(-1);\n  const lastGameStatus = useRef<GameStatus>();\n\n  // @todo. add unit test\n  useEffect(() => {\n    if (!game) {\n      return;\n    }\n\n    if (\n      (lastMovesQnt.current !== movesHistory.length ||\n        lastGameStatus.current !== game.status) &&\n      rewindToMoveIndex === null\n    ) {\n      if (scrollToElementRef.current) {\n        scrollToElementRef.current.scrollTop =\n          scrollToElementRef.current.scrollHeight;\n      }\n    }\n    lastMovesQnt.current = movesHistory.length;\n    lastGameStatus.current = game.status;\n  }, [\n    game,\n    lastMovesQnt,\n    lastGameStatus,\n    movesHistory.length,\n    rewindToMoveIndex,\n    scrollToElementRef,\n  ]);\n\n  if (!game) {\n    return null;\n  }\n\n  const chess = makeChessInstance(game);\n\n  movesHistory = chess.history({ verbose: true });\n\n  const movesQnt = movesHistory.length;\n\n  const movesPairs = _chunk(movesHistory, 2);\n\n  const makeRewindToMoveHandler = (moveIndex: number) => {\n    return () => {\n      if (onRewindToMove) {\n        onRewindToMove(moveIndex);\n      }\n    };\n  };\n\n  return (\n    <div className={css.movesWrapper} ref={scrollToElementRef}>\n      {movesPairs.map((pair, index) => {\n        const whiteMoveIndex = index * 2 + 1;\n        const blackMoveIndex = index * 2 + 2;\n\n        return (\n          <React.Fragment key={`move-${index}`}>\n            <div className={css.moveNumber}>{index + 1}</div>\n            <div\n              data-testid={`move-${whiteMoveIndex}`}\n              onClick={makeRewindToMoveHandler(whiteMoveIndex)}\n              role=\"button\"\n              className={cx(css.move, {\n                [css.selected]:\n                  rewindToMoveIndex === whiteMoveIndex ||\n                  (rewindToMoveIndex === null && movesQnt === whiteMoveIndex),\n              })}\n            >\n              {formatMove(pair[0])}\n            </div>\n            {pair[1] && (\n              <div\n                data-testid={`move-${blackMoveIndex}`}\n                onClick={makeRewindToMoveHandler(blackMoveIndex)}\n                role=\"button\"\n                className={cx(css.move, {\n                  [css.selected]:\n                    rewindToMoveIndex === blackMoveIndex ||\n                    (rewindToMoveIndex === null && movesQnt === blackMoveIndex),\n                })}\n              >\n                {formatMove(pair[1])}\n              </div>\n            )}\n          </React.Fragment>\n        );\n      })}\n\n      {game.status !== \"started\" && <GameControlPanelStatus game={game} />}\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport css from \"./GameControlPanelUserName.module.scss\";\n\nexport interface GameControlPanelUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GameControlPanelUserName: FC<GameControlPanelUserNameProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <div className={css.userName}>\n      {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faRetweet,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport css from \"./GameControlPanelTopToolbar.module.scss\";\n\nexport interface GameControlPanelTopToolbarProps {\n  isFirstMove?: boolean;\n  isLastMove?: boolean;\n  hasPrevMove?: boolean;\n  hasNextMove?: boolean;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n}\n\nexport const GameControlPanelTopToolbar: FC<GameControlPanelTopToolbarProps> = ({\n  isFirstMove = false,\n  isLastMove = false,\n  hasPrevMove = false,\n  hasNextMove = false,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n}) => {\n  const handleFlipBoard = useCallback(() => {\n    if (onFlipBoard) {\n      onFlipBoard();\n    }\n  }, [onFlipBoard]);\n  const handleRewindToPrevMove = useCallback(() => {\n    if (onRewindToPrevMove) {\n      onRewindToPrevMove();\n    }\n  }, [onRewindToPrevMove]);\n  const handleRewindToNextMove = useCallback(() => {\n    if (onRewindToNextMove) {\n      onRewindToNextMove();\n    }\n  }, [onRewindToNextMove]);\n  const handleRewindToFirstMove = useCallback(() => {\n    if (onRewindToFirstMove) {\n      onRewindToFirstMove();\n    }\n  }, [onRewindToFirstMove]);\n  const handleRewindToLastMove = useCallback(() => {\n    if (onRewindToLastMove) {\n      onRewindToLastMove();\n    }\n  }, [onRewindToLastMove]);\n\n  return (\n    <div className={css.buttonsWrapper}>\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"flip-board-btn\"\n        onClick={handleFlipBoard}\n      >\n        <FontAwesomeIcon icon={faRetweet} />\n        <span className=\"sr-only\">Flip board</span>\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"rewind-to-first-move-btn\"\n        onClick={handleRewindToFirstMove}\n        disabled={isFirstMove}\n      >\n        <FontAwesomeIcon icon={faAngleDoubleLeft} />\n        <span className=\"sr-only\">Rewind to first move</span>\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"rewind-to-prev-move-btn\"\n        onClick={handleRewindToPrevMove}\n        disabled={!hasPrevMove}\n      >\n        <FontAwesomeIcon icon={faAngleLeft} />\n        <span className=\"sr-only\">Rewind to prev move</span>\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"rewind-to-next-move-btn\"\n        onClick={handleRewindToNextMove}\n        disabled={!hasNextMove}\n      >\n        <FontAwesomeIcon icon={faAngleRight} />\n        <span className=\"sr-only\">Rewind to next move</span>\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"rewind-to-last-move-btn\"\n        onClick={handleRewindToLastMove}\n        disabled={isLastMove}\n      >\n        <FontAwesomeIcon icon={faAngleDoubleRight} />\n        <span className=\"sr-only\">Rewind to last move</span>\n      </Button>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFlag,\n  faHandshake,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport css from \"./GameControlPanelBottomToolbar.module.scss\";\n\nexport interface GameControlPanelBottomToolbarProps {\n  canAbortGame?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanelBottomToolbar: FC<GameControlPanelBottomToolbarProps> = ({\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  const handleAbortGame = useCallback(() => {\n    if (onAbortGame) {\n      onAbortGame();\n    }\n  }, [onAbortGame]);\n  const handleOfferDraw = useCallback(() => {\n    if (onOfferDraw) {\n      onOfferDraw();\n    }\n  }, [onOfferDraw]);\n  const handleResignGame = useCallback(() => {\n    if (onResignGame) {\n      onResignGame();\n    }\n  }, [onResignGame]);\n\n  return (\n    <div className={css.buttonsWrapper}>\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"abort-game-btn\"\n        onClick={handleAbortGame}\n        disabled={!canAbortGame}\n      >\n        <FontAwesomeIcon icon={faTimes} />\n        <span className=\"sr-only\">Abort</span>\n      </Button>\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"offer-draw-btn\"\n        onClick={handleOfferDraw}\n        disabled={!canOfferDraw}\n      >\n        <FontAwesomeIcon icon={faHandshake} />\n        <span className=\"sr-only\">Offer a draw</span>\n      </Button>\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"resign-game-btn\"\n        onClick={handleResignGame}\n        disabled={!canResignGame}\n      >\n        <FontAwesomeIcon icon={faFlag} />\n        <span className=\"sr-only\">Resign</span>\n      </Button>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface DrawOfferDialogProps {\n  onAccept?(): void;\n  onDecline?(): void;\n}\n\nexport const DrawOfferDialog: FC<DrawOfferDialogProps> = ({\n  onAccept,\n  onDecline,\n}) => {\n  const handleAccept = useCallback(() => {\n    if (onAccept) {\n      onAccept();\n    }\n  }, [onAccept]);\n\n  const handleDecline = useCallback(() => {\n    if (onDecline) {\n      onDecline();\n    }\n  }, [onDecline]);\n\n  return (\n    <div>\n      <button type=\"button\" data-testid=\"accept-btn\" onClick={handleAccept}>\n        Accept\n      </button>\n      <button type=\"button\" data-testid=\"decline-btn\" onClick={handleDecline}>\n        Decline\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport css from \"./GameControlPanel.module.scss\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport { GameClock } from \"./GameClock\";\nimport { GameMoves } from \"./GameMoves\";\nimport { GameControlPanelUserName } from \"./GameControlPanelUserName\";\nimport { GameControlPanelTopToolbar } from \"./GameControlPanelTopToolbar\";\nimport { GameControlPanelBottomToolbar } from \"./GameControlPanelBottomToolbar\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport { DrawOfferDialog } from \"./DrawOfferDialog\";\n\nexport interface GameControlPanelProps {\n  game?: Game;\n  orientation?: PieceColor;\n  rewindToMoveIndex?: number | null;\n  canAbortGame?: boolean;\n  canDrawOffer?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  drawOfferSentByCurrentUser?: boolean;\n  drawOfferSentByOpponent?: boolean;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onRewindToMove?(moveIndex: number): void;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanel: FC<GameControlPanelProps> = ({\n  game,\n  orientation = \"white\",\n  rewindToMoveIndex = null,\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  drawOfferSentByCurrentUser = false,\n  drawOfferSentByOpponent = false,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onRewindToMove,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chess = makeChessInstance(game);\n\n  const movesHistory = chess.history();\n\n  const isFirstMove = movesHistory.length === 0 || rewindToMoveIndex === 0;\n\n  const isLastMove = rewindToMoveIndex === null;\n\n  const hasPrevMove = movesHistory.length !== 0 && rewindToMoveIndex !== 0;\n\n  const hasNextMove = rewindToMoveIndex !== null;\n\n  return (\n    <div className={css.controlPanel}>\n      <GameClock\n        time={orientation === \"white\" ? game.btime : game.wtime}\n        isRunning={game.turn !== orientation}\n      />\n      <div className={css.controlPanelInner}>\n        <GameControlPanelUserName\n          game={game}\n          color={orientation === \"white\" ? \"black\" : \"white\"}\n        />\n        <GameControlPanelTopToolbar\n          isFirstMove={isFirstMove}\n          isLastMove={isLastMove}\n          hasPrevMove={hasPrevMove}\n          hasNextMove={hasNextMove}\n          onFlipBoard={onFlipBoard}\n          onRewindToPrevMove={onRewindToPrevMove}\n          onRewindToNextMove={onRewindToNextMove}\n          onRewindToFirstMove={onRewindToFirstMove}\n          onRewindToLastMove={onRewindToLastMove}\n        />\n        <GameMoves\n          game={game}\n          rewindToMoveIndex={rewindToMoveIndex}\n          onRewindToMove={onRewindToMove}\n        />\n        {drawOfferSentByOpponent && (\n          <DrawOfferDialog\n            onAccept={onAcceptDrawOffer}\n            onDecline={onDeclineDrawOffer}\n          />\n        )}\n        {drawOfferSentByCurrentUser && (\n          <div data-testid=\"draw-offer-sent-message\">Draw offer sent</div>\n        )}\n        <GameControlPanelBottomToolbar\n          canAbortGame={canAbortGame}\n          canOfferDraw={canOfferDraw}\n          canResignGame={canResignGame}\n          onAbortGame={onAbortGame}\n          onOfferDraw={onOfferDraw}\n          onResignGame={onResignGame}\n        />\n        <GameControlPanelUserName\n          game={game}\n          color={orientation === \"white\" ? \"white\" : \"black\"}\n        />\n      </div>\n      <GameClock\n        time={orientation === \"white\" ? game.wtime : game.btime}\n        isRunning={game.turn === orientation}\n      />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ChessInstance } from \"chess.js\";\nimport Game from \"../../interfaces/Game\";\nimport { GameControlPanel } from \"./GameControlPanel\";\nimport User from \"../../interfaces/User\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\n\nexport interface SingleGameControlPanelWrapperProps {\n  game?: Game;\n  currentUser?: User;\n  isFlipped?: boolean;\n  rewindToMoveIndex?: number | null;\n  onFlipBoard?(): void;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n  onRewindToMove?(moveIndex: number | null): void;\n}\n\nexport const GameControlPanelWrapper: FC<SingleGameControlPanelWrapperProps> = ({\n  game,\n  currentUser,\n  isFlipped = false,\n  rewindToMoveIndex = null,\n  onFlipBoard,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n  onRewindToMove,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chessWithAllMoves: ChessInstance = makeChessInstance(game);\n\n  const movesHistory = chessWithAllMoves.history({ verbose: true });\n\n  let orientation: PieceColor = \"white\";\n  if (currentUser && currentUser.id === game.black?.id) {\n    orientation = \"black\";\n  }\n  if (isFlipped) {\n    orientation = orientation === \"white\" ? \"black\" : \"white\";\n  }\n\n  let playerPiecesColor: PieceColor | null = null;\n  if (currentUser) {\n    if (currentUser.id === game.white?.id) {\n      playerPiecesColor = \"white\";\n    } else if (currentUser.id === game.black?.id) {\n      playerPiecesColor = \"black\";\n    }\n  }\n\n  let drawOfferSentByCurrentUser = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer === playerPiecesColor\n  ) {\n    drawOfferSentByCurrentUser = true;\n  }\n\n  let drawOfferSentByOpponent = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer !== null &&\n    game.drawOffer !== playerPiecesColor\n  ) {\n    drawOfferSentByOpponent = true;\n  }\n\n  let canAbortGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesHistory.length < 2\n  ) {\n    canAbortGame = true;\n  }\n\n  let canResignGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesHistory.length > 1\n  ) {\n    canResignGame = true;\n  }\n\n  let canOfferDraw = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.drawOffer === null &&\n    game.aiLevel === 0 &&\n    game.status === \"started\" &&\n    movesHistory.length > 1\n  ) {\n    canOfferDraw = true;\n  }\n\n  // @todo. use useCallback hook\n  const handleRewindToMove = (moveIndex: number) => {\n    if (onRewindToMove) {\n      if (moveIndex === movesHistory.length) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove(moveIndex);\n      }\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToFirstMove = () => {\n    if (onRewindToMove) {\n      onRewindToMove(0);\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToLastMove = () => {\n    if (onRewindToMove) {\n      onRewindToMove(null);\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToPrevMove = () => {\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === null) {\n        onRewindToMove(movesHistory.length - 1);\n      } else {\n        onRewindToMove(rewindToMoveIndex - 1);\n      }\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToNextMove = () => {\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === movesHistory.length - 1) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove((rewindToMoveIndex as number) + 1);\n      }\n    }\n  };\n\n  return (\n    <GameControlPanel\n      game={game}\n      orientation={orientation}\n      rewindToMoveIndex={rewindToMoveIndex}\n      canAbortGame={canAbortGame}\n      canResignGame={canResignGame}\n      canOfferDraw={canOfferDraw}\n      drawOfferSentByCurrentUser={drawOfferSentByCurrentUser}\n      drawOfferSentByOpponent={drawOfferSentByOpponent}\n      onAcceptDrawOffer={onAcceptDrawOffer}\n      onDeclineDrawOffer={onDeclineDrawOffer}\n      onFlipBoard={onFlipBoard}\n      onAbortGame={onAbortGame}\n      onOfferDraw={onOfferDraw}\n      onResignGame={onResignGame}\n      onRewindToMove={handleRewindToMove}\n      onRewindToFirstMove={handleRewindToFirstMove}\n      onRewindToLastMove={handleRewindToLastMove}\n      onRewindToPrevMove={handleRewindToPrevMove}\n      onRewindToNextMove={handleRewindToNextMove}\n    />\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { GameControlPanelWrapper } from \"./GameControlPanelWrapper\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport {\n  abortGame,\n  acceptDrawOffer,\n  declineDrawOffer,\n  defaultSingleGameItemState,\n  flipBoard,\n  offerDraw,\n  resignGame,\n  rewindToMove,\n} from \"./singleGameSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nexport interface SingleGameControlPanelContainerProps {\n  id: number;\n}\n\nexport const GameControlPanelContainer: FC<SingleGameControlPanelContainerProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  const currentUser: User | undefined = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return undefined;\n  });\n\n  const handleFlipBoard = useCallback(() => {\n    dispatch(flipBoard(id));\n  }, [dispatch, id]);\n\n  const handleAbortGame = useCallback(() => {\n    dispatch(abortGame(id));\n  }, [dispatch, id]);\n\n  const handleAcceptDrawOffer = useCallback(() => {\n    dispatch(acceptDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleDeclineDrawOffer = useCallback(() => {\n    dispatch(declineDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleResignGame = useCallback(() => {\n    dispatch(resignGame(id));\n  }, [dispatch, id]);\n\n  const handleOfferDraw = useCallback(() => {\n    dispatch(offerDraw(id));\n  }, [dispatch, id]);\n\n  const handleRewindToMove = useCallback(\n    (moveIndex: number | null) => {\n      dispatch(\n        rewindToMove({\n          moveIndex,\n          gameId: id,\n        })\n      );\n    },\n    [dispatch, id]\n  );\n\n  if (game) {\n    return (\n      <GameControlPanelWrapper\n        game={game}\n        currentUser={currentUser}\n        isFlipped={singleGameItemState.isFlipped}\n        rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n        onFlipBoard={handleFlipBoard}\n        onAbortGame={handleAbortGame}\n        onAcceptDrawOffer={handleAcceptDrawOffer}\n        onDeclineDrawOffer={handleDeclineDrawOffer}\n        onOfferDraw={handleOfferDraw}\n        onResignGame={handleResignGame}\n        onRewindToMove={handleRewindToMove}\n      />\n    );\n  }\n  return null;\n};\n","import React, { FC } from \"react\";\nimport {\n  Board,\n  getValidMoves,\n  Move,\n  PieceColor,\n  ValidMoves,\n} from \"ii-react-chessboard\";\nimport { ChessInstance } from \"chess.js\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport User from \"../../interfaces/User\";\nimport css from \"./SingleGameBoard.module.scss\";\n\nexport interface SingleGameBoardProps {\n  currentUser?: User;\n  game?: Game;\n  isFlipped?: boolean;\n  onMove?(move: Move): void;\n  rewindToMoveIndex?: number | null;\n}\n\nexport const SingleGameBoard: FC<SingleGameBoardProps> = ({\n  currentUser,\n  game,\n  isFlipped = false,\n  onMove,\n  rewindToMoveIndex = null,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chessWithAllMoves: ChessInstance = makeChessInstance(game);\n\n  const chess: ChessInstance =\n    rewindToMoveIndex === null\n      ? chessWithAllMoves\n      : makeChessInstance(game, rewindToMoveIndex);\n\n  const fen: string = chess.fen();\n\n  const check: boolean = chess.in_check();\n\n  const turnColor: PieceColor =\n    game.turn === \"white\" ? PieceColor.WHITE : PieceColor.BLACK;\n\n  const validMoves: ValidMoves = getValidMoves(chess);\n\n  let viewOnly = true;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    rewindToMoveIndex === null\n  ) {\n    viewOnly = false;\n  }\n\n  let movableColor: PieceColor | undefined;\n  if (currentUser && currentUser.id === game.white?.id) {\n    movableColor = PieceColor.WHITE;\n  }\n  if (currentUser && currentUser.id === game.black?.id) {\n    movableColor = PieceColor.BLACK;\n  }\n\n  let orientation = PieceColor.WHITE;\n  if (currentUser && currentUser.id === game.black?.id) {\n    orientation = PieceColor.BLACK;\n  }\n  if (isFlipped) {\n    orientation =\n      orientation === PieceColor.WHITE ? PieceColor.BLACK : PieceColor.WHITE;\n  }\n\n  const movesHistory = chessWithAllMoves.history({ verbose: true });\n\n  let lastMoveSquares: string[] | undefined;\n  if (rewindToMoveIndex === null) {\n    if (movesHistory.length) {\n      const lastMove = movesHistory[movesHistory.length - 1];\n      lastMoveSquares = [lastMove.from, lastMove.to];\n    }\n  } else if (rewindToMoveIndex > 0) {\n    const lastMove = movesHistory[rewindToMoveIndex - 1];\n    lastMoveSquares = [lastMove.from, lastMove.to];\n  }\n\n  return (\n    <div className={css.singleGameBoard}>\n      <Board\n        allowMarkers\n        check={check}\n        clickable\n        draggable\n        lastMoveSquares={lastMoveSquares}\n        movableColor={movableColor}\n        onMove={onMove}\n        orientation={orientation}\n        position={fen}\n        turnColor={turnColor}\n        validMoves={validMoves}\n        viewOnly={viewOnly}\n      />\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Move } from \"ii-react-chessboard\";\nimport { denormalize } from \"normalizr\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { SingleGameBoard } from \"./SingleGameBoard\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { defaultSingleGameItemState } from \"./singleGameSlice\";\nimport { makeMove } from \"../move/moveSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nexport interface SingleGameBoardProps {\n  id: number;\n}\n\nexport const SingleGameBoardContainer: FC<SingleGameBoardProps> = ({ id }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  const currentUser: User | undefined = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return undefined;\n  });\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  const handleMove = useCallback(\n    (move: Move) => {\n      dispatch(makeMove(id, `${move.from}${move.to}`));\n    },\n    [dispatch, id]\n  );\n\n  if (game) {\n    return (\n      <SingleGameBoard\n        game={game}\n        currentUser={currentUser}\n        isFlipped={singleGameItemState.isFlipped}\n        rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n        onMove={handleMove}\n      />\n    );\n  }\n  return null;\n};\n","import React, { FC, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { GameMetaContainer } from \"./GameMetaContainer\";\nimport { GameControlPanelContainer } from \"./GameControlPanelContainer\";\nimport { SingleGameBoardContainer } from \"./SingleGameBoardContainer\";\nimport { fetchGame } from \"./singleGameSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\ninterface GamePageParams {\n  id: string;\n}\n\nconst GamePage: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { id } = useParams<GamePageParams>();\n\n  const idAsNumber = Number(id);\n\n  useEffect(() => {\n    dispatch(fetchGame(idAsNumber));\n  }, [dispatch, idAsNumber]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\">\n        <GameMetaContainer id={idAsNumber} />\n      </div>\n      <div className=\"col-6\">\n        <SingleGameBoardContainer id={idAsNumber} />\n      </div>\n      <div className=\"col-3\">\n        <GameControlPanelContainer id={idAsNumber} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n","import React, { FC, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport User from \"../../interfaces/User\";\n\nexport interface HeaderProps {\n  currentUser?: User | null;\n  onLogout?(): void;\n  onShowAuthModal?(): void;\n}\n\nexport const Header: FC<HeaderProps> = ({\n  currentUser = null,\n  onLogout,\n  onShowAuthModal,\n}) => {\n  const handleLogout = useCallback(() => {\n    if (onLogout) {\n      onLogout();\n    }\n  }, [onLogout]);\n\n  const handleShowAuthModal = useCallback(() => {\n    if (onShowAuthModal) {\n      onShowAuthModal();\n    }\n  }, [onShowAuthModal]);\n\n  return (\n    <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n      <div className=\"offset-4 col-4 text-center\">\n        <Link className=\"blog-header-logo text-dark\" to=\"/\">\n          Chess PWA\n        </Link>\n      </div>\n      <div className=\"col-4 d-flex justify-content-end align-items-center\">\n        {currentUser ? (\n          <>\n            <div className=\"mr-3\">Hi, {currentUser.fullName}</div>\n            <Button\n              className=\"btn btn-sm btn-danger mr-3\"\n              data-testid=\"logout-btn\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </>\n        ) : (\n          <Button\n            className=\"btn btn-sm btn-success mr-3\"\n            data-testid=\"login-btn\"\n            onClick={handleShowAuthModal}\n          >\n            Login / Register\n          </Button>\n        )}\n\n        <a\n          href=\"https://github.com/ildar-icoosoft/chess-pwa\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/imgs/GitHub-Mark-32px.png`}\n            alt=\"\"\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from \"./Header\";\nimport User from \"../../interfaces/User\";\nimport { RootState } from \"../../app/rootReducer\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { logout } from \"../current-user/currentUserSlice\";\nimport { showAuthModal } from \"../auth-modal/authModalSlice\";\n\nconst HeaderContainer: FC<unknown> = () => {\n  const currentUser: User | null = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return null;\n  });\n\n  const dispatch = useDispatch();\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  const handleShowAuthModal = useCallback(() => {\n    dispatch(showAuthModal());\n  }, [dispatch]);\n\n  return (\n    <Header\n      currentUser={currentUser}\n      onLogout={handleLogout}\n      onShowAuthModal={handleShowAuthModal}\n    />\n  );\n};\n\nexport default HeaderContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport LoginData from \"../../interfaces/LoginData\";\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n});\n\nexport interface LoginFormProps {\n  onSubmit?(\n    values: LoginData,\n    formikHelpers: FormikHelpers<LoginData>\n  ): void | Promise<any>;\n}\n\nexport const LoginForm: FC<LoginFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={loginSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as LoginData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { FormikHelpers } from \"formik/dist/types\";\n\nconst registrationSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n  confirmPassword: Yup.string()\n    .equals([Yup.ref(\"password\")], \"Please repeat the password\")\n    .required(\"Required\"),\n});\n\nexport interface RegistrationFormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface RegistrationFormProps {\n  onSubmit?(\n    values: RegistrationFormData,\n    formikHelpers: FormikHelpers<RegistrationFormData>\n  ): void | Promise<any>;\n}\n\nexport const RegistrationForm: FC<RegistrationFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        fullName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={registrationSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as RegistrationFormData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n\n          <Form.Group>\n            <Form.Label>Full name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"Enter full name\"\n              onBlur={handleBlur}\n              value={values.fullName}\n              onChange={handleChange}\n              isValid={touched.fullName && !errors.fullName}\n              isInvalid={touched.fullName && !!errors.fullName}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.fullName}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.confirmPassword}\n              isValid={touched.confirmPassword && !errors.confirmPassword}\n              isInvalid={touched.confirmPassword && !!errors.confirmPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.confirmPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikHelpers } from \"formik\";\nimport { LoginForm } from \"./LoginForm\";\nimport { RegistrationForm, RegistrationFormData } from \"./RegistrationForm\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport { login, register } from \"../current-user/currentUserSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nconst LoginTabsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const doLogin = React.useCallback(\n    (values: LoginData, formikHelpers: FormikHelpers<LoginData>) => {\n      return dispatch(login(values)).catch((err) => {\n        if (err.statusCode === 401) {\n          formikHelpers.setStatus(\"Incorrect email or password\");\n        } else {\n          formikHelpers.setStatus(\"Internal server error\");\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const doSignUp = React.useCallback(\n    (\n      values: RegistrationFormData,\n      formikHelpers: FormikHelpers<RegistrationFormData>\n    ) => {\n      return dispatch(\n        register({\n          fullName: values.fullName,\n          email: values.email,\n          password: values.password,\n        })\n      ).catch((err) => {\n        if (err.statusCode === 409) {\n          formikHelpers.setStatus(\n            \"The provided email address is already in use\"\n          );\n        } else {\n          formikHelpers.setStatus(\"Internal server error\");\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <Tabs transition={false}>\n      <Tab eventKey=\"home\" title=\"Login\">\n        <LoginForm onSubmit={doLogin} />\n      </Tab>\n      <Tab eventKey=\"profile\" title=\"Register\">\n        <RegistrationForm onSubmit={doSignUp} />\n      </Tab>\n    </Tabs>\n  );\n};\n\nexport default LoginTabsContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport LoginTabsContainer from \"./LoginTabsContainer\";\n\nexport interface AuthModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const AuthModal: FC<AuthModalProps> = ({ show = false, onHide }) => {\n  return (\n    <div>\n      <Modal show={show} onHide={onHide} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoginTabsContainer />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthModal } from \"./AuthModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideAuthModal } from \"./authModalSlice\";\n\nconst AuthModalContainer: FC<unknown> = () => {\n  const { isAuthModalVisible } = useSelector(\n    (state: RootState) => state.authModal\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideAuthModal());\n  }, [dispatch]);\n\n  return <AuthModal show={isAuthModalVisible} onHide={handleHide} />;\n};\n\nexport default AuthModalContainer;\n","import React, { FC, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport HomePage from \"../features/home-page/HomePage\";\nimport GamePage from \"../features/single-game/GamePage\";\nimport { fetchCurrentUser } from \"../features/current-user/currentUserSlice\";\nimport { watchGames } from \"../features/data-subscription/dataSubscriptionSlice\";\nimport { startGameClock } from \"../features/game-clock/gameClockSlice\";\nimport HeaderContainer from \"../features/header/HeaderContainer\";\nimport AuthModalContainer from \"../features/auth-modal/AuthModalContainer\";\nimport { fetchGames } from \"../features/games-list/gamesListSlice\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n    dispatch(watchGames());\n    dispatch(startGameClock());\n    dispatch(fetchGames());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container-fluid\">\n      <Router>\n        <HeaderContainer />\n        <AuthModalContainer />\n\n        <Switch>\n          <Route path=\"/game/:id\">\n            <GamePage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  getCurrentUserSuccess,\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\nimport { getGamesListSuccess } from \"../games-list/gamesListSlice\";\nimport {\n  getSingleGameSuccess,\n  abortGameSuccess,\n  resignGameSuccess,\n  offerDrawSuccess,\n  acceptDrawOfferSuccess,\n  declineDrawOfferSuccess,\n} from \"../single-game/singleGameSlice\";\nimport { challengeAiSuccess } from \"../challenge/challengeSlice\";\nimport { oneSecondPassed } from \"../game-clock/gameClockSlice\";\nimport {\n  updateGameBySubscription,\n  createGameBySubscription,\n} from \"../data-subscription/dataSubscriptionSlice\";\nimport {\n  makeMoveRequest,\n  makeMoveSuccess,\n  MoveRequestPayload,\n} from \"../move/moveSlice\";\nimport NormalizedUserEntity from \"../../normalizr/interfaces/NormalizedUserEntity\";\nimport NormalizedGameEntity from \"../../normalizr/interfaces/NormalizedGameEntity\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\n\nexport interface EntitiesState {\n  users: Record<string, NormalizedUserEntity>;\n  games: Record<string, NormalizedGameEntity>;\n}\n\nconst initialState: EntitiesState = {\n  users: {},\n  games: {},\n};\n\nconst getNormalizedDataReducer = (\n  state: EntitiesState,\n  action: Pick<\n    PayloadAction<{\n      entities: Partial<EntitiesState>;\n    }>,\n    \"payload\"\n  >\n) => {\n  Object.assign(state.users, action.payload.entities.users);\n  Object.assign(state.games, action.payload.entities.games);\n};\n\nconst entitiesSlice = createSlice({\n  name: \"entities\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getCurrentUserSuccess.type]: (\n      state: EntitiesState,\n      action: PayloadAction<null | {\n        entities: Partial<EntitiesState>;\n      }>\n    ) => {\n      if (action.payload) {\n        getNormalizedDataReducer(state, {\n          payload: action.payload,\n        });\n      }\n    },\n    [loginSuccess.type]: getNormalizedDataReducer,\n    [registerSuccess.type]: getNormalizedDataReducer,\n    [getGamesListSuccess.type]: getNormalizedDataReducer,\n    [getSingleGameSuccess.type]: getNormalizedDataReducer,\n    [abortGameSuccess.type]: getNormalizedDataReducer,\n    [resignGameSuccess.type]: getNormalizedDataReducer,\n    [offerDrawSuccess.type]: getNormalizedDataReducer,\n    [acceptDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [declineDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [challengeAiSuccess.type]: getNormalizedDataReducer,\n    [updateGameBySubscription.type]: getNormalizedDataReducer,\n    [createGameBySubscription.type]: getNormalizedDataReducer,\n    [makeMoveRequest.type]: (\n      state: EntitiesState,\n      action: PayloadAction<MoveRequestPayload>\n    ) => {\n      state.games[action.payload.gameId].turn =\n        state.games[action.payload.gameId].turn === \"white\" ? \"black\" : \"white\";\n      state.games[action.payload.gameId].moves = `${\n        state.games[action.payload.gameId].moves\n      } ${action.payload.move}`.trim();\n    },\n    [makeMoveSuccess.type]: getNormalizedDataReducer,\n    [oneSecondPassed.type]: (state: EntitiesState) => {\n      const gameIds = Object.keys(state.games);\n\n      gameIds.forEach((gameId) => {\n        const game = state.games[gameId];\n\n        if (game.status === \"started\") {\n          const chess = makeChessInstance(game);\n\n          if (chess.history().length > 1) {\n            const timePropName = game.turn === \"white\" ? \"wtime\" : \"btime\";\n\n            game[timePropName] -= 1000;\n            if (game[timePropName] < 0) {\n              game[timePropName] = 0;\n            }\n\n            if (game[timePropName] === 0) {\n              game.status = \"outoftime\";\n              game.winner = game.turn === \"white\" ? \"black\" : \"white\";\n            }\n          }\n        }\n      });\n    },\n  },\n});\n\nexport default entitiesSlice.reducer;\n","/* eslint-disable import/no-cycle */\n\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport gamesListReducer from \"../features/games-list/gamesListSlice\";\nimport currentUserReducer from \"../features/current-user/currentUserSlice\";\nimport authModalReducer from \"../features/auth-modal/authModalSlice\";\nimport challengeAiModalReducer from \"../features/challenge-ai-modal/challengeAiModalSlice\";\nimport entitiesReducer from \"../features/entities/entitiesSlice\";\nimport singleGameReducer from \"../features/single-game/singleGameSlice\";\n// import dataSubscriptionReducer from \"../redux/slices/dataSubscriptionSlice\";\n\nconst rootReducer = combineReducers({\n  authModal: authModalReducer,\n  challengeAiModal: challengeAiModalReducer,\n  // challenge: challengeReducer,\n  currentUser: currentUserReducer,\n  gamesList: gamesListReducer,\n  entities: entitiesReducer,\n  // dataSubscription: dataSubscriptionReducer,\n  singleGame: singleGameReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-cycle */\n\nimport { Action, configureStore } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk<R> = ThunkAction<R, RootState, unknown, Action<string>>;\n\nexport default store;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./app/store\";\n\nconst render = () => {\n  const App = require(\"./app/App\").default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./app/App\", render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Chess, ChessInstance } from \"chess.js\";\nimport Game from \"../interfaces/Game\";\n\nconst startPositionFen =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nexport default (\n  game: Pick<Game, \"initialFen\" | \"moves\">,\n  rewindToMoveIndex: number | null = null\n): ChessInstance => {\n  let { initialFen } = game;\n  if (initialFen === \"startpos\") {\n    initialFen = startPositionFen;\n  }\n\n  const chess = new Chess(initialFen);\n\n  if (game.moves) {\n    game.moves.split(\" \").forEach((move, index) => {\n      if (rewindToMoveIndex !== null && index >= rewindToMoveIndex) {\n        return;\n      }\n\n      const result = chess.move(move, {\n        sloppy: true,\n      });\n\n      if (!result) {\n        throw Error(`incorrect move: ${move}`);\n      }\n    });\n  }\n\n  return chess;\n};\n","import { schema } from \"normalizr\";\n\nconst userSchema = new schema.Entity(\"users\");\n\nexport default userSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"levelButtonGroup\":\"ChallengeAiForm_levelButtonGroup__1lnm_\",\"colorSubmits\":\"ChallengeAiForm_colorSubmits__1pM28\",\"colorSubmitsButton\":\"ChallengeAiForm_colorSubmitsButton__2P6Lx\",\"whiteButton\":\"ChallengeAiForm_whiteButton__2nTjs\",\"blackButton\":\"ChallengeAiForm_blackButton__1LVeL\",\"randomButton\":\"ChallengeAiForm_randomButton__1S07l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movesWrapper\":\"GameMoves_movesWrapper__2X9ck\",\"moveNumber\":\"GameMoves_moveNumber__3tyZT\",\"move\":\"GameMoves_move__21iOk\",\"selected\":\"GameMoves_selected__2FXRO\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface GamesListState {\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: GamesListState = {\n  isLoading: true,\n  error: null,\n};\n\nconst gamesListSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    getGamesListRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getGamesListSuccess(\n      state,\n      _action: PayloadAction<NormalizedData<number[]>>\n    ) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getGamesListError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getGamesListRequest,\n  getGamesListSuccess,\n  getGamesListError,\n} = gamesListSlice.actions;\n\nexport default gamesListSlice.reducer;\n\nexport const fetchGames = (): AppThunk<Promise<Game[]>> => (dispatch) => {\n  dispatch(getGamesListRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/game\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGames = normalize(body as Game[], [gameSchema]);\n        dispatch(getGamesListSuccess(normalizedGames));\n\n        resolve(body as Game[]);\n      } else {\n        dispatch(getGamesListError(body as string));\n        reject(jwr);\n      }\n    });\n  });\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\n\ninterface AuthModalState {\n  isAuthModalVisible: boolean;\n}\n\nconst initialState: AuthModalState = {\n  isAuthModalVisible: false,\n};\n\nconst authModalSlice = createSlice({\n  name: \"authModal\",\n  initialState,\n  reducers: {\n    showAuthModal(state) {\n      state.isAuthModalVisible = true;\n    },\n    hideAuthModal(state) {\n      state.isAuthModalVisible = false;\n    },\n  },\n  extraReducers: {\n    [loginSuccess.type]: (state) => {\n      state.isAuthModalVisible = false;\n    },\n    [registerSuccess.type]: (state) => {\n      state.isAuthModalVisible = false;\n    },\n  },\n});\n\nexport const { showAuthModal, hideAuthModal } = authModalSlice.actions;\n\nexport default authModalSlice.reducer;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { challengeAiSuccess } from \"../challenge/challengeSlice\";\n\ninterface ChallengeAiModalState {\n  isChallengeAiModalVisible: boolean;\n}\n\nconst initialState: ChallengeAiModalState = {\n  isChallengeAiModalVisible: false,\n};\n\nconst challengeAiModalSlice = createSlice({\n  name: \"challengeAiModal\",\n  initialState,\n  reducers: {\n    showChallengeAiModal(state) {\n      state.isChallengeAiModalVisible = true;\n    },\n    hideChallengeAiModal(state) {\n      state.isChallengeAiModalVisible = false;\n    },\n  },\n  extraReducers: {\n    [challengeAiSuccess.type]: (state) => {\n      state.isChallengeAiModalVisible = false;\n    },\n  },\n});\n\nexport const {\n  showChallengeAiModal,\n  hideChallengeAiModal,\n} = challengeAiModalSlice.actions;\n\nexport default challengeAiModalSlice.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface ChallengeState {}\n\nconst initialState: ChallengeState = {};\n\nconst challengeSlice = createSlice({\n  name: \"challenge\",\n  initialState,\n  reducers: {\n    challengeAiRequest() {},\n    challengeAiSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    challengeAiError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  challengeAiRequest,\n  challengeAiSuccess,\n  challengeAiError,\n} = challengeSlice.actions;\n\nexport default challengeSlice.reducer;\n\nexport const challengeAi = (data: ChallengeAiData): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(challengeAiRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/challenge/ai`,\n      data,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(challengeAiSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(challengeAiError(body as string));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport { SubscriptionData } from \"../../interfaces/SubscriptionData\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface DataSubscriptionState {}\n\nconst initialState: DataSubscriptionState = {};\n\nconst dataSubscriptionSlice = createSlice({\n  name: \"dataSubscription\",\n  initialState,\n  reducers: {\n    updateGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  updateGameBySubscription,\n  createGameBySubscription,\n} = dataSubscriptionSlice.actions;\n\nexport default dataSubscriptionSlice.reducer;\n\nexport const watchGames = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"game\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"updated\") {\n      const game = {\n        ...subscriptionData.previous,\n        ...subscriptionData.data,\n      };\n\n      const normalizedGame = normalize(game, gameSchema);\n\n      dispatch(updateGameBySubscription(normalizedGame));\n    } else if (subscriptionData.verb === \"created\") {\n      const normalizedGame = normalize(subscriptionData.data, gameSchema);\n\n      dispatch(createGameBySubscription(normalizedGame));\n    }\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface MoveState {}\n\nconst initialState: MoveState = {};\n\nconst moveSlice = createSlice({\n  name: \"move\",\n  initialState,\n  reducers: {\n    makeMoveRequest(_state, _action: PayloadAction<MoveRequestPayload>) {},\n    makeMoveSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    makeMoveError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  makeMoveRequest,\n  makeMoveSuccess,\n  makeMoveError,\n} = moveSlice.actions;\n\nexport default moveSlice.reducer;\n\nexport interface MoveRequestPayload {\n  gameId: number;\n  move: string;\n}\n\nexport const makeMove = (\n  gameId: number,\n  move: string\n): AppThunk<Promise<Game>> => (dispatch) => {\n  dispatch(\n    makeMoveRequest({\n      gameId,\n      move,\n    })\n  );\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${gameId}/move/${move}`,\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(makeMoveSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(makeMoveError(body as string));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePreview\":\"GamePreviewsListItem_gamePreview__wYvMw\",\"player\":\"GamePreviewsListItem_player__1GbNi\",\"board\":\"GamePreviewsListItem_board__2y4Yc\"};"],"sourceRoot":""}