{"version":3,"sources":["features/game-clock/gameClockSlice.ts","normalizr/schemas/gameSchema.ts","features/games-list/GamePreviewsList.module.scss","features/single-game/GameMoves.module.scss","services/ioClient.ts","features/single-game/singleGameSlice.ts","features/current-user/currentUserSlice.ts","features/games-list/GamePreviewsList.tsx","features/games-list/OngoingGamesContainer.tsx","features/home-page/ChallengeButtons.tsx","features/home-page/ChallengeButtonsContainer.tsx","features/challenge-ai-modal/ChallengeAiForm.tsx","features/challenge-ai-modal/ChallengeAiFormContainer.tsx","features/home-page/ChallengeAiModal.tsx","features/home-page/ChallengeAiModalContainer.tsx","features/games-list/CompletedGamesContainer.tsx","features/home-page/HomePage.tsx","features/single-game/GameMeta.tsx","utils/getGameStatusText.ts","features/single-game/GameClock.tsx","features/single-game/GameMoves.tsx","features/single-game/GameControlPanelUserName.tsx","features/single-game/GameControlPanelTopToolbar.tsx","features/single-game/GameControlPanelBottomToolbar.tsx","features/single-game/DrawOfferDialog.tsx","features/single-game/GameControlPanel.tsx","features/single-game/SingleGame.tsx","features/single-game/SingleGameContainer.tsx","pages/GamePage.tsx","features/header/Header.tsx","features/header/HeaderContainer.tsx","features/auth-modal/LoginForm.tsx","features/auth-modal/RegistrationForm.tsx","features/auth-modal/LoginTabsContainer.tsx","features/auth-modal/AuthModal.tsx","features/auth-modal/AuthModalContainer.tsx","app/App.tsx","serviceWorker.ts","features/entities/entitiesSlice.ts","app/rootReducer.ts","app/store.ts","index.tsx","utils/makeChessInstance.ts","normalizr/schemas/userSchema.ts","features/challenge-ai-modal/ChallengeAiForm.module.scss","features/games-list/gamesListSlice.ts","features/auth-modal/authModalSlice.ts","features/challenge-ai-modal/challengeAiModalSlice.ts","features/challenge/challengeSlice.ts","features/data-subscription/dataSubscriptionSlice.ts","features/move/moveSlice.ts"],"names":["gameClockSlice","createSlice","name","initialState","reducers","oneSecondPassed","extraReducers","actions","startGameClock","dispatch","setInterval","gameSchema","schema","Entity","white","userSchema","black","module","exports","ioClient","sailsIOClient","socketIOClient","sails","url","defaultSingleGameItemState","isLoading","error","isFlipped","rewindToMoveIndex","singleGameSlice","getSingleGameRequest","state","action","payload","Object","assign","getSingleGameSuccess","result","getSingleGameError","itemId","abortGameRequest","_state","_action","abortGameSuccess","abortGameError","resignGameRequest","resignGameSuccess","resignGameError","offerDrawRequest","offerDrawSuccess","offerDrawError","acceptDrawOfferRequest","acceptDrawOfferSuccess","acceptDrawOfferError","declineDrawOfferRequest","declineDrawOfferSuccess","declineDrawOfferError","flipBoard","rewindToMove","gameId","moveIndex","fetchGame","id","Promise","resolve","reject","socket","get","body","jwr","statusCode","normalizedGame","normalize","abortGame","post","resignGame","offerDraw","acceptDrawOffer","declineDrawOffer","currentUserSlice","userId","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","loginSuccess","registerSuccess","logoutSuccess","fetchCurrentUser","normalizedUser","login","data","put","emailAddress","email","password","register","fullName","confirmPassword","agreed","logout","GamePreviewsList","games","className","css","grid","map","item","fen","makeChessInstance","to","key","cell","position","viewOnly","width","OngoingGamesContainer","useSelector","denormalize","keys","entities","filter","game","status","sort","a","b","createdAt","ChallengeButtons","onChallengeAi","handleChallengeAi","useCallback","Button","variant","onClick","data-testid","ChallengeButtonsContainer","useDispatch","showChallengeAiModal","ChallengeAiForm","onSubmit","initialValues","level","color","clockLimit","clockIncrement","values","formikHelpers","handleChange","handleBlur","handleSubmit","isSubmitting","setStatus","setFieldValue","Form","noValidate","e","onChange","Alert","Group","Label","Control","type","onBlur","value","min","max","step","Row","ButtonGroup","cx","levelButtonGroup","colorSubmits","disabled","title","colorSubmitsButton","blackButton","randomButton","whiteButton","ChallengeAiFormContainer","history","useHistory","challengeAiAndOpenGamePage","challengeAi","then","push","catch","err","ChallengeAiModal","show","onHide","Modal","animation","Header","closeButton","Title","Body","ChallengeAiModalContainer","isChallengeAiModalVisible","challengeAiModal","handleHide","hideChallengeAiModal","CompletedGamesContainer","HomePage","GameMeta","winner","getGameStatusText","aiLevel","GameClock","time","formattedTime","moment","startOf","milliseconds","format","formatMove","move","from","GameMoves","onRewindToMove","movesHistory","verbose","movesPairs","_chunk","makeRewindToMoveHandler","pair","index","role","selected","GameControlPanelUserName","GameControlPanelTopToolbar","isFirstMove","isLastMove","hasPrevMove","hasNextMove","onFlipBoard","onRewindToPrevMove","onRewindToNextMove","onRewindToFirstMove","onRewindToLastMove","handleFlipBoard","handleRewindToPrevMove","handleRewindToNextMove","handleRewindToFirstMove","handleRewindToLastMove","GameControlPanelBottomToolbar","canAbortGame","canOfferDraw","canResignGame","onAbortGame","onOfferDraw","onResignGame","handleAbortGame","handleOfferDraw","handleResignGame","DrawOfferDialog","onAccept","onDecline","handleAccept","handleDecline","GameControlPanel","orientation","drawOfferSentByCurrentUser","drawOfferSentByOpponent","onAcceptDrawOffer","onDeclineDrawOffer","length","btime","wtime","SingleGame","currentUser","onMove","movableColor","chessWithAllMoves","chess","check","in_check","turnColor","turn","PieceColor","WHITE","BLACK","validMoves","getValidMoves","lastMoveSquares","lastMove","drawOffer","playerPiecesColor","allowMarkers","clickable","draggable","SingleGameContainer","singleGameItemState","singleGame","useEffect","handleAcceptDrawOffer","handleDeclineDrawOffer","handleMove","makeMove","handleRewindToMove","GamePage","useParams","Number","onLogout","onShowAuthModal","handleLogout","handleShowAuthModal","href","target","rel","src","process","alt","HeaderContainer","showAuthModal","loginSchema","Yup","shape","required","LoginForm","validationSchema","errors","touched","placeholder","isValid","isInvalid","Feedback","registrationSchema","equals","RegistrationForm","LoginTabsContainer","doLogin","React","doSignUp","Tabs","transition","Tab","eventKey","AuthModal","AuthModalContainer","isAuthModalVisible","authModal","hideAuthModal","App","watchGames","fetchGames","path","Boolean","window","location","hostname","match","getNormalizedDataReducer","users","entitiesSlice","getGamesListSuccess","challengeAiSuccess","updateGameBySubscription","createGameBySubscription","makeMoveRequest","moves","trim","makeMoveSuccess","forEach","timePropName","rootReducer","combineReducers","authModalReducer","challengeAiModalReducer","currentUserReducer","gamesList","gamesListReducer","entitiesReducer","singleGameReducer","store","configureStore","reducer","require","default","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","startPositionFen","initialFen","Chess","split","sloppy","Error","gamesListSlice","getGamesListRequest","getGamesListError","normalizedGames","authModalSlice","challengeAiModalSlice","challengeSlice","challengeAiRequest","challengeAiError","dataSubscriptionSlice","on","subscriptionData","verb","previous","moveSlice","makeMoveError"],"mappings":"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","file":"static/js/main.407e0973.chunk.js","sourcesContent":["/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../../app/store\";\n\ninterface GameClockState {}\n\nconst initialState: GameClockState = {};\n\nconst gameClockSlice = createSlice({\n  name: \"gameClock\",\n  initialState,\n  reducers: {\n    oneSecondPassed() {},\n  },\n  extraReducers: {},\n});\n\nexport const { oneSecondPassed } = gameClockSlice.actions;\n\nexport default gameClockSlice.reducer;\n\nexport const startGameClock = (): AppThunk<void> => (dispatch) => {\n  setInterval(() => {\n    dispatch(oneSecondPassed());\n  }, 1000);\n};\n","import { schema } from \"normalizr\";\nimport userSchema from \"./userSchema\";\n\nconst gameSchema = new schema.Entity(\"games\", {\n  white: userSchema,\n  black: userSchema,\n});\n\nexport default gameSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"GamePreviewsList_grid__2iggX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"GameMoves_selected__2FXRO\"};","import socketIOClient from \"socket.io-client\";\nimport sailsIOClient from \"sails.io.js\";\n\nconst ioClient = sailsIOClient(socketIOClient);\n\nioClient.sails.url = \"http://localhost:1337\";\n\nexport default ioClient;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable prefer-object-spread */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\nexport interface RewindToMovePayload {\n  gameId: number;\n  moveIndex: number | null;\n}\n\ninterface SingleGameItemState {\n  isLoading: boolean;\n  error: string | null;\n  isFlipped: boolean;\n  rewindToMoveIndex: number | null;\n}\n\ninterface SingleGameState {\n  [gameId: string]: SingleGameItemState;\n}\n\nexport const defaultSingleGameItemState: SingleGameItemState = {\n  isLoading: true,\n  error: null,\n  isFlipped: false,\n  rewindToMoveIndex: null,\n};\n\nconst initialState: SingleGameState = {};\n\nconst singleGameSlice = createSlice({\n  name: \"singleGame\",\n  initialState,\n  reducers: {\n    getSingleGameRequest(state, action: PayloadAction<number>) {\n      state[action.payload] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload],\n        {\n          isLoading: true,\n          error: null,\n        }\n      );\n    },\n    getSingleGameSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state[action.payload.result] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.result],\n        {\n          isLoading: false,\n          error: null,\n        }\n      );\n    },\n    getSingleGameError(state, action: PayloadAction<ItemErrorPayload>) {\n      state[action.payload.itemId] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.itemId],\n        {\n          isLoading: false,\n          error: action.payload.error,\n        }\n      );\n    },\n    abortGameRequest(_state, _action: PayloadAction<number>) {},\n    abortGameSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    abortGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n    resignGameRequest(_state, _action: PayloadAction<number>) {},\n    resignGameSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    resignGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    offerDrawRequest(_state, _action: PayloadAction<number>) {},\n    offerDrawSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    offerDrawError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    acceptDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    acceptDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    acceptDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    declineDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    declineDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    declineDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    flipBoard(state, action: PayloadAction<number>) {\n      state[action.payload].isFlipped = !state[action.payload].isFlipped;\n    },\n    rewindToMove(state, action: PayloadAction<RewindToMovePayload>) {\n      state[action.payload.gameId].rewindToMoveIndex = action.payload.moveIndex;\n    },\n  },\n  extraReducers: {},\n});\n\nexport const {\n  getSingleGameRequest,\n  getSingleGameSuccess,\n  getSingleGameError,\n  flipBoard,\n  rewindToMove,\n  abortGameRequest,\n  abortGameSuccess,\n  abortGameError,\n  resignGameRequest,\n  resignGameSuccess,\n  resignGameError,\n  offerDrawRequest,\n  offerDrawSuccess,\n  offerDrawError,\n  acceptDrawOfferRequest,\n  acceptDrawOfferSuccess,\n  acceptDrawOfferError,\n  declineDrawOfferRequest,\n  declineDrawOfferSuccess,\n  declineDrawOfferError,\n} = singleGameSlice.actions;\n\nexport default singleGameSlice.reducer;\n\nexport const fetchGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(getSingleGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(`/game/${id}`, (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGame = normalize(body as Game, gameSchema);\n        dispatch(getSingleGameSuccess(normalizedGame));\n        resolve(body as Game);\n      } else {\n        dispatch(\n          getSingleGameError({\n            itemId: id,\n            error: body as string,\n          })\n        );\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const abortGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(abortGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/abort`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(abortGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            abortGameError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const resignGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(resignGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/resign`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(resignGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            resignGameError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const offerDraw = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(offerDrawRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(offerDrawSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            offerDrawError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const acceptDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(acceptDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(acceptDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            acceptDrawOfferError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\nexport const declineDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(declineDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/no`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(declineDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            declineDrawOfferError({\n              itemId: id,\n              error: body as string,\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport { JWR } from \"sails.io.js\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport User from \"../../interfaces/User\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport SignUpData from \"../../interfaces/SignUpData\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface CurrentUserState {\n  userId: number | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: CurrentUserState = {\n  userId: null,\n  isLoading: true,\n  error: null,\n};\n\nconst currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    getCurrentUserRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getCurrentUserSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number> | null>\n    ) {\n      state.userId = action.payload ? action.payload.result : null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    getCurrentUserError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    loginSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    registerSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    logoutSuccess(state) {\n      state.userId = null;\n    },\n  },\n});\n\nexport const {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n  loginSuccess,\n  registerSuccess,\n  logoutSuccess,\n} = currentUserSlice.actions;\n\nexport default currentUserSlice.reducer;\n\nexport const fetchCurrentUser = (): AppThunk<Promise<User | null>> => (\n  dispatch\n) => {\n  dispatch(getCurrentUserRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/api/v1/account/me\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedUser = normalize(body as User, userSchema);\n\n        dispatch(getCurrentUserSuccess(normalizedUser));\n        resolve(body as User);\n      } else if (jwr.statusCode === 401) {\n        dispatch(getCurrentUserSuccess(null));\n        resolve(null);\n      } else {\n        dispatch(getCurrentUserError(body as string));\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const login = (data: LoginData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.put(\n      \"/api/v1/entrance/login\",\n      {\n        // rememberMe: true, // because of warning in backend @see https://tracker.yandex.ru/CHESSPWA-47\n        emailAddress: data.email,\n        password: data.password,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(loginSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const register = (data: SignUpData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/entrance/signup\",\n      {\n        fullName: data.fullName,\n        emailAddress: data.email,\n        password: data.password,\n        confirmPassword: data.password,\n        agreed: true,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(registerSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const logout = (): AppThunk<Promise<void>> => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/account/logout\",\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          dispatch(logoutSuccess());\n          resolve();\n        } else {\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","import React, { FC } from \"react\";\nimport { Board } from \"ii-react-chessboard\";\nimport { Link } from \"react-router-dom\";\nimport Game from \"../../interfaces/Game\";\nimport css from \"./GamePreviewsList.module.scss\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\n\nexport interface GamePreviewsListProps {\n  games?: Game[];\n}\n\nexport const GamePreviewsList: FC<GamePreviewsListProps> = ({ games = [] }) => {\n  return (\n    <div className={css.grid}>\n      {games.map((item) => {\n        const fen: string = makeChessInstance(item).fen();\n\n        return (\n          <Link to={`/game/${item.id}`} key={item.id}>\n            <div className={css.cell}>\n              <Board position={fen} viewOnly={false} width={240} />\n            </div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst OngoingGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter((game: Game) => game.status === \"started\")\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n  );\n\n  return <GamePreviewsList games={games} />;\n};\n\nexport default OngoingGamesContainer;\n","import React, { FC, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface ChallengeButtonsProps {\n  onChallengeAi?(): void;\n}\n\nexport const ChallengeButtons: FC<ChallengeButtonsProps> = ({\n  onChallengeAi,\n}) => {\n  const handleChallengeAi = useCallback(() => {\n    if (onChallengeAi) {\n      onChallengeAi();\n    }\n  }, [onChallengeAi]);\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={handleChallengeAi}\n      data-testid=\"challenge-ai-btn\"\n    >\n      Play with the computer\n    </Button>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeButtons } from \"./ChallengeButtons\";\nimport { showChallengeAiModal } from \"../challenge-ai-modal/challengeAiModalSlice\";\n\nconst ChallengeButtonsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch();\n\n  const handleChallengeAi = useCallback(() => {\n    dispatch(showChallengeAiModal());\n  }, [dispatch]);\n\n  return <ChallengeButtons onChallengeAi={handleChallengeAi} />;\n};\n\nexport default ChallengeButtonsContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Formik, FormikHelpers } from \"formik\";\nimport React, { FC, FormEvent } from \"react\";\nimport cx from \"classnames\";\nimport { Alert, Button, ButtonGroup, Form, Row } from \"react-bootstrap\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport css from \"./ChallengeAiForm.module.scss\";\n\nexport interface ChallengeAiFormProps {\n  onSubmit?(\n    values: ChallengeAiData,\n    formikHelpers: FormikHelpers<ChallengeAiData>\n  ): void | Promise<any>;\n}\n\nexport const ChallengeAiForm: FC<ChallengeAiFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        level: 3,\n        color: \"\",\n        clockLimit: 300,\n        clockIncrement: 3,\n      }}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(\n            values as ChallengeAiData,\n            formikHelpers as FormikHelpers<ChallengeAiData>\n          );\n        }\n        return undefined;\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        setFieldValue,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <fieldset>\n            <Form.Group>\n              <Form.Label>\n                Minutes per side: {values.clockLimit / 60}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockLimit\"\n                onBlur={handleBlur}\n                value={values.clockLimit}\n                onChange={handleChange}\n                min=\"60\"\n                max=\"1800\"\n                step=\"60\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Increment in seconds: {values.clockIncrement}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockIncrement\"\n                onBlur={handleBlur}\n                value={values.clockIncrement}\n                onChange={handleChange}\n                min=\"0\"\n                max=\"60\"\n              />\n            </Form.Group>\n          </fieldset>\n\n          <div className=\"text-center\">Level</div>\n\n          <Row>\n            <ButtonGroup className={cx(\"mx-auto\", css.levelButtonGroup)}>\n              {[1, 2, 3, 4].map((level) => (\n                <Button\n                  key={level}\n                  type=\"button\"\n                  variant={level === values.level ? \"dark\" : \"light\"}\n                  onClick={() => setFieldValue(\"level\", level)}\n                >\n                  {level}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Row>\n\n          <div className=\"text-center\">A.I. Level: {values.level}</div>\n\n          <div className={css.colorSubmits}>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Black\"\n              className={cx(css.colorSubmitsButton, css.blackButton)}\n              onClick={() => setFieldValue(\"color\", \"black\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Random side\"\n              className={cx(css.colorSubmitsButton, css.randomButton)}\n              onClick={() => setFieldValue(\"color\", \"random\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"White\"\n              className={cx(css.colorSubmitsButton, css.whiteButton)}\n              onClick={() => setFieldValue(\"color\", \"white\")}\n            >\n              <i />\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { FormikHelpers } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeAiForm } from \"./ChallengeAiForm\";\nimport { AppDispatch } from \"../../app/store\";\nimport { challengeAi } from \"../challenge/challengeSlice\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport Game from \"../../interfaces/Game\";\n\nconst ChallengeAiFormContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const history = useHistory();\n\n  const challengeAiAndOpenGamePage = useCallback(\n    (\n      values: ChallengeAiData,\n      formikHelpers: FormikHelpers<ChallengeAiData>\n    ) => {\n      return dispatch(challengeAi(values))\n        .then((game: Game) => {\n          history.push(`/game/${game.id}`);\n        })\n        .catch((err) => {\n          if (err.statusCode === 401) {\n            formikHelpers.setStatus(\"You must log in to play with computer\");\n          } else {\n            formikHelpers.setStatus(\"Internal server error\");\n          }\n        });\n    },\n    [dispatch, history]\n  );\n\n  return <ChallengeAiForm onSubmit={challengeAiAndOpenGamePage} />;\n};\n\nexport default ChallengeAiFormContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport ChallengeAiFormContainer from \"../challenge-ai-modal/ChallengeAiFormContainer\";\n\nexport interface ChallengeAiModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const ChallengeAiModal: FC<ChallengeAiModalProps> = ({\n  show = false,\n  onHide,\n}) => {\n  return (\n    <Modal show={show} onHide={onHide} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Play with the computer</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <ChallengeAiFormContainer />\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChallengeAiModal } from \"./ChallengeAiModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideChallengeAiModal } from \"../challenge-ai-modal/challengeAiModalSlice\";\n\nconst ChallengeAiModalContainer: FC<unknown> = () => {\n  const { isChallengeAiModalVisible } = useSelector(\n    (state: RootState) => state.challengeAiModal\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideChallengeAiModal());\n  }, [dispatch]);\n\n  return (\n    <ChallengeAiModal show={isChallengeAiModalVisible} onHide={handleHide} />\n  );\n};\n\nexport default ChallengeAiModalContainer;\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst CompletedGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter(\n        (game: Game) => game.status !== \"started\" && game.status !== \"aborted\"\n      )\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n  );\n\n  return <GamePreviewsList games={games} />;\n};\n\nexport default CompletedGamesContainer;\n","import React, { FC } from \"react\";\nimport OngoingGamesContainer from \"../games-list/OngoingGamesContainer\";\nimport ChallengeButtonsContainer from \"./ChallengeButtonsContainer\";\nimport ChallengeAiModalContainer from \"./ChallengeAiModalContainer\";\nimport CompletedGamesContainer from \"../games-list/CompletedGamesContainer\";\n\nconst HomePage: FC<unknown> = () => {\n  return (\n    <>\n      <ChallengeAiModalContainer />\n      <div className=\"d-flex justify-content-center\">\n        <ChallengeButtonsContainer />\n      </div>\n\n      <h3>Ongoing Games</h3>\n      <OngoingGamesContainer />\n\n      <h3>Completed Games</h3>\n      <CompletedGamesContainer />\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport getGameStatusText from \"../../utils/getGameStatusText\";\n\nexport interface GameMetaProps {\n  game?: Game;\n}\n\nexport const GameMeta: FC<GameMetaProps> = ({ game }) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <>\n      <div>{getGameStatusText(game)}</div>\n      <div>\n        {game.clockLimit / 60} + {game.clockIncrement}\n      </div>\n      <div data-testid=\"white-user\">\n        White: {game.white ? game.white.fullName : `AI level ${game.aiLevel}`}\n      </div>\n      <div data-testid=\"black-user\">\n        Black: {game.black ? game.black.fullName : `AI level ${game.aiLevel}`}\n      </div>\n    </>\n  );\n};\n","import Game from \"../interfaces/Game\";\n\nexport default (game: Game): string => {\n  if (game.status === \"outoftime\") {\n    if (game.winner === \"white\") {\n      return \"Time out • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Time out • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"resign\") {\n    if (game.winner === \"black\") {\n      return \"White resigned • Black is victorious\";\n    }\n    if (game.winner === \"white\") {\n      return \"Black resigned • White is victorious\";\n    }\n  }\n\n  if (game.status === \"aborted\") {\n    return \"Game aborted\";\n  }\n\n  if (game.status === \"mate\") {\n    if (game.winner === \"white\") {\n      return \"Checkmate • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Checkmate • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"draw\") {\n    return \"Draw\";\n  }\n\n  if (game.status === \"stalemate\") {\n    return \"Stalemate\";\n  }\n\n  return \"Playing right now\";\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\n\nexport interface GameClockProps {\n  time?: number; // in msec\n}\n\nexport const GameClock: FC<GameClockProps> = ({ time = 0 }) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm : ss\");\n\n  return <div data-testid=\"time\">{formattedTime}</div>;\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/click-events-have-key-events */ // @todo\n/* eslint-disable jsx-a11y/interactive-supports-focus */ // @todo\n\nimport React, { FC } from \"react\";\nimport { chunk as _chunk } from \"lodash\";\nimport { Move } from \"chess.js\";\nimport cx from \"classnames\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GameMoves.module.scss\";\n\nexport interface GameMovesProps {\n  game?: Game;\n  rewindToMoveIndex?: number | null;\n  onRewindToMove?(moveIndex: number): void;\n}\n\nconst formatMove = (move: Move): string => {\n  return `${move.from}${move.to}`;\n};\n\nexport const GameMoves: FC<GameMovesProps> = ({\n  game,\n  rewindToMoveIndex = null,\n  onRewindToMove,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chess = makeChessInstance(game);\n\n  const movesHistory = chess.history({ verbose: true });\n\n  const movesPairs = _chunk(movesHistory, 2);\n\n  const makeRewindToMoveHandler = (moveIndex: number) => {\n    return () => {\n      if (onRewindToMove) {\n        onRewindToMove(moveIndex);\n      }\n    };\n  };\n\n  return (\n    <table>\n      <tbody>\n        {movesPairs.map((pair, index) => (\n          <tr key={`move-${index}`}>\n            <td>{index + 1}</td>\n            <td>\n              <div\n                data-testid={`move-${index * 2}`}\n                onClick={makeRewindToMoveHandler(index * 2)}\n                role=\"button\"\n                className={cx({\n                  [css.selected]: rewindToMoveIndex === index * 2,\n                })}\n              >\n                {formatMove(pair[0])}\n              </div>\n            </td>\n            <td>\n              {pair[1] && (\n                <div\n                  data-testid={`move-${index * 2 + 1}`}\n                  onClick={makeRewindToMoveHandler(index * 2 + 1)}\n                  role=\"button\"\n                  className={cx({\n                    [css.selected]: rewindToMoveIndex === index * 2 + 1,\n                  })}\n                >\n                  {formatMove(pair[1])}\n                </div>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\n\nexport interface GameControlPanelUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GameControlPanelUserName: FC<GameControlPanelUserNameProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <div>\n      {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface GameControlPanelTopToolbarProps {\n  isFirstMove?: boolean;\n  isLastMove?: boolean;\n  hasPrevMove?: boolean;\n  hasNextMove?: boolean;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n}\n\nexport const GameControlPanelTopToolbar: FC<GameControlPanelTopToolbarProps> = ({\n  isFirstMove = false,\n  isLastMove = false,\n  hasPrevMove = false,\n  hasNextMove = false,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n}) => {\n  const handleFlipBoard = useCallback(() => {\n    if (onFlipBoard) {\n      onFlipBoard();\n    }\n  }, [onFlipBoard]);\n  const handleRewindToPrevMove = useCallback(() => {\n    if (onRewindToPrevMove) {\n      onRewindToPrevMove();\n    }\n  }, [onRewindToPrevMove]);\n  const handleRewindToNextMove = useCallback(() => {\n    if (onRewindToNextMove) {\n      onRewindToNextMove();\n    }\n  }, [onRewindToNextMove]);\n  const handleRewindToFirstMove = useCallback(() => {\n    if (onRewindToFirstMove) {\n      onRewindToFirstMove();\n    }\n  }, [onRewindToFirstMove]);\n  const handleRewindToLastMove = useCallback(() => {\n    if (onRewindToLastMove) {\n      onRewindToLastMove();\n    }\n  }, [onRewindToLastMove]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-testid=\"flip-board-btn\"\n        onClick={handleFlipBoard}\n      >\n        Flip board\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-prev-move-btn\"\n        onClick={handleRewindToPrevMove}\n        disabled={!hasPrevMove}\n      >\n        Rewind to prev move\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-first-move-btn\"\n        onClick={handleRewindToFirstMove}\n        disabled={isFirstMove}\n      >\n        Rewind to first move\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-last-move-btn\"\n        onClick={handleRewindToLastMove}\n        disabled={isLastMove}\n      >\n        Rewind to last move\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"rewind-to-next-move-btn\"\n        onClick={handleRewindToNextMove}\n        disabled={!hasNextMove}\n      >\n        Rewind to next move\n      </button>\n    </>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface GameControlPanelBottomToolbarProps {\n  canAbortGame?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanelBottomToolbar: FC<GameControlPanelBottomToolbarProps> = ({\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  const handleAbortGame = useCallback(() => {\n    if (onAbortGame) {\n      onAbortGame();\n    }\n  }, [onAbortGame]);\n  const handleOfferDraw = useCallback(() => {\n    if (onOfferDraw) {\n      onOfferDraw();\n    }\n  }, [onOfferDraw]);\n  const handleResignGame = useCallback(() => {\n    if (onResignGame) {\n      onResignGame();\n    }\n  }, [onResignGame]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-testid=\"abort-game-btn\"\n        onClick={handleAbortGame}\n        disabled={!canAbortGame}\n      >\n        Abort\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"offer-draw-btn\"\n        onClick={handleOfferDraw}\n        disabled={!canOfferDraw}\n      >\n        Offer a draw\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"resign-game-btn\"\n        onClick={handleResignGame}\n        disabled={!canResignGame}\n      >\n        Resign\n      </button>\n    </>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\n\nexport interface DrawOfferDialogProps {\n  onAccept?(): void;\n  onDecline?(): void;\n}\n\nexport const DrawOfferDialog: FC<DrawOfferDialogProps> = ({\n  onAccept,\n  onDecline,\n}) => {\n  const handleAccept = useCallback(() => {\n    if (onAccept) {\n      onAccept();\n    }\n  }, [onAccept]);\n\n  const handleDecline = useCallback(() => {\n    if (onDecline) {\n      onDecline();\n    }\n  }, [onDecline]);\n\n  return (\n    <div>\n      <button type=\"button\" data-testid=\"accept-btn\" onClick={handleAccept}>\n        Accept\n      </button>\n      <button type=\"button\" data-testid=\"decline-btn\" onClick={handleDecline}>\n        Decline\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport { GameClock } from \"./GameClock\";\nimport { GameMoves } from \"./GameMoves\";\nimport { GameControlPanelUserName } from \"./GameControlPanelUserName\";\nimport { GameControlPanelTopToolbar } from \"./GameControlPanelTopToolbar\";\nimport { GameControlPanelBottomToolbar } from \"./GameControlPanelBottomToolbar\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport { DrawOfferDialog } from \"./DrawOfferDialog\";\n\nexport interface GameControlPanelProps {\n  game?: Game;\n  orientation?: PieceColor;\n  rewindToMoveIndex?: number | null;\n  canAbortGame?: boolean;\n  canDrawOffer?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  drawOfferSentByCurrentUser?: boolean;\n  drawOfferSentByOpponent?: boolean;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onRewindToMove?(moveIndex: number): void;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanel: FC<GameControlPanelProps> = ({\n  game,\n  orientation = \"white\",\n  rewindToMoveIndex = null,\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  drawOfferSentByCurrentUser = false,\n  drawOfferSentByOpponent = false,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onRewindToMove,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chess = makeChessInstance(game);\n\n  const movesHistory = chess.history();\n\n  const isFirstMove = movesHistory.length <= 1 || rewindToMoveIndex === 0;\n\n  const isLastMove = rewindToMoveIndex === null;\n\n  const hasPrevMove = movesHistory.length > 1 && rewindToMoveIndex !== 0;\n\n  const hasNextMove = rewindToMoveIndex !== null;\n\n  return (\n    <div>\n      <GameClock time={orientation === \"white\" ? game.btime : game.wtime} />\n      <GameControlPanelUserName\n        game={game}\n        color={orientation === \"white\" ? \"black\" : \"white\"}\n      />\n      <GameControlPanelTopToolbar\n        isFirstMove={isFirstMove}\n        isLastMove={isLastMove}\n        hasPrevMove={hasPrevMove}\n        hasNextMove={hasNextMove}\n        onFlipBoard={onFlipBoard}\n        onRewindToPrevMove={onRewindToPrevMove}\n        onRewindToNextMove={onRewindToNextMove}\n        onRewindToFirstMove={onRewindToFirstMove}\n        onRewindToLastMove={onRewindToLastMove}\n      />\n      <GameMoves\n        game={game}\n        rewindToMoveIndex={rewindToMoveIndex}\n        onRewindToMove={onRewindToMove}\n      />\n      {drawOfferSentByOpponent && (\n        <DrawOfferDialog\n          onAccept={onAcceptDrawOffer}\n          onDecline={onDeclineDrawOffer}\n        />\n      )}\n      {drawOfferSentByCurrentUser && (\n        <div data-testid=\"draw-offer-sent-message\">Draw offer sent</div>\n      )}\n      <GameControlPanelBottomToolbar\n        canAbortGame={canAbortGame}\n        canOfferDraw={canOfferDraw}\n        canResignGame={canResignGame}\n        onAbortGame={onAbortGame}\n        onOfferDraw={onOfferDraw}\n        onResignGame={onResignGame}\n      />\n      <GameControlPanelUserName\n        game={game}\n        color={orientation === \"white\" ? \"white\" : \"black\"}\n      />\n      <GameClock time={orientation === \"white\" ? game.wtime : game.btime} />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ChessInstance } from \"chess.js\";\nimport {\n  Board,\n  getValidMoves,\n  Move,\n  PieceColor,\n  ValidMoves,\n} from \"ii-react-chessboard\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport User from \"../../interfaces/User\";\nimport { GameMeta } from \"./GameMeta\";\nimport { GameControlPanel } from \"./GameControlPanel\";\nimport { PieceColor as AppPieceColor } from \"../../types/PieceColor\";\n\nexport interface SingleGameProps {\n  game?: Game;\n  currentUser?: User;\n  isFlipped?: boolean;\n  rewindToMoveIndex?: number | null;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onMove?(move: Move): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n  onFlipBoard?(): void;\n  onRewindToMove?(moveIndex: number | null): void;\n}\n\nexport const SingleGame: FC<SingleGameProps> = ({\n  game,\n  currentUser,\n  isFlipped = false,\n  rewindToMoveIndex = null,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n  onMove,\n  onFlipBoard,\n  onRewindToMove,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const chessWithAllMoves: ChessInstance = makeChessInstance(game);\n\n  const chess: ChessInstance =\n    rewindToMoveIndex === null\n      ? chessWithAllMoves\n      : makeChessInstance(game, rewindToMoveIndex);\n\n  const check: boolean = chess.in_check();\n\n  const fen: string = chess.fen();\n\n  const turnColor: PieceColor =\n    game.turn === \"white\" ? PieceColor.WHITE : PieceColor.BLACK;\n\n  const validMoves: ValidMoves = getValidMoves(chess);\n\n  let viewOnly = true;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    rewindToMoveIndex === null\n  ) {\n    viewOnly = false;\n  }\n\n  let movableColor: PieceColor | undefined;\n  if (currentUser && currentUser.id === game.white?.id) {\n    movableColor = PieceColor.WHITE;\n  }\n  if (currentUser && currentUser.id === game.black?.id) {\n    movableColor = PieceColor.BLACK;\n  }\n\n  let orientation = PieceColor.WHITE;\n  if (currentUser && currentUser.id === game.black?.id) {\n    orientation = PieceColor.BLACK;\n  }\n  if (isFlipped) {\n    orientation =\n      orientation === PieceColor.WHITE ? PieceColor.BLACK : PieceColor.WHITE;\n  }\n\n  const movesHistory = chessWithAllMoves.history({ verbose: true });\n\n  let lastMoveSquares: string[] | undefined;\n  if (rewindToMoveIndex === null) {\n    if (movesHistory.length) {\n      const lastMove = movesHistory[movesHistory.length - 1];\n      lastMoveSquares = [lastMove.from, lastMove.to];\n    }\n  } else {\n    const lastMove = movesHistory[rewindToMoveIndex];\n    lastMoveSquares = [lastMove.from, lastMove.to];\n  }\n\n  let canAbortGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesHistory.length < 2\n  ) {\n    canAbortGame = true;\n  }\n\n  let canResignGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesHistory.length > 1\n  ) {\n    canResignGame = true;\n  }\n\n  let canOfferDraw = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.drawOffer === null &&\n    game.aiLevel === 0 &&\n    game.status === \"started\" &&\n    movesHistory.length > 1\n  ) {\n    canOfferDraw = true;\n  }\n\n  let playerPiecesColor: AppPieceColor | null = null;\n  if (currentUser) {\n    if (currentUser.id === game.white?.id) {\n      playerPiecesColor = \"white\";\n    } else if (currentUser.id === game.black?.id) {\n      playerPiecesColor = \"black\";\n    }\n  }\n\n  let drawOfferSentByCurrentUser = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer === playerPiecesColor\n  ) {\n    drawOfferSentByCurrentUser = true;\n  }\n\n  let drawOfferSentByOpponent = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer !== null &&\n    game.drawOffer !== playerPiecesColor\n  ) {\n    drawOfferSentByOpponent = true;\n  }\n\n  // @todo. use useCallback hook\n  const handleRewindToMove = (moveIndex: number) => {\n    if (onRewindToMove) {\n      if (moveIndex === movesHistory.length - 1) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove(moveIndex);\n      }\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToFirstMove = () => {\n    if (onRewindToMove) {\n      onRewindToMove(0);\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToLastMove = () => {\n    if (onRewindToMove) {\n      onRewindToMove(null);\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToPrevMove = () => {\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === null) {\n        onRewindToMove(movesHistory.length - 2);\n      } else {\n        onRewindToMove(rewindToMoveIndex - 1);\n      }\n    }\n  };\n\n  // @todo. use useCallback hook\n  const handleRewindToNextMove = () => {\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === movesHistory.length - 2) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove((rewindToMoveIndex as number) + 1);\n      }\n    }\n  };\n\n  return (\n    <>\n      <GameMeta game={game} />\n      <GameControlPanel\n        game={game}\n        orientation={orientation as AppPieceColor}\n        rewindToMoveIndex={rewindToMoveIndex}\n        canAbortGame={canAbortGame}\n        canResignGame={canResignGame}\n        canOfferDraw={canOfferDraw}\n        drawOfferSentByCurrentUser={drawOfferSentByCurrentUser}\n        drawOfferSentByOpponent={drawOfferSentByOpponent}\n        onAcceptDrawOffer={onAcceptDrawOffer}\n        onDeclineDrawOffer={onDeclineDrawOffer}\n        onFlipBoard={onFlipBoard}\n        onAbortGame={onAbortGame}\n        onOfferDraw={onOfferDraw}\n        onResignGame={onResignGame}\n        onRewindToMove={handleRewindToMove}\n        onRewindToFirstMove={handleRewindToFirstMove}\n        onRewindToLastMove={handleRewindToLastMove}\n        onRewindToPrevMove={handleRewindToPrevMove}\n        onRewindToNextMove={handleRewindToNextMove}\n      />\n      <Board\n        allowMarkers\n        check={check}\n        clickable\n        draggable\n        orientation={orientation}\n        position={fen}\n        turnColor={turnColor}\n        lastMoveSquares={lastMoveSquares}\n        movableColor={movableColor}\n        validMoves={validMoves}\n        viewOnly={viewOnly}\n        onMove={onMove}\n      />\n    </>\n  );\n};\n","import React, { FC, useCallback, useEffect } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Move } from \"ii-react-chessboard\";\nimport { SingleGame } from \"./SingleGame\";\nimport { AppDispatch } from \"../../app/store\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport {\n  abortGame,\n  resignGame,\n  defaultSingleGameItemState,\n  fetchGame,\n  flipBoard,\n  rewindToMove,\n  offerDraw,\n  acceptDrawOffer,\n  declineDrawOffer,\n} from \"./singleGameSlice\";\nimport { makeMove } from \"../move/moveSlice\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\n\nexport interface SingleGameContainerProps {\n  id: number;\n}\n\nexport const SingleGameContainer: FC<SingleGameContainerProps> = ({ id }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  const currentUser: User | undefined = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return undefined;\n  });\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  useEffect(() => {\n    dispatch(fetchGame(id));\n  }, [dispatch, id]);\n\n  const handleAcceptDrawOffer = useCallback(() => {\n    dispatch(acceptDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleDeclineDrawOffer = useCallback(() => {\n    dispatch(declineDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleAbortGame = useCallback(() => {\n    dispatch(abortGame(id));\n  }, [dispatch, id]);\n\n  const handleResignGame = useCallback(() => {\n    dispatch(resignGame(id));\n  }, [dispatch, id]);\n\n  const handleOfferDraw = useCallback(() => {\n    dispatch(offerDraw(id));\n  }, [dispatch, id]);\n\n  const handleMove = useCallback(\n    (move: Move) => {\n      dispatch(makeMove(id, `${move.from}${move.to}`));\n    },\n    [dispatch, id]\n  );\n  const handleFlipBoard = useCallback(() => {\n    dispatch(flipBoard(id));\n  }, [dispatch, id]);\n\n  const handleRewindToMove = useCallback(\n    (moveIndex: number | null) => {\n      dispatch(\n        rewindToMove({\n          moveIndex,\n          gameId: id,\n        })\n      );\n    },\n    [dispatch, id]\n  );\n\n  if (game) {\n    return (\n      <SingleGame\n        game={game}\n        currentUser={currentUser}\n        rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n        onAcceptDrawOffer={handleAcceptDrawOffer}\n        onDeclineDrawOffer={handleDeclineDrawOffer}\n        onAbortGame={handleAbortGame}\n        onOfferDraw={handleOfferDraw}\n        onResignGame={handleResignGame}\n        onMove={handleMove}\n        onFlipBoard={handleFlipBoard}\n        onRewindToMove={handleRewindToMove}\n        isFlipped={singleGameItemState.isFlipped}\n      />\n    );\n  }\n  return null;\n};\n","import React, { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { SingleGameContainer } from \"../features/single-game/SingleGameContainer\";\n\ninterface GamePageParams {\n  id: string;\n}\n\nconst GamePage: FC<unknown> = () => {\n  const { id } = useParams<GamePageParams>();\n\n  return <SingleGameContainer id={Number(id)} />;\n};\n\nexport default GamePage;\n","import React, { FC, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport User from \"../../interfaces/User\";\n\nexport interface HeaderProps {\n  currentUser?: User | null;\n  onLogout?(): void;\n  onShowAuthModal?(): void;\n}\n\nexport const Header: FC<HeaderProps> = ({\n  currentUser = null,\n  onLogout,\n  onShowAuthModal,\n}) => {\n  const handleLogout = useCallback(() => {\n    if (onLogout) {\n      onLogout();\n    }\n  }, [onLogout]);\n\n  const handleShowAuthModal = useCallback(() => {\n    if (onShowAuthModal) {\n      onShowAuthModal();\n    }\n  }, [onShowAuthModal]);\n\n  return (\n    <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n      <div className=\"offset-4 col-4 text-center\">\n        <Link className=\"blog-header-logo text-dark\" to=\"/\">\n          Chess PWA\n        </Link>\n      </div>\n      <div className=\"col-4 d-flex justify-content-end align-items-center\">\n        {currentUser ? (\n          <>\n            <div className=\"mr-3\">Hi, {currentUser.fullName}</div>\n            <Button\n              className=\"btn btn-sm btn-danger mr-3\"\n              data-testid=\"logout-btn\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </>\n        ) : (\n          <Button\n            className=\"btn btn-sm btn-success mr-3\"\n            data-testid=\"login-btn\"\n            onClick={handleShowAuthModal}\n          >\n            Login / Register\n          </Button>\n        )}\n\n        <a\n          href=\"https://github.com/ildar-icoosoft/chess-pwa\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/imgs/GitHub-Mark-32px.png`}\n            alt=\"\"\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from \"./Header\";\nimport User from \"../../interfaces/User\";\nimport { RootState } from \"../../app/rootReducer\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { logout } from \"../current-user/currentUserSlice\";\nimport { showAuthModal } from \"../auth-modal/authModalSlice\";\n\nconst HeaderContainer: FC<unknown> = () => {\n  const currentUser: User | null = useSelector((state: RootState) => {\n    if (state.currentUser.userId) {\n      return denormalize(state.currentUser.userId, userSchema, state.entities);\n    }\n    return null;\n  });\n\n  const dispatch = useDispatch();\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  const handleShowAuthModal = useCallback(() => {\n    dispatch(showAuthModal());\n  }, [dispatch]);\n\n  return (\n    <Header\n      currentUser={currentUser}\n      onLogout={handleLogout}\n      onShowAuthModal={handleShowAuthModal}\n    />\n  );\n};\n\nexport default HeaderContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport LoginData from \"../../interfaces/LoginData\";\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n});\n\nexport interface LoginFormProps {\n  onSubmit?(\n    values: LoginData,\n    formikHelpers: FormikHelpers<LoginData>\n  ): void | Promise<any>;\n}\n\nexport const LoginForm: FC<LoginFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={loginSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as LoginData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { FormikHelpers } from \"formik/dist/types\";\n\nconst registrationSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n  confirmPassword: Yup.string()\n    .equals([Yup.ref(\"password\")], \"Please repeat the password\")\n    .required(\"Required\"),\n});\n\nexport interface RegistrationFormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface RegistrationFormProps {\n  onSubmit?(\n    values: RegistrationFormData,\n    formikHelpers: FormikHelpers<RegistrationFormData>\n  ): void | Promise<any>;\n}\n\nexport const RegistrationForm: FC<RegistrationFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        fullName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={registrationSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as RegistrationFormData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n\n          <Form.Group>\n            <Form.Label>Full name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"Enter full name\"\n              onBlur={handleBlur}\n              value={values.fullName}\n              onChange={handleChange}\n              isValid={touched.fullName && !errors.fullName}\n              isInvalid={touched.fullName && !!errors.fullName}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.fullName}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.confirmPassword}\n              isValid={touched.confirmPassword && !errors.confirmPassword}\n              isInvalid={touched.confirmPassword && !!errors.confirmPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.confirmPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikHelpers } from \"formik\";\nimport { LoginForm } from \"./LoginForm\";\nimport { RegistrationForm, RegistrationFormData } from \"./RegistrationForm\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport { login, register } from \"../current-user/currentUserSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nconst LoginTabsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const doLogin = React.useCallback(\n    (values: LoginData, formikHelpers: FormikHelpers<LoginData>) => {\n      return dispatch(login(values)).catch((err) => {\n        if (err.statusCode === 401) {\n          formikHelpers.setStatus(\"Incorrect email or password\");\n        } else {\n          formikHelpers.setStatus(\"Internal server error\");\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  const doSignUp = React.useCallback(\n    (\n      values: RegistrationFormData,\n      formikHelpers: FormikHelpers<RegistrationFormData>\n    ) => {\n      return dispatch(\n        register({\n          fullName: values.fullName,\n          email: values.email,\n          password: values.password,\n        })\n      ).catch((err) => {\n        if (err.statusCode === 409) {\n          formikHelpers.setStatus(\n            \"The provided email address is already in use\"\n          );\n        } else {\n          formikHelpers.setStatus(\"Internal server error\");\n        }\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <Tabs transition={false}>\n      <Tab eventKey=\"home\" title=\"Login\">\n        <LoginForm onSubmit={doLogin} />\n      </Tab>\n      <Tab eventKey=\"profile\" title=\"Register\">\n        <RegistrationForm onSubmit={doSignUp} />\n      </Tab>\n    </Tabs>\n  );\n};\n\nexport default LoginTabsContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport LoginTabsContainer from \"./LoginTabsContainer\";\n\nexport interface AuthModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const AuthModal: FC<AuthModalProps> = ({ show = false, onHide }) => {\n  return (\n    <div>\n      <Modal show={show} onHide={onHide} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoginTabsContainer />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthModal } from \"./AuthModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideAuthModal } from \"./authModalSlice\";\n\nconst AuthModalContainer: FC<unknown> = () => {\n  const { isAuthModalVisible } = useSelector(\n    (state: RootState) => state.authModal\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideAuthModal());\n  }, [dispatch]);\n\n  return <AuthModal show={isAuthModalVisible} onHide={handleHide} />;\n};\n\nexport default AuthModalContainer;\n","import React, { FC, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport HomePage from \"../features/home-page/HomePage\";\nimport GamePage from \"../pages/GamePage\";\nimport { fetchCurrentUser } from \"../features/current-user/currentUserSlice\";\nimport { watchGames } from \"../features/data-subscription/dataSubscriptionSlice\";\nimport { startGameClock } from \"../features/game-clock/gameClockSlice\";\nimport HeaderContainer from \"../features/header/HeaderContainer\";\nimport AuthModalContainer from \"../features/auth-modal/AuthModalContainer\";\nimport { fetchGames } from \"../features/games-list/gamesListSlice\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n    dispatch(watchGames());\n    dispatch(startGameClock());\n    dispatch(fetchGames());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <HeaderContainer />\n        <AuthModalContainer />\n\n        <Switch>\n          <Route path=\"/game/:id\">\n            <GamePage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  getCurrentUserSuccess,\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\nimport { getGamesListSuccess } from \"../games-list/gamesListSlice\";\nimport {\n  getSingleGameSuccess,\n  abortGameSuccess,\n  resignGameSuccess,\n  offerDrawSuccess,\n  acceptDrawOfferSuccess,\n  declineDrawOfferSuccess,\n} from \"../single-game/singleGameSlice\";\nimport { challengeAiSuccess } from \"../challenge/challengeSlice\";\nimport { oneSecondPassed } from \"../game-clock/gameClockSlice\";\nimport {\n  updateGameBySubscription,\n  createGameBySubscription,\n} from \"../data-subscription/dataSubscriptionSlice\";\nimport {\n  makeMoveRequest,\n  makeMoveSuccess,\n  MoveRequestPayload,\n} from \"../move/moveSlice\";\nimport NormalizedUserEntity from \"../../normalizr/interfaces/NormalizedUserEntity\";\nimport NormalizedGameEntity from \"../../normalizr/interfaces/NormalizedGameEntity\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\n\nexport interface EntitiesState {\n  users: Record<string, NormalizedUserEntity>;\n  games: Record<string, NormalizedGameEntity>;\n}\n\nconst initialState: EntitiesState = {\n  users: {},\n  games: {},\n};\n\nconst getNormalizedDataReducer = (\n  state: EntitiesState,\n  action: PayloadAction<{\n    entities: Partial<EntitiesState>;\n  }>\n) => {\n  Object.assign(state.users, action.payload.entities.users);\n  Object.assign(state.games, action.payload.entities.games);\n};\n\nconst entitiesSlice = createSlice({\n  name: \"entities\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getCurrentUserSuccess.type]: (\n      state: EntitiesState,\n      action: PayloadAction<null | {\n        entities: Partial<EntitiesState>;\n      }>\n    ) => {\n      if (action.payload) {\n        getNormalizedDataReducer(state, {\n          type: action.type,\n          payload: action.payload,\n        });\n      }\n    },\n    [loginSuccess.type]: getNormalizedDataReducer,\n    [registerSuccess.type]: getNormalizedDataReducer,\n    [getGamesListSuccess.type]: getNormalizedDataReducer,\n    [getSingleGameSuccess.type]: getNormalizedDataReducer,\n    [abortGameSuccess.type]: getNormalizedDataReducer,\n    [resignGameSuccess.type]: getNormalizedDataReducer,\n    [offerDrawSuccess.type]: getNormalizedDataReducer,\n    [acceptDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [declineDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [challengeAiSuccess.type]: getNormalizedDataReducer,\n    [updateGameBySubscription.type]: getNormalizedDataReducer,\n    [createGameBySubscription.type]: getNormalizedDataReducer,\n    [makeMoveRequest.type]: (\n      state: EntitiesState,\n      action: PayloadAction<MoveRequestPayload>\n    ) => {\n      state.games[action.payload.gameId].turn =\n        state.games[action.payload.gameId].turn === \"white\" ? \"black\" : \"white\";\n      state.games[action.payload.gameId].moves = `${\n        state.games[action.payload.gameId].moves\n      } ${action.payload.move}`.trim();\n    },\n    [makeMoveSuccess.type]: getNormalizedDataReducer,\n    [oneSecondPassed.type]: (state: EntitiesState) => {\n      const gameIds = Object.keys(state.games);\n\n      gameIds.forEach((gameId) => {\n        const game = state.games[gameId];\n\n        if (game.status === \"started\") {\n          const chess = makeChessInstance(game);\n\n          if (chess.history().length > 1) {\n            const timePropName = game.turn === \"white\" ? \"wtime\" : \"btime\";\n\n            game[timePropName] -= 1000;\n            if (game[timePropName] < 0) {\n              game[timePropName] = 0;\n            }\n\n            if (game[timePropName] === 0) {\n              game.status = \"outoftime\";\n              game.winner = game.turn === \"white\" ? \"black\" : \"white\";\n            }\n          }\n        }\n      });\n    },\n  },\n});\n\nexport default entitiesSlice.reducer;\n","/* eslint-disable import/no-cycle */\n\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport gamesListReducer from \"../features/games-list/gamesListSlice\";\nimport currentUserReducer from \"../features/current-user/currentUserSlice\";\nimport authModalReducer from \"../features/auth-modal/authModalSlice\";\nimport challengeAiModalReducer from \"../features/challenge-ai-modal/challengeAiModalSlice\";\nimport entitiesReducer from \"../features/entities/entitiesSlice\";\nimport singleGameReducer from \"../features/single-game/singleGameSlice\";\n// import dataSubscriptionReducer from \"../redux/slices/dataSubscriptionSlice\";\n\nconst rootReducer = combineReducers({\n  authModal: authModalReducer,\n  challengeAiModal: challengeAiModalReducer,\n  // challenge: challengeReducer,\n  currentUser: currentUserReducer,\n  gamesList: gamesListReducer,\n  entities: entitiesReducer,\n  // dataSubscription: dataSubscriptionReducer,\n  singleGame: singleGameReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-cycle */\n\nimport { Action, configureStore } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk<R> = ThunkAction<R, RootState, unknown, Action<string>>;\n\nexport default store;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./app/store\";\n\nconst render = () => {\n  const App = require(\"./app/App\").default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./app/App\", render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Chess, ChessInstance } from \"chess.js\";\nimport Game from \"../interfaces/Game\";\n\nconst startPositionFen =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nexport default (\n  game: Pick<Game, \"initialFen\" | \"moves\">,\n  rewindToMoveIndex: number | null = null\n): ChessInstance => {\n  let { initialFen } = game;\n  if (initialFen === \"startpos\") {\n    initialFen = startPositionFen;\n  }\n\n  const chess = new Chess(initialFen);\n\n  if (game.moves) {\n    game.moves.split(\" \").forEach((move, index) => {\n      if (rewindToMoveIndex !== null && index > rewindToMoveIndex) {\n        return;\n      }\n\n      const result = chess.move(move, {\n        sloppy: true,\n      });\n\n      if (!result) {\n        throw Error(`incorrect move: ${move}`);\n      }\n    });\n  }\n\n  return chess;\n};\n","import { schema } from \"normalizr\";\n\nconst userSchema = new schema.Entity(\"users\");\n\nexport default userSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"levelButtonGroup\":\"ChallengeAiForm_levelButtonGroup__1lnm_\",\"colorSubmits\":\"ChallengeAiForm_colorSubmits__1pM28\",\"colorSubmitsButton\":\"ChallengeAiForm_colorSubmitsButton__2P6Lx\",\"whiteButton\":\"ChallengeAiForm_whiteButton__2nTjs\",\"blackButton\":\"ChallengeAiForm_blackButton__1LVeL\",\"randomButton\":\"ChallengeAiForm_randomButton__1S07l\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface GamesListState {\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: GamesListState = {\n  isLoading: true,\n  error: null,\n};\n\nconst gamesListSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    getGamesListRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getGamesListSuccess(\n      state,\n      _action: PayloadAction<NormalizedData<number[]>>\n    ) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getGamesListError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getGamesListRequest,\n  getGamesListSuccess,\n  getGamesListError,\n} = gamesListSlice.actions;\n\nexport default gamesListSlice.reducer;\n\nexport const fetchGames = (): AppThunk<Promise<Game[]>> => (dispatch) => {\n  dispatch(getGamesListRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/game\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGames = normalize(body as Game[], [gameSchema]);\n        dispatch(getGamesListSuccess(normalizedGames));\n\n        resolve(body as Game[]);\n      } else {\n        dispatch(getGamesListError(body as string));\n        reject(jwr);\n      }\n    });\n  });\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\n\ninterface AuthModalState {\n  isAuthModalVisible: boolean;\n}\n\nconst initialState: AuthModalState = {\n  isAuthModalVisible: false,\n};\n\nconst authModalSlice = createSlice({\n  name: \"authModal\",\n  initialState,\n  reducers: {\n    showAuthModal(state) {\n      state.isAuthModalVisible = true;\n    },\n    hideAuthModal(state) {\n      state.isAuthModalVisible = false;\n    },\n  },\n  extraReducers: {\n    [loginSuccess.type]: (state) => {\n      state.isAuthModalVisible = false;\n    },\n    [registerSuccess.type]: (state) => {\n      state.isAuthModalVisible = false;\n    },\n  },\n});\n\nexport const { showAuthModal, hideAuthModal } = authModalSlice.actions;\n\nexport default authModalSlice.reducer;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { challengeAiSuccess } from \"../challenge/challengeSlice\";\n\ninterface ChallengeAiModalState {\n  isChallengeAiModalVisible: boolean;\n}\n\nconst initialState: ChallengeAiModalState = {\n  isChallengeAiModalVisible: false,\n};\n\nconst challengeAiModalSlice = createSlice({\n  name: \"challengeAiModal\",\n  initialState,\n  reducers: {\n    showChallengeAiModal(state) {\n      state.isChallengeAiModalVisible = true;\n    },\n    hideChallengeAiModal(state) {\n      state.isChallengeAiModalVisible = false;\n    },\n  },\n  extraReducers: {\n    [challengeAiSuccess.type]: (state) => {\n      state.isChallengeAiModalVisible = false;\n    },\n  },\n});\n\nexport const {\n  showChallengeAiModal,\n  hideChallengeAiModal,\n} = challengeAiModalSlice.actions;\n\nexport default challengeAiModalSlice.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface ChallengeState {}\n\nconst initialState: ChallengeState = {};\n\nconst challengeSlice = createSlice({\n  name: \"challenge\",\n  initialState,\n  reducers: {\n    challengeAiRequest() {},\n    challengeAiSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    challengeAiError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  challengeAiRequest,\n  challengeAiSuccess,\n  challengeAiError,\n} = challengeSlice.actions;\n\nexport default challengeSlice.reducer;\n\nexport const challengeAi = (data: ChallengeAiData): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(challengeAiRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/challenge/ai`,\n      data,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(challengeAiSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(challengeAiError(body as string));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport { SubscriptionData } from \"../../interfaces/SubscriptionData\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface DataSubscriptionState {}\n\nconst initialState: DataSubscriptionState = {};\n\nconst dataSubscriptionSlice = createSlice({\n  name: \"dataSubscription\",\n  initialState,\n  reducers: {\n    updateGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  updateGameBySubscription,\n  createGameBySubscription,\n} = dataSubscriptionSlice.actions;\n\nexport default dataSubscriptionSlice.reducer;\n\nexport const watchGames = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"game\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"updated\") {\n      const game = {\n        ...subscriptionData.previous,\n        ...subscriptionData.data,\n      };\n\n      const normalizedGame = normalize(game, gameSchema);\n\n      dispatch(updateGameBySubscription(normalizedGame));\n    } else if (subscriptionData.verb === \"created\") {\n      const normalizedGame = normalize(subscriptionData.data, gameSchema);\n\n      dispatch(createGameBySubscription(normalizedGame));\n    }\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\n\ninterface MoveState {}\n\nconst initialState: MoveState = {};\n\nconst moveSlice = createSlice({\n  name: \"move\",\n  initialState,\n  reducers: {\n    makeMoveRequest(_state, _action: PayloadAction<MoveRequestPayload>) {},\n    makeMoveSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    makeMoveError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  makeMoveRequest,\n  makeMoveSuccess,\n  makeMoveError,\n} = moveSlice.actions;\n\nexport default moveSlice.reducer;\n\nexport interface MoveRequestPayload {\n  gameId: number;\n  move: string;\n}\n\nexport const makeMove = (\n  gameId: number,\n  move: string\n): AppThunk<Promise<Game>> => (dispatch) => {\n  dispatch(\n    makeMoveRequest({\n      gameId,\n      move,\n    })\n  );\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${gameId}/move/${move}`,\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(makeMoveSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(makeMoveError(body as string));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n"],"sourceRoot":""}