{"version":3,"sources":["services/ioClient.ts","features/games-list/GamePreviewsListItem.module.scss","features/seeks-list/SeeksListItem.module.scss","utils/getErrorMessageFromJWR.ts","features/single-game/GameControlPanelUserName.module.scss","features/single-game/DrawOfferDialog.module.scss","features/chat/ChatMessagesListItem.module.scss","features/game-clock/gameClockSlice.ts","features/messages/messagesSlice.tsx","normalizr/schemas/gameSchema.ts","features/users-list/UsersListItem.module.scss","features/single-game/GameClock.module.scss","features/single-game/GameControlPanelStatus.module.scss","features/single-game/singleGameSlice.ts","features/games-list/GamePreviewClock.module.scss","normalizr/schemas/userSchema.ts","features/single-game/GameMeta.module.scss","features/single-game/GameControlPanel.module.scss","features/data-subscription/dataSubscriptionSlice.ts","features/games-list/GamePreviewsList.module.scss","features/games-list/GamePreviewResult.module.scss","features/single-game/GameControlPanelTopToolbar.module.scss","features/single-game/GameControlPanelBottomToolbar.module.scss","features/single-game/SingleGameBoard.module.scss","features/chat/ChatMessagesList.module.scss","features/chat/PostChatMessageForm.module.scss","features/messages/Messages.module.scss","features/current-user/currentUserSlice.ts","features/challenge/challengeSlice.ts","features/games-list/GamePreviewUserName.tsx","features/games-list/GamePreviewResult.tsx","features/games-list/GamePreviewClock.tsx","features/games-list/GamePreviewsListItem.tsx","components/ContentLoadingStatus.tsx","features/games-list/GamePreviewsList.tsx","features/games-list/OngoingGamesContainer.tsx","features/home-page/ChallengeButtons.tsx","features/home-page/ChallengeButtonsContainer.tsx","features/challenge-ai-modal/ChallengeAiForm.tsx","features/challenge-ai-modal/ChallengeAiFormContainer.tsx","features/challenge-ai-modal/ChallengeAiModal.tsx","features/challenge-ai-modal/ChallengeAiModalContainer.tsx","features/games-list/CompletedGamesContainer.tsx","features/seek-modal/CreateSeekForm.tsx","features/seek-modal/CreateSeekFormContainer.tsx","features/seek-modal/SeekModal.tsx","features/seek-modal/SeekModalContainer.tsx","assets/icons/white.svg","assets/icons/black.svg","assets/icons/random.svg","features/seeks-list/SeeksListItem.tsx","features/seeks-list/SeeksList.tsx","features/seeks-list/SeeksListContainer.tsx","assets/icons/online.svg","assets/icons/offline.svg","features/users-list/UsersListItem.tsx","features/users-list/UsersList.tsx","features/users-list/UsersListContainer.tsx","features/home-page/HomePage.tsx","utils/getGameStatusText.ts","features/single-game/GameMeta.tsx","features/single-game/GameMetaContainer.tsx","features/single-game/GameClock.tsx","features/single-game/GameControlPanelStatus.tsx","features/single-game/GameMoves.tsx","features/single-game/GameControlPanelUserName.tsx","features/single-game/GameControlPanelTopToolbar.tsx","features/single-game/GameControlPanelBottomToolbar.tsx","features/single-game/DrawOfferDialog.tsx","features/single-game/GameControlPanel.tsx","features/single-game/GameControlPanelWrapper.tsx","features/single-game/GameControlPanelContainer.tsx","features/single-game/PromotionChoiceModal.tsx","features/single-game/SingleGameBoard.tsx","utils/sounds.ts","features/single-game/SingleGameBoardContainer.tsx","features/chat/ChatMessagesListItem.tsx","features/chat/ChatMessagesList.tsx","features/chat/ChatMessagesListContainer.tsx","features/chat/PostChatMessageForm.tsx","features/chat/PostChatMessageFormContainer.tsx","features/chat/Chat.tsx","features/single-game/GamePage.tsx","features/header/Header.tsx","features/header/HeaderContainer.tsx","features/auth-modal/LoginForm.tsx","features/auth-modal/RegistrationForm.tsx","features/auth-modal/LoginTabsContainer.tsx","features/auth-modal/AuthModal.tsx","features/auth-modal/AuthModalContainer.tsx","features/messages/Messages.tsx","features/messages/MessagesContainer.tsx","app/App.tsx","serviceWorker.ts","features/entities/entitiesSlice.ts","features/accept-seek-request/acceptSeekRequestSlice.tsx","app/rootReducer.ts","app/store.ts","index.tsx","features/chat/chatSlice.ts","utils/chess.ts","features/modal/modalSlice.ts","features/single-game/PromotionChoiceModal.module.scss","utils/makeChessInstance.ts","features/seek-modal/CreateSeekForm.module.scss","normalizr/schemas/seekSchema.ts","features/challenge-ai-modal/ChallengeAiForm.module.scss","normalizr/schemas/chatMessageSchema.ts","features/move/moveSlice.ts","features/single-game/GameMoves.module.scss","features/games-list/gamesListSlice.ts","features/seeks-list/seeksListSlice.ts","features/users-list/usersListSlice.ts"],"names":["ioClient","sailsIOClient","socketIOClient","sails","url","process","module","exports","jwr","defaultErrorMessage","headers","_isString","body","gameClockSlice","createSlice","name","initialState","reducers","oneSecondPassed","extraReducers","actions","startGameClock","dispatch","intervalId","setInterval","clearInterval","messagesSlice","showMessage","state","action","push","payload","hideMessage","_pullAllBy","id","acceptSeekError","type","error","makeMoveError","getCurrentUserError","logoutError","abortGameError","createChatMessageError","resignGameError","offerDrawError","acceptDrawOfferError","declineDrawOfferError","gameSchema","schema","Entity","white","userSchema","black","defaultSingleGameItemState","isLoading","isFlipped","rewindToMoveIndex","singleGameSlice","getSingleGameRequest","Object","assign","getSingleGameSuccess","result","getSingleGameError","itemId","abortGameRequest","_state","_action","abortGameSuccess","resignGameRequest","resignGameSuccess","offerDrawRequest","offerDrawSuccess","acceptDrawOfferRequest","acceptDrawOfferSuccess","declineDrawOfferRequest","declineDrawOfferSuccess","flipBoard","rewindToMove","gameId","moveIndex","fetchGame","Promise","resolve","reject","socket","get","statusCode","normalizedGame","normalize","getErrorMessageFromJWR","abortGame","post","resignGame","offerDraw","acceptDrawOffer","declineDrawOffer","dataSubscriptionSlice","updateGameBySubscription","createGameBySubscription","updateSeekBySubscription","createSeekBySubscription","removeSeekBySubscription","createUserBySubscription","updateUserBySubscription","createChatMessageBySubscription","watchGames","on","subscriptionData","verb","game","previous","data","watchSeeks","seek","normalizedSeek","seekSchema","watchUsers","watchChatMessages","normalizedChatMessage","chatMessageSchema","currentUserSlice","userId","getCurrentUserRequest","getCurrentUserSuccess","loginRequest","loginSuccess","loginError","registerRequest","registerSuccess","registerError","logoutRequest","logoutSuccess","fetchCurrentUser","normalizedUser","login","put","emailAddress","email","password","register","fullName","confirmPassword","agreed","logout","challengeSlice","challengeAiRequest","challengeAiSuccess","challengeAiError","createSeekRequest","createSeekSuccess","createSeekError","acceptSeekRequest","_seekId","acceptSeekSuccess","challengeAi","createSeek","acceptSeek","seekId","GamePreviewUserName","memo","color","aiLevel","a","b","_isEqualWith","_value","_other","indexOrKey","GamePreviewResult","winner","className","css","GamePreviewClock","time","isRunning","formattedTime","moment","startOf","milliseconds","format","data-testid","cx","clock","clockRun","GamePreviewsListItem","fen","makeChessInstance","gamePreview","player","status","btime","turn","board","to","position","viewOnly","width","wtime","_isEqual","ContentLoadingStatus","emptyContentMessage","isEmpty","showEmptyContentMessage","role","Spinner","animation","GamePreviewsList","games","length","grid","map","item","key","OngoingGamesContainer","useSelector","denormalize","keys","entities","filter","sort","createdAt","slice","gamesList","ChallengeButtons","onChallengeAi","onCreateGame","handleChallengeAi","useCallback","handleCreateGame","Button","variant","onClick","ChallengeButtonsContainer","useDispatch","showModal","allowClose","ChallengeAiForm","onSubmit","initialValues","level","clockLimit","clockIncrement","values","formikHelpers","handleChange","handleBlur","handleSubmit","isSubmitting","setStatus","setFieldValue","Form","noValidate","e","onChange","Alert","Group","Label","Control","onBlur","value","min","max","step","Row","ButtonGroup","levelButtonGroup","colorSubmits","disabled","title","colorSubmitsButton","blackButton","randomButton","whiteButton","ChallengeAiFormContainer","history","useHistory","challengeAiAndOpenGamePage","then","catch","err","ChallengeAiModal","show","onHide","Modal","Header","closeButton","Title","Body","ChallengeAiModalContainer","isModalVisible","modal","handleHide","hideModal","CompletedGamesContainer","JSON","stringify","CreateSeekForm","onAbort","handleAbort","spinnerWrapper","spinner","spinnerButton","CreateSeekFormContainer","disconnect","reconnect","SeekModal","backdrop","SeekModalContainer","_extends","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref","svgRef","props","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","SeeksListItem","acceptInProcess","currentUserId","onPlay","handlePlay","gameIsStarted","colorIcon","createdBy","size","SeeksList","seeks","SeeksListContainer","currentUser","seeksList","items","inProcess","cy","r","stroke","strokeWidth","fill","height","UsersListItem","user","isOnline","connectedIcon","UsersList","users","UsersListContainer","useDeepEqualSelector","usersList","HomePage","Card","GameMeta","getGameStatusText","GameMetaContainer","GameClock","clockEmerg","GameControlPanelStatus","container","formatMove","move","from","GameMoves","onRewindToMove","scrollElementRef","useRef","lastMovesQnt","lastGameStatus","useEffect","movesQnt","getMovesQnt","current","scrollTop","scrollHeight","movesHistory","verbose","movesPairs","_chunk","makeRewindToMoveHandler","movesWrapper","pair","index","whiteMoveIndex","blackMoveIndex","Fragment","moveNumber","selected","GameControlPanelUserName","userNameWrapper","userName","GameControlPanelTopToolbar","isFirstMove","isLastMove","hasPrevMove","hasNextMove","onFlipBoard","onRewindToPrevMove","onRewindToNextMove","onRewindToFirstMove","onRewindToLastMove","handleFlipBoard","handleRewindToPrevMove","handleRewindToNextMove","handleRewindToFirstMove","handleRewindToLastMove","buttonsWrapper","icon","faRetweet","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","GameControlPanelBottomToolbar","canAbortGame","canOfferDraw","canResignGame","onAbortGame","onOfferDraw","onResignGame","handleAbortGame","handleOfferDraw","handleResignGame","faTimes","faHandshake","faFlag","DrawOfferDialog","onAccept","onDecline","handleAccept","handleDecline","dialogWrapper","acceptBtn","faCheck","declineBtn","dialogText","GameControlPanel","orientation","drawOfferSentByCurrentUser","drawOfferSentByOpponent","onAcceptDrawOffer","onDeclineDrawOffer","controlPanel","controlPanelInner","GameControlPanelWrapper","gameMoves","moves","handleRewindToMove","playerPiecesColor","drawOffer","GameControlPanelContainer","singleGameItemState","singleGame","useShallowEqualSelector","handleAcceptDrawOffer","handleDeclineDrawOffer","PromotionChoiceModal","turnColor","onPromotion","makePromotionHandler","promotionPiece","textAlign","cursor","classNames","piece","wQ","bQ","wR","bR","wB","bB","wN","bN","SingleGameBoard","onMove","premove","lastStatus","Audio","play","lastSelectedMoveIndex","selectedMoveIndex","chess","isValidMove","handleSetPremove","playPremove","cancelPremove","handleUnsetPremove","useState","showPromotionChoice","setShowPromotionChoice","promotionMove","handleMove","isPromotionMove","handlePromotion","promotion","boardContent","movableColor","chessWithAllMoves","check","in_check","validMoves","getValidMoves","lastMoveSquares","lastMove","singleGameBoard","allowMarkers","clickable","draggable","onSetPremove","onUnsetPremove","premovable","SingleGameBoardContainer","makeMove","ChatMessagesListItem","message","messageWrapper","currentUserMessage","messageText","text","ChatMessagesList","messages","chatMessages","ChatMessagesListContainer","chat","defaultGameChatMessagesState","PostChatMessageForm","textInput","autoComplete","placeholder","faPaperPlane","PostChatMessageFormContainer","resetForm","createChatMessage","Chat","Footer","GamePage","useParams","idAsNumber","Number","fetchChatMessages","onLogout","onShowAuthModal","handleLogout","handleShowAuthModal","href","rel","src","alt","HeaderContainer","loginSchema","Yup","shape","required","LoginForm","validationSchema","errors","touched","isValid","isInvalid","Feedback","registrationSchema","equals","RegistrationForm","LoginTabsContainer","doLogin","React","doSignUp","Tabs","transition","Tab","eventKey","AuthModal","AuthModalContainer","Messages","onHideMessage","makeHideMessageHandler","messageId","Toast","onClose","delay","autohide","MessagesContainer","handleHideMessage","App","stopGameClock","fetchGames","fetchUsers","fetchSeeks","path","Boolean","window","location","hostname","match","getNormalizedDataReducer","entitiesSlice","getGamesListSuccess","getSeeksListSuccess","createChatMessageSuccess","getChatMessagesListSuccess","normalizedChatMessages","getUsersListSuccess","makeMoveRequest","trim","makeMoveSuccess","forEach","timePropName","acceptSeekRequestSlice","rootReducer","combineReducers","chatReducer","currentUserReducer","gamesListReducer","entitiesReducer","singleGameReducer","seeksListReducer","usersListReducer","acceptSeekRequestReducer","messagesReducer","modalReducer","store","configureStore","reducer","require","default","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","chatSlice","getChatMessagesListRequest","getChatMessagesListError","createChatMessageRequest","chatMessageId","flags","split","modalSlice","startPositionFen","initialFen","Chess","sloppy","Error","moveSlice","gamesListSlice","getGamesListRequest","getGamesListError","limit","normalizedGames","seeksListSlice","getSeeksListRequest","getSeeksListError","includes","unshift","_pull","usersListSlice","getUsersListRequest","getUsersListError","normalizedUsers"],"mappings":"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","file":"static/js/main.fa0dd670.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\nimport sailsIOClient from \"sails.io.js\";\n\nconst ioClient = sailsIOClient(socketIOClient);\n\nioClient.sails.url = process.env.REACT_APP_BACKEND_HOST;\n\nexport default ioClient;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePreview\":\"GamePreviewsListItem_gamePreview__wYvMw\",\"player\":\"GamePreviewsListItem_player__1GbNi\",\"board\":\"GamePreviewsListItem_board__2y4Yc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameIsStarted\":\"SeeksListItem_gameIsStarted__3-Jpp\",\"colorIcon\":\"SeeksListItem_colorIcon__12bXP\"};","import { JWR } from \"sails.io.js\";\nimport { isString as _isString } from \"lodash\";\n\nexport default (\n  jwr: Pick<JWR, \"body\" | \"headers\">,\n  defaultErrorMessage = \"Internal server error\"\n): string => {\n  if (jwr.headers[\"X-Exit-Description\"]) {\n    return jwr.headers[\"X-Exit-Description\"];\n  }\n  if (_isString(jwr.body)) {\n    return jwr.body;\n  }\n\n  return defaultErrorMessage;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userNameWrapper\":\"GameControlPanelUserName_userNameWrapper__3TpIe\",\"connectedIcon\":\"GameControlPanelUserName_connectedIcon__1Wqhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWrapper\":\"DrawOfferDialog_dialogWrapper__38JK5\",\"acceptBtn\":\"DrawOfferDialog_acceptBtn__1kykG\",\"declineBtn\":\"DrawOfferDialog_declineBtn__3Umym\",\"dialogText\":\"DrawOfferDialog_dialogText__1yBxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentUserMessage\":\"ChatMessagesListItem_currentUserMessage__1a4Jr\",\"userName\":\"ChatMessagesListItem_userName__21pOB\",\"messageWrapper\":\"ChatMessagesListItem_messageWrapper__1Yveh\"};","/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"../../app/store\";\n\ninterface GameClockState {}\n\nconst initialState: GameClockState = {};\n\nconst gameClockSlice = createSlice({\n  name: \"gameClock\",\n  initialState,\n  reducers: {\n    oneSecondPassed() {},\n  },\n  extraReducers: {},\n});\n\nexport const { oneSecondPassed } = gameClockSlice.actions;\n\nexport default gameClockSlice.reducer;\n\nexport const startGameClock = (): AppThunk<() => void> => (dispatch) => {\n  const intervalId = setInterval(() => {\n    dispatch(oneSecondPassed());\n  }, 1000);\n\n  return () => {\n    clearInterval(intervalId);\n  };\n};\n","/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { pullAllBy as _pullAllBy } from \"lodash\";\nimport { acceptSeekError } from \"../challenge/challengeSlice\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport { Message } from \"../../interfaces/Message\";\nimport { makeMoveError } from \"../move/moveSlice\";\nimport {\n  getCurrentUserError,\n  logoutError,\n} from \"../current-user/currentUserSlice\";\nimport {\n  abortGameError,\n  acceptDrawOfferError,\n  declineDrawOfferError,\n  offerDrawError,\n  resignGameError,\n} from \"../single-game/singleGameSlice\";\nimport { createChatMessageError } from \"../chat/chatSlice\";\n\nconst initialState: Message[] = [];\n\nconst messagesSlice = createSlice({\n  name: \"messages\",\n  initialState,\n  reducers: {\n    showMessage: (state, action: PayloadAction<Message>) => {\n      state.push(action.payload);\n    },\n    hideMessage: (state, action: PayloadAction<string>) => {\n      _pullAllBy(state, [{ id: action.payload }], \"id\");\n    },\n  },\n  extraReducers: {\n    [acceptSeekError.type]: (\n      state,\n      action: PayloadAction<ItemErrorPayload>\n    ) => {\n      state.push({\n        id: \"acceptSeekError\",\n        body: action.payload.error,\n      });\n    },\n    [makeMoveError.type]: (state, action: PayloadAction<string>) => {\n      state.push({\n        id: \"makeMoveError\",\n        body: action.payload,\n      });\n    },\n    [getCurrentUserError.type]: (state, action: PayloadAction<string>) => {\n      state.push({\n        id: \"getCurrentUserError\",\n        body: action.payload,\n      });\n    },\n    [logoutError.type]: (state, action: PayloadAction<string>) => {\n      state.push({\n        id: \"logoutError\",\n        body: action.payload,\n      });\n    },\n    [abortGameError.type]: (state, action: PayloadAction<ItemErrorPayload>) => {\n      state.push({\n        id: \"abortGameError\",\n        body: action.payload.error,\n      });\n    },\n    [createChatMessageError.type]: (\n      state,\n      action: PayloadAction<ItemErrorPayload>\n    ) => {\n      state.push({\n        id: \"createChatMessageError\",\n        body: action.payload.error,\n      });\n    },\n    [resignGameError.type]: (\n      state,\n      action: PayloadAction<ItemErrorPayload>\n    ) => {\n      state.push({\n        id: \"resignGameError\",\n        body: action.payload.error,\n      });\n    },\n    [offerDrawError.type]: (state, action: PayloadAction<ItemErrorPayload>) => {\n      state.push({\n        id: \"offerDrawError\",\n        body: action.payload.error,\n      });\n    },\n    [acceptDrawOfferError.type]: (\n      state,\n      action: PayloadAction<ItemErrorPayload>\n    ) => {\n      state.push({\n        id: \"acceptDrawOfferError\",\n        body: action.payload.error,\n      });\n    },\n    [declineDrawOfferError.type]: (\n      state,\n      action: PayloadAction<ItemErrorPayload>\n    ) => {\n      state.push({\n        id: \"declineDrawOfferError\",\n        body: action.payload.error,\n      });\n    },\n  },\n});\n\nexport const { showMessage, hideMessage } = messagesSlice.actions;\n\nexport default messagesSlice.reducer;\n","import { schema } from \"normalizr\";\nimport userSchema from \"./userSchema\";\n\nconst gameSchema = new schema.Entity(\"games\", {\n  white: userSchema,\n  black: userSchema,\n});\n\nexport default gameSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentUser\":\"UsersListItem_currentUser__3Oixp\",\"connectedIcon\":\"UsersListItem_connectedIcon__2GK65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clock\":\"GameClock_clock__1XkXv\",\"clockRun\":\"GameClock_clockRun__2zomt\",\"clockEmerg\":\"GameClock_clockEmerg__1sFO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GameControlPanelStatus_container__119WU\",\"status\":\"GameControlPanelStatus_status__1IARo\",\"result\":\"GameControlPanelStatus_result__3Qu_O\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable prefer-object-spread */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\nexport interface RewindToMovePayload {\n  gameId: number;\n  moveIndex: number | null;\n}\n\ninterface SingleGameItemState {\n  isLoading: boolean;\n  error: string | null;\n  isFlipped: boolean;\n  rewindToMoveIndex: number | null;\n}\n\ninterface SingleGameState {\n  [gameId: string]: SingleGameItemState;\n}\n\nexport const defaultSingleGameItemState: SingleGameItemState = {\n  isLoading: true,\n  error: null,\n  isFlipped: false,\n  rewindToMoveIndex: null,\n};\n\nconst initialState: SingleGameState = {};\n\nconst singleGameSlice = createSlice({\n  name: \"singleGame\",\n  initialState,\n  reducers: {\n    getSingleGameRequest(state, action: PayloadAction<number>) {\n      state[action.payload] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload],\n        {\n          isLoading: true,\n          error: null,\n        }\n      );\n    },\n    getSingleGameSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state[action.payload.result] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.result],\n        {\n          isLoading: false,\n          error: null,\n        }\n      );\n    },\n    getSingleGameError(state, action: PayloadAction<ItemErrorPayload>) {\n      state[action.payload.itemId] = Object.assign(\n        {},\n        defaultSingleGameItemState,\n        state[action.payload.itemId],\n        {\n          isLoading: false,\n          error: action.payload.error,\n        }\n      );\n    },\n    abortGameRequest(_state, _action: PayloadAction<number>) {},\n    abortGameSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    abortGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n    resignGameRequest(_state, _action: PayloadAction<number>) {},\n    resignGameSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    resignGameError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    offerDrawRequest(_state, _action: PayloadAction<number>) {},\n    offerDrawSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    offerDrawError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    acceptDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    acceptDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    acceptDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    declineDrawOfferRequest(_state, _action: PayloadAction<number>) {},\n    declineDrawOfferSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    declineDrawOfferError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n\n    flipBoard(state, action: PayloadAction<number>) {\n      state[action.payload].isFlipped = !state[action.payload].isFlipped;\n    },\n    rewindToMove(state, action: PayloadAction<RewindToMovePayload>) {\n      state[action.payload.gameId].rewindToMoveIndex = action.payload.moveIndex;\n    },\n  },\n  extraReducers: {},\n});\n\nexport const {\n  getSingleGameRequest,\n  getSingleGameSuccess,\n  getSingleGameError,\n  flipBoard,\n  rewindToMove,\n  abortGameRequest,\n  abortGameSuccess,\n  abortGameError,\n  resignGameRequest,\n  resignGameSuccess,\n  resignGameError,\n  offerDrawRequest,\n  offerDrawSuccess,\n  offerDrawError,\n  acceptDrawOfferRequest,\n  acceptDrawOfferSuccess,\n  acceptDrawOfferError,\n  declineDrawOfferRequest,\n  declineDrawOfferSuccess,\n  declineDrawOfferError,\n} = singleGameSlice.actions;\n\nexport default singleGameSlice.reducer;\n\nexport const fetchGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(getSingleGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(`/api/v1/game/${id}`, (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedGame = normalize(body as Game, gameSchema);\n        dispatch(getSingleGameSuccess(normalizedGame));\n        resolve(body as Game);\n      } else {\n        dispatch(\n          getSingleGameError({\n            itemId: id,\n            error: getErrorMessageFromJWR(jwr),\n          })\n        );\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const abortGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(abortGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/abort`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(abortGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            abortGameError({\n              itemId: id,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const resignGame = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(resignGameRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/resign`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(resignGameSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            resignGameError({\n              itemId: id,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const offerDraw = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(offerDrawRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(offerDrawSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            offerDrawError({\n              itemId: id,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const acceptDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(acceptDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/yes`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(acceptDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            acceptDrawOfferError({\n              itemId: id,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\nexport const declineDrawOffer = (id: number): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(declineDrawOfferRequest(id));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${id}/draw/no`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n          dispatch(declineDrawOfferSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(\n            declineDrawOfferError({\n              itemId: id,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockRun\":\"GamePreviewClock_clockRun__2fzqU\"};","import { schema } from \"normalizr\";\n\nconst userSchema = new schema.Entity(\"users\");\n\nexport default userSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorIcon\":\"GameMeta_colorIcon__2-cJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"GameControlPanel_controlPanel__31q_E\",\"controlPanelInner\":\"GameControlPanel_controlPanelInner__mVrde\"};","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport { SubscriptionData } from \"../../interfaces/SubscriptionData\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport seekSchema from \"../../normalizr/schemas/seekSchema\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport chatMessageSchema from \"../../normalizr/schemas/chatMessageSchema\";\n\ninterface DataSubscriptionState {}\n\nconst initialState: DataSubscriptionState = {};\n\nconst dataSubscriptionSlice = createSlice({\n  name: \"dataSubscription\",\n  initialState,\n  reducers: {\n    updateGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createGameBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    updateSeekBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createSeekBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    removeSeekBySubscription(_state, _action: PayloadAction<number>) {},\n    createUserBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    updateUserBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createChatMessageBySubscription(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  updateGameBySubscription,\n  createGameBySubscription,\n  updateSeekBySubscription,\n  createSeekBySubscription,\n  removeSeekBySubscription,\n  createUserBySubscription,\n  updateUserBySubscription,\n  createChatMessageBySubscription,\n} = dataSubscriptionSlice.actions;\n\nexport default dataSubscriptionSlice.reducer;\n\nexport const watchGames = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"game\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"updated\") {\n      const game = {\n        ...subscriptionData.previous,\n        ...subscriptionData.data,\n      };\n\n      const normalizedGame = normalize(game, gameSchema);\n\n      dispatch(updateGameBySubscription(normalizedGame));\n    } else if (subscriptionData.verb === \"created\") {\n      const normalizedGame = normalize(subscriptionData.data, gameSchema);\n\n      dispatch(createGameBySubscription(normalizedGame));\n    }\n  });\n};\n\nexport const watchSeeks = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"seek\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"updated\") {\n      const seek = {\n        ...subscriptionData.previous,\n        ...subscriptionData.data,\n      };\n\n      const normalizedSeek = normalize(seek, seekSchema);\n\n      dispatch(updateSeekBySubscription(normalizedSeek));\n    } else if (subscriptionData.verb === \"created\") {\n      const normalizedSeek = normalize(subscriptionData.data, seekSchema);\n\n      dispatch(createSeekBySubscription(normalizedSeek));\n    } else if (subscriptionData.verb === \"destroyed\") {\n      dispatch(removeSeekBySubscription(subscriptionData.id));\n    }\n  });\n};\n\nexport const watchUsers = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"user\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"updated\") {\n      const seek = {\n        ...subscriptionData.previous,\n        ...subscriptionData.data,\n      };\n\n      const normalizedSeek = normalize(seek, userSchema);\n\n      dispatch(updateUserBySubscription(normalizedSeek));\n    } else if (subscriptionData.verb === \"created\") {\n      const normalizedSeek = normalize(subscriptionData.data, userSchema);\n\n      dispatch(createUserBySubscription(normalizedSeek));\n    }\n  });\n};\n\nexport const watchChatMessages = (): AppThunk<void> => (dispatch) => {\n  ioClient.socket.on(\"chat-message\", (subscriptionData: SubscriptionData) => {\n    if (subscriptionData.verb === \"created\") {\n      const normalizedChatMessage = normalize(\n        subscriptionData.data,\n        chatMessageSchema\n      );\n\n      dispatch(createChatMessageBySubscription(normalizedChatMessage));\n    }\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"GamePreviewsList_grid__2iggX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"GamePreviewResult_result__2DwMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"GameControlPanelTopToolbar_buttonsWrapper__TJIBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsWrapper\":\"GameControlPanelBottomToolbar_buttonsWrapper__21ame\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singleGameBoard\":\"SingleGameBoard_singleGameBoard__2rYay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatMessages\":\"ChatMessagesList_chatMessages__4clbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"PostChatMessageForm_textInput__1LkoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__ESZ_K\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { normalize } from \"normalizr\";\nimport { JWR } from \"sails.io.js\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport User from \"../../interfaces/User\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport SignUpData from \"../../interfaces/SignUpData\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\ninterface CurrentUserState {\n  userId: number | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: CurrentUserState = {\n  userId: null,\n  isLoading: true,\n  error: null,\n};\n\nconst currentUserSlice = createSlice({\n  name: \"currentUser\",\n  initialState,\n  reducers: {\n    getCurrentUserRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getCurrentUserSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number> | null>\n    ) {\n      state.userId = action.payload ? action.payload.result : null;\n      state.isLoading = false;\n      state.error = null;\n    },\n    getCurrentUserError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    loginRequest(_state) {},\n    loginSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    loginError(_state, _action: PayloadAction<string>) {},\n    registerRequest(_state) {},\n    registerSuccess(state, action: PayloadAction<NormalizedData<number>>) {\n      state.userId = action.payload.result;\n    },\n    registerError(_state, _action: PayloadAction<string>) {},\n    logoutRequest(_state) {},\n    logoutSuccess(state) {\n      state.userId = null;\n    },\n    logoutError(_state, _action: PayloadAction<string>) {},\n  },\n});\n\nexport const {\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n} = currentUserSlice.actions;\n\nexport default currentUserSlice.reducer;\n\nexport const fetchCurrentUser = (): AppThunk<Promise<User | null>> => (\n  dispatch\n) => {\n  dispatch(getCurrentUserRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/api/v1/account/me\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedUser = normalize(body as User, userSchema);\n\n        dispatch(getCurrentUserSuccess(normalizedUser));\n        resolve(body as User);\n      } else if (jwr.statusCode === 401) {\n        dispatch(getCurrentUserSuccess(null));\n        resolve(null);\n      } else {\n        dispatch(getCurrentUserError(getErrorMessageFromJWR(jwr)));\n        reject(jwr);\n      }\n    });\n  });\n};\n\nexport const login = (data: LoginData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  dispatch(loginRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.put(\n      \"/api/v1/entrance/login\",\n      {\n        // rememberMe: true, // because of warning in backend @see https://tracker.yandex.ru/CHESSPWA-47\n        emailAddress: data.email,\n        password: data.password,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(loginSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          dispatch(loginError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const register = (data: SignUpData): AppThunk<Promise<User>> => (\n  dispatch\n) => {\n  dispatch(registerRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/entrance/signup\",\n      {\n        fullName: data.fullName,\n        emailAddress: data.email,\n        password: data.password,\n        confirmPassword: data.password,\n        agreed: true,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedUser = normalize(body as User, userSchema);\n\n          dispatch(registerSuccess(normalizedUser));\n          resolve(body as User);\n        } else {\n          dispatch(registerError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const logout = (): AppThunk<Promise<void>> => (dispatch) => {\n  dispatch(logoutRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      \"/api/v1/account/logout\",\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          dispatch(logoutSuccess());\n          resolve();\n        } else {\n          dispatch(logoutError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { isString as _isString } from \"lodash\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { CreateSeekData } from \"../../interfaces/CreateSeekData\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport { Seek } from \"../../interfaces/Seek\";\nimport seekSchema from \"../../normalizr/schemas/seekSchema\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\ninterface ChallengeState {}\n\nconst initialState: ChallengeState = {};\n\nconst challengeSlice = createSlice({\n  name: \"challenge\",\n  initialState,\n  reducers: {\n    challengeAiRequest() {},\n    challengeAiSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    challengeAiError(_state, _action: PayloadAction<string>) {},\n    createSeekRequest() {},\n    createSeekSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    createSeekError(_state, _action: PayloadAction<string>) {},\n\n    acceptSeekRequest(_state, _seekId: PayloadAction<number>) {},\n    acceptSeekSuccess(\n      _state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) {},\n    acceptSeekError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  challengeAiRequest,\n  challengeAiSuccess,\n  challengeAiError,\n  createSeekRequest,\n  createSeekSuccess,\n  createSeekError,\n  acceptSeekRequest,\n  acceptSeekSuccess,\n  acceptSeekError,\n} = challengeSlice.actions;\n\nexport default challengeSlice.reducer;\n\nexport const challengeAi = (data: ChallengeAiData): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(challengeAiRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/challenge/ai`,\n      data,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(challengeAiSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(challengeAiError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const createSeek = (data: CreateSeekData): AppThunk<Promise<Game>> => (\n  dispatch\n) => {\n  dispatch(createSeekRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/seek`,\n      data,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(createSeekSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(createSeekError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const acceptSeek = (seekId: number): AppThunk<Promise<Seek>> => (\n  dispatch\n) => {\n  dispatch(acceptSeekRequest(seekId));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/seek/${seekId}/accept`,\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedSeek = normalize(body as Seek, seekSchema);\n\n          dispatch(acceptSeekSuccess(normalizedSeek));\n          resolve(body as Seek);\n        } else {\n          dispatch(\n            acceptSeekError({\n              itemId: seekId,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC, memo } from \"react\";\nimport { isEqualWith as _isEqualWith } from \"lodash\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\n\nexport interface GamePreviewUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GamePreviewUserName: FC<GamePreviewUserNameProps> = memo(\n  ({ game, color = \"white\" }) => {\n    if (!game) {\n      return null;\n    }\n\n    return (\n      <span>\n        {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n      </span>\n    );\n  },\n  (a: GamePreviewUserNameProps, b: GamePreviewUserNameProps) => {\n    return _isEqualWith(\n      a,\n      b,\n      (_value: unknown, _other: unknown, indexOrKey: unknown) => {\n        // ignore time to improve performance\n        if (indexOrKey === \"wtime\" || indexOrKey === \"btime\") {\n          return true;\n        }\n        return undefined;\n      }\n    );\n  }\n);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport css from \"./GamePreviewResult.module.scss\";\n\nexport interface GamePreviewResultProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GamePreviewResult: FC<GamePreviewResultProps> = ({\n  game,\n  color = \"white\",\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  let result = \"½\";\n  if (game.winner) {\n    if (game.winner === color) {\n      result = \"1\";\n    } else {\n      result = \"0\";\n    }\n  }\n\n  return <span className={css.result}>{result}</span>;\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\nimport css from \"./GamePreviewClock.module.scss\";\n\nexport interface GamePreviewClockProps {\n  time?: number; // in msec\n  isRunning?: boolean;\n}\n\nexport const GamePreviewClock: FC<GamePreviewClockProps> = ({\n  time = 0,\n  isRunning = false,\n}) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm:ss\");\n\n  return (\n    <div\n      data-testid=\"time\"\n      className={cx(css.clock, { [css.clockRun]: isRunning })}\n    >\n      {formattedTime}\n    </div>\n  );\n};\n","import React, { FC, memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Board } from \"ii-react-chessboard\";\nimport { isEqual as _isEqual } from \"lodash\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GamePreviewsListItem.module.scss\";\nimport { GamePreviewUserName } from \"./GamePreviewUserName\";\nimport { GamePreviewResult } from \"./GamePreviewResult\";\nimport { GamePreviewClock } from \"./GamePreviewClock\";\n\nexport interface GamePreviewsListItemProps {\n  game?: Game;\n}\n\nexport const GamePreviewsListItem: FC<GamePreviewsListItemProps> = memo(\n  ({ game }) => {\n    if (!game) {\n      return null;\n    }\n\n    const fen: string = makeChessInstance(game).fen();\n\n    return (\n      <div className={css.gamePreview}>\n        <div className={css.player}>\n          <GamePreviewUserName game={game} color=\"black\" />\n          {game.status === \"started\" && (\n            <GamePreviewClock\n              time={game.btime}\n              isRunning={game.turn === \"black\"}\n            />\n          )}\n          {game.status !== \"started\" && game.status !== \"aborted\" && (\n            <GamePreviewResult game={game} color=\"black\" />\n          )}\n        </div>\n        <div className={css.board}>\n          <Link to={`/game/${game.id}`}>\n            <Board position={fen} viewOnly={false} width={240} />\n          </Link>\n        </div>\n        <div className={css.player}>\n          <GamePreviewUserName game={game} color=\"white\" />\n          {game.status === \"started\" && (\n            <GamePreviewClock\n              time={game.wtime}\n              isRunning={game.turn === \"white\"}\n            />\n          )}\n          {game.status !== \"started\" && game.status !== \"aborted\" && (\n            <GamePreviewResult game={game} color=\"white\" />\n          )}\n        </div>\n      </div>\n    );\n  },\n  (a: GamePreviewsListItemProps, b: GamePreviewsListItemProps) => _isEqual(a, b)\n);\n","import React, { FC, memo } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport interface ContentLoadingStatusProps {\n  emptyContentMessage?: string;\n  isEmpty?: boolean;\n  isLoading?: boolean;\n  error?: string | null;\n  showEmptyContentMessage?: boolean;\n}\n\nconst defaultEmptyContentMessage = \"content is empty\";\n\nexport const ContentLoadingStatus: FC<ContentLoadingStatusProps> = memo(\n  ({\n    emptyContentMessage = defaultEmptyContentMessage,\n    isEmpty = false,\n    isLoading = false,\n    error = null,\n    showEmptyContentMessage = true,\n  }) => {\n    if (isEmpty && !isLoading && !error && showEmptyContentMessage) {\n      return (\n        <div\n          className=\"alert alert-warning text-center\"\n          role=\"alert\"\n          data-testid=\"empty-content-message\"\n        >\n          {emptyContentMessage}\n        </div>\n      );\n    }\n\n    if (isLoading && isEmpty) {\n      return (\n        <div className=\"text-center\">\n          <Spinner\n            animation=\"border\"\n            role=\"status\"\n            data-testid=\"loading-spinner\"\n          >\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div\n          className=\"alert alert-danger text-center\"\n          role=\"alert\"\n          data-testid=\"error-message\"\n        >\n          {error}\n        </div>\n      );\n    }\n\n    return null;\n  }\n);\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport css from \"./GamePreviewsList.module.scss\";\nimport { GamePreviewsListItem } from \"./GamePreviewsListItem\";\nimport { ContentLoadingStatus } from \"../../components/ContentLoadingStatus\";\n\nexport interface GamePreviewsListProps {\n  games?: Game[];\n  isLoading?: boolean;\n  error?: string | null;\n  emptyContentMessage?: string;\n}\n\nexport const GamePreviewsList: FC<GamePreviewsListProps> = ({\n  games = [],\n  isLoading = false,\n  error = null,\n  emptyContentMessage,\n}) => {\n  return (\n    <div>\n      <ContentLoadingStatus\n        isLoading={isLoading}\n        error={error}\n        isEmpty={games.length === 0}\n        emptyContentMessage={emptyContentMessage}\n      />\n      <div className={css.grid}>\n        {games.map((item) => (\n          <GamePreviewsListItem game={item} key={item.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst limit = 9;\n\nconst OngoingGamesContainer: FC<unknown> = () => {\n  const games = useSelector((state: RootState) =>\n    denormalize(Object.keys(state.entities.games), [gameSchema], state.entities)\n      .filter((game: Game) => game.status === \"started\")\n      .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n      .slice(0, limit)\n  );\n\n  const isLoading = useSelector(\n    (state: RootState) => state.gamesList.isLoading\n  );\n  const error = useSelector((state: RootState) => state.gamesList.error);\n\n  return (\n    <GamePreviewsList\n      games={games}\n      isLoading={isLoading}\n      error={error}\n      emptyContentMessage=\"Nobody is playing right now\"\n    />\n  );\n};\n\nexport default OngoingGamesContainer;\n","import React, { FC, useCallback } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport interface ChallengeButtonsProps {\n  onChallengeAi?(): void;\n  onCreateGame?(): void;\n}\n\nexport const ChallengeButtons: FC<ChallengeButtonsProps> = ({\n  onChallengeAi,\n  onCreateGame,\n}) => {\n  const handleChallengeAi = useCallback(() => {\n    if (onChallengeAi) {\n      onChallengeAi();\n    }\n  }, [onChallengeAi]);\n\n  const handleCreateGame = useCallback(() => {\n    if (onCreateGame) {\n      onCreateGame();\n    }\n  }, [onCreateGame]);\n\n  return (\n    <div className=\"mb-3\">\n      <Button\n        variant=\"primary\"\n        onClick={handleCreateGame}\n        data-testid=\"create-game-btn\"\n        className=\"mr-3\"\n      >\n        Create a game\n      </Button>\n      <Button\n        variant=\"primary\"\n        onClick={handleChallengeAi}\n        data-testid=\"challenge-ai-btn\"\n      >\n        Play with the computer\n      </Button>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeButtons } from \"./ChallengeButtons\";\nimport { showModal } from \"../modal/modalSlice\";\n\nconst ChallengeButtonsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch();\n\n  const handleChallengeAi = useCallback(() => {\n    dispatch(\n      showModal({\n        name: \"challengeAi\",\n        allowClose: true,\n      })\n    );\n  }, [dispatch]);\n\n  const handleCreateGame = useCallback(() => {\n    dispatch(\n      showModal({\n        name: \"seek\",\n        allowClose: true,\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <ChallengeButtons\n      onChallengeAi={handleChallengeAi}\n      onCreateGame={handleCreateGame}\n    />\n  );\n};\n\nexport default ChallengeButtonsContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Formik, FormikHelpers } from \"formik\";\nimport React, { FC, FormEvent } from \"react\";\nimport cx from \"classnames\";\nimport { Alert, Button, ButtonGroup, Form, Row } from \"react-bootstrap\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport css from \"./ChallengeAiForm.module.scss\";\n\nexport interface ChallengeAiFormProps {\n  onSubmit?(\n    values: ChallengeAiData,\n    formikHelpers: FormikHelpers<ChallengeAiData>\n  ): void | Promise<any>;\n}\n\nexport const ChallengeAiForm: FC<ChallengeAiFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        level: 2,\n        color: \"\",\n        clockLimit: 300,\n        clockIncrement: 0,\n      }}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(\n            values as ChallengeAiData,\n            formikHelpers as FormikHelpers<ChallengeAiData>\n          );\n        }\n        return undefined;\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        setFieldValue,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <fieldset>\n            <Form.Group>\n              <Form.Label>\n                Minutes per side: {values.clockLimit / 60}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockLimit\"\n                onBlur={handleBlur}\n                value={values.clockLimit}\n                onChange={handleChange}\n                min=\"60\"\n                max=\"1800\"\n                step=\"60\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Increment in seconds: {values.clockIncrement}\n              </Form.Label>\n              <Form.Control\n                type=\"range\"\n                name=\"clockIncrement\"\n                onBlur={handleBlur}\n                value={values.clockIncrement}\n                onChange={handleChange}\n                min=\"0\"\n                max=\"60\"\n              />\n            </Form.Group>\n          </fieldset>\n\n          <div className=\"text-center\">Level</div>\n\n          <Row>\n            <ButtonGroup className={cx(\"mx-auto\", css.levelButtonGroup)}>\n              {[1, 2, 3, 4].map((level) => (\n                <Button\n                  key={level}\n                  type=\"button\"\n                  variant={level === values.level ? \"dark\" : \"light\"}\n                  onClick={() => setFieldValue(\"level\", level)}\n                >\n                  {level}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </Row>\n\n          <div className=\"text-center\">A.I. Level: {values.level}</div>\n\n          <div className={css.colorSubmits}>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Black\"\n              className={cx(css.colorSubmitsButton, css.blackButton)}\n              onClick={() => setFieldValue(\"color\", \"black\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Random side\"\n              className={cx(css.colorSubmitsButton, css.randomButton)}\n              onClick={() => setFieldValue(\"color\", \"random\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"White\"\n              className={cx(css.colorSubmitsButton, css.whiteButton)}\n              onClick={() => setFieldValue(\"color\", \"white\")}\n            >\n              <i />\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { FormikHelpers } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { ChallengeAiForm } from \"./ChallengeAiForm\";\nimport { AppDispatch } from \"../../app/store\";\nimport { challengeAi } from \"../challenge/challengeSlice\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport Game from \"../../interfaces/Game\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\nconst ChallengeAiFormContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const history = useHistory();\n\n  const challengeAiAndOpenGamePage = useCallback(\n    (\n      values: ChallengeAiData,\n      formikHelpers: FormikHelpers<ChallengeAiData>\n    ) => {\n      return dispatch(challengeAi(values))\n        .then((game: Game) => {\n          history.push(`/game/${game.id}`);\n        })\n        .catch((err) => {\n          formikHelpers.setStatus(getErrorMessageFromJWR(err));\n        });\n    },\n    [dispatch, history]\n  );\n\n  return <ChallengeAiForm onSubmit={challengeAiAndOpenGamePage} />;\n};\n\nexport default ChallengeAiFormContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport ChallengeAiFormContainer from \"./ChallengeAiFormContainer\";\n\nexport interface ChallengeAiModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const ChallengeAiModal: FC<ChallengeAiModalProps> = ({\n  show = false,\n  onHide,\n}) => {\n  return (\n    <Modal show={show} onHide={onHide} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Play with the computer</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <ChallengeAiFormContainer />\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChallengeAiModal } from \"./ChallengeAiModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideModal } from \"../modal/modalSlice\";\n\nconst ChallengeAiModalContainer: FC<unknown> = () => {\n  const isModalVisible = useSelector(\n    (state: RootState) => state.modal.showModal === \"challengeAi\"\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideModal());\n  }, [dispatch]);\n\n  return <ChallengeAiModal show={isModalVisible} onHide={handleHide} />;\n};\n\nexport default ChallengeAiModalContainer;\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useSelector } from \"react-redux\";\nimport { GamePreviewsList } from \"./GamePreviewsList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport Game from \"../../interfaces/Game\";\n\nconst limit = 9;\n\nconst CompletedGamesContainer: FC<unknown> = () => {\n  const games = useSelector(\n    (state: RootState) =>\n      denormalize(\n        Object.keys(state.entities.games),\n        [gameSchema],\n        state.entities\n      )\n        .filter(\n          (game: Game) => game.status !== \"started\" && game.status !== \"aborted\"\n        )\n        .sort((a: Game, b: Game) => b.createdAt - a.createdAt)\n        .slice(0, limit),\n    (a: Game[], b: Game[]) => {\n      return (\n        JSON.stringify(a.map((item) => item.id)) ===\n        JSON.stringify(b.map((item) => item.id))\n      );\n    } // since the games are over, we check only arrays of ids to improve performance\n  );\n\n  const isLoading = useSelector(\n    (state: RootState) => state.gamesList.isLoading\n  );\n  const error = useSelector((state: RootState) => state.gamesList.error);\n\n  return (\n    <GamePreviewsList\n      games={games}\n      isLoading={isLoading}\n      error={error}\n      emptyContentMessage=\"There is no finished games yet\"\n    />\n  );\n};\n\nexport default CompletedGamesContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Formik, FormikHelpers } from \"formik\";\nimport React, { FC, FormEvent, useCallback } from \"react\";\nimport { Alert, Button, Form, Spinner } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport { CreateSeekData } from \"../../interfaces/CreateSeekData\";\nimport { ChallengeAiData } from \"../../interfaces/ChallengeAiData\";\nimport css from \"./CreateSeekForm.module.scss\";\n\nexport interface CreateSeekFormProps {\n  onSubmit?(\n    values: CreateSeekData,\n    formikHelpers: FormikHelpers<CreateSeekData>\n  ): void | Promise<any>;\n  onAbort?(): void;\n}\n\nexport const CreateSeekForm: FC<CreateSeekFormProps> = ({\n  onSubmit,\n  onAbort,\n}) => {\n  const handleAbort = useCallback(() => {\n    if (onAbort) {\n      onAbort();\n    }\n  }, [onAbort]);\n\n  return (\n    <Formik\n      initialValues={{\n        color: \"\",\n        clockLimit: 300,\n        clockIncrement: 0,\n      }}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(\n            values as ChallengeAiData,\n            formikHelpers as FormikHelpers<CreateSeekData>\n          );\n        }\n        return undefined;\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        setFieldValue,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <fieldset>\n            <Form.Group>\n              <Form.Label>\n                Minutes per side: {values.clockLimit / 60}\n              </Form.Label>\n              <Form.Control\n                disabled={isSubmitting}\n                type=\"range\"\n                name=\"clockLimit\"\n                onBlur={handleBlur}\n                value={values.clockLimit}\n                onChange={handleChange}\n                min=\"60\"\n                max=\"1800\"\n                step=\"60\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>\n                Increment in seconds: {values.clockIncrement}\n              </Form.Label>\n              <Form.Control\n                disabled={isSubmitting}\n                type=\"range\"\n                name=\"clockIncrement\"\n                onBlur={handleBlur}\n                value={values.clockIncrement}\n                onChange={handleChange}\n                min=\"0\"\n                max=\"60\"\n              />\n            </Form.Group>\n          </fieldset>\n\n          <div className={css.colorSubmits}>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Black\"\n              className={cx(css.colorSubmitsButton, css.blackButton)}\n              onClick={() => setFieldValue(\"color\", \"black\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"Random side\"\n              className={cx(css.colorSubmitsButton, css.randomButton)}\n              onClick={() => setFieldValue(\"color\", \"random\")}\n            >\n              <i />\n            </button>\n            <button\n              disabled={isSubmitting}\n              type=\"submit\"\n              title=\"White\"\n              className={cx(css.colorSubmitsButton, css.whiteButton)}\n              onClick={() => setFieldValue(\"color\", \"white\")}\n            >\n              <i />\n            </button>\n          </div>\n\n          {isSubmitting && (\n            <div className={css.spinnerWrapper}>\n              <Spinner animation=\"border\" className={css.spinner}>\n                <span className=\"sr-only\">Waiting for opponent...</span>\n              </Spinner>\n\n              <Button\n                variant=\"danger\"\n                className={css.spinnerButton}\n                onClick={handleAbort}\n              >\n                Abort\n              </Button>\n            </div>\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport React, { FC, useCallback } from \"react\";\nimport { FormikHelpers } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateSeekForm } from \"./CreateSeekForm\";\nimport { createSeek } from \"../challenge/challengeSlice\";\nimport { CreateSeekData } from \"../../interfaces/CreateSeekData\";\nimport { AppDispatch } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\n\nimport ioClient from \"../../services/ioClient\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\nconst CreateSeekFormContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    (values: CreateSeekData, formikHelpers: FormikHelpers<CreateSeekData>) => {\n      return dispatch(createSeek(values))\n        .then((game: Game) => {\n          history.push(`/game/${game.id}`);\n        })\n        .catch((err) => {\n          if (err.statusCode === 0) {\n            // request is aborted by client. do nothing\n          } else {\n            formikHelpers.setStatus(getErrorMessageFromJWR(err));\n          }\n        });\n    },\n    [dispatch, history]\n  );\n\n  // @todo. This is temporary solution. We need to use HTTP requests instead of sockets and we need\n  //  to abort the createSeek HTTP request instead of sockets disconnect.\n  const handleAbort = useCallback(() => {\n    // @ts-ignore\n    ioClient.socket.disconnect();\n    ioClient.socket.reconnect();\n  }, []);\n\n  return <CreateSeekForm onSubmit={handleSubmit} onAbort={handleAbort} />;\n};\n\nexport default CreateSeekFormContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport CreateSeekFormContainer from \"./CreateSeekFormContainer\";\n\nexport interface SeekModalProps {\n  allowClose?: boolean;\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const SeekModal: FC<SeekModalProps> = ({\n  allowClose = true,\n  show = false,\n  onHide,\n}) => {\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      animation={false}\n      backdrop={allowClose ? true : \"static\"}\n    >\n      <Modal.Header closeButton={allowClose}>\n        <Modal.Title>Create a game</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <CreateSeekFormContainer />\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SeekModal } from \"./SeekModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideModal } from \"../modal/modalSlice\";\n\nconst SeekModalContainer: FC<unknown> = () => {\n  const isModalVisible = useSelector(\n    (state: RootState) => state.modal.showModal === \"seek\"\n  );\n\n  const allowClose = useSelector((state: RootState) => state.modal.allowClose);\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideModal());\n  }, [dispatch]);\n\n  return (\n    <SeekModal\n      allowClose={allowClose}\n      show={isModalVisible}\n      onHide={handleHide}\n    />\n  );\n};\n\nexport default SeekModalContainer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M256,0C114.618,0,0,114.618,0,256s114.618,256,256,256s256-114.618,256-256S397.382,0,256,0z M256,469.333 c-117.818,0-213.333-95.515-213.333-213.333S138.182,42.667,256,42.667S469.333,138.182,469.333,256S373.818,469.333,256,469.333z \"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgWhite = function SvgWhite(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgWhite, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/white.1009e168.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M256,0C114.837,0,0,114.837,0,256s114.837,256,256,256s256-114.837,256-256S397.163,0,256,0z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgBlack = function SvgBlack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBlack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/black.f1ae6ff6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"c198_half_moon\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29.105,14.552c0-0.03-0.004-0.06-0.004-0.092C29.054,6.481,22.584,0.027,14.6,0.002C14.585,0.002,14.569,0,14.556,0 h-0.002l0,0C6.547,0,0.051,6.47,0.005,14.468c0,0.027-0.004,0.053-0.004,0.084v0.002l0,0c0,8.037,6.517,14.553,14.553,14.553l0,0 h0.002c0.014,0,0.029-0.003,0.044-0.003c8.016-0.025,14.507-6.529,14.507-14.55l0,0L29.105,14.552L29.105,14.552z M14.556,2.079 c6.877,0,12.473,5.596,12.473,12.473c0,6.876-5.596,12.476-12.473,12.476V2.079z\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Capa_1_271_\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgRandom = function SvgRandom(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 29.107 29.107\",\n    style: {\n      enableBackground: \"new 0 0 29.107 29.107\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgRandom, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/random.668e615f.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC, useCallback } from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport { Seek } from \"../../interfaces/Seek\";\nimport css from \"./SeeksListItem.module.scss\";\nimport { ReactComponent as WhiteIcon } from \"../../assets/icons/white.svg\";\nimport { ReactComponent as BlackIcon } from \"../../assets/icons/black.svg\";\nimport { ReactComponent as RandomIcon } from \"../../assets/icons/random.svg\";\n\nexport interface SeeksListItemProps {\n  acceptInProcess?: number | null;\n  currentUserId?: number | null;\n  seek?: Seek;\n  onPlay?(seekId: number): void;\n}\n\nexport const SeeksListItem: FC<SeeksListItemProps> = ({\n  acceptInProcess = null,\n  currentUserId = null,\n  seek,\n  onPlay,\n}) => {\n  const handlePlay = useCallback(() => {\n    if (onPlay) {\n      onPlay(seek!.id);\n    }\n  }, [onPlay, seek]);\n\n  if (!seek) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"seek-wrapper\"\n      className={cx(\"d-flex\", \"align-items-center\", \"border-bottom\", {\n        [css.gameIsStarted]: seek.game,\n      })}\n    >\n      <div className=\"d-flex pl-2\">\n        {seek.color === \"white\" && (\n          <WhiteIcon data-testid=\"white-icon\" className={css.colorIcon} />\n        )}\n        {seek.color === \"black\" && (\n          <BlackIcon data-testid=\"black-icon\" className={css.colorIcon} />\n        )}\n        {seek.color === \"random\" && (\n          <RandomIcon data-testid=\"random-icon\" className={css.colorIcon} />\n        )}\n      </div>\n      <div data-testid=\"user-name\" className=\"mr-auto p-2\">\n        {seek.createdBy.fullName}\n      </div>\n      <div data-testid=\"time-control\" className=\"p-2\">\n        {seek.clockLimit / 60} + {seek.clockIncrement}\n      </div>\n      <div className=\"p-2\">\n        {currentUserId !== seek.createdBy.id && (\n          <Button\n            data-testid=\"play-btn\"\n            onClick={handlePlay}\n            disabled={acceptInProcess !== null || !!seek.game}\n          >\n            {acceptInProcess === seek.id && (\n              <Spinner\n                animation=\"border\"\n                data-testid=\"play-btn-spinner\"\n                size=\"sm\"\n                className=\"mr-2\"\n              >\n                <span className=\"sr-only\">Sending...</span>\n              </Spinner>\n            )}\n            Play\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Seek } from \"../../interfaces/Seek\";\nimport { SeeksListItem } from \"./SeeksListItem\";\nimport { ContentLoadingStatus } from \"../../components/ContentLoadingStatus\";\n\nexport interface SeeksListProps {\n  acceptInProcess?: number | null;\n  currentUserId?: number | null;\n  seeks?: Seek[];\n  onPlay?(seekId: number): void;\n  isLoading?: boolean;\n  error?: string | null;\n}\n\nexport const SeeksList: FC<SeeksListProps> = ({\n  acceptInProcess = null,\n  currentUserId = null,\n  seeks = [],\n  onPlay,\n  isLoading = false,\n  error = null,\n}) => {\n  return (\n    <div>\n      <ContentLoadingStatus\n        isLoading={isLoading}\n        error={error}\n        isEmpty={seeks.length === 0}\n        emptyContentMessage=\"Nobody is waiting for opponent\"\n      />\n      <div>\n        {seeks.map((item) => (\n          <SeeksListItem\n            acceptInProcess={acceptInProcess}\n            currentUserId={currentUserId}\n            seek={item}\n            onPlay={onPlay}\n            key={item.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { denormalize } from \"normalizr\";\nimport seekSchema from \"../../normalizr/schemas/seekSchema\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { SeeksList } from \"./SeeksList\";\nimport { acceptSeek } from \"../challenge/challengeSlice\";\nimport { AppDispatch } from \"../../app/store\";\nimport { Seek } from \"../../interfaces/Seek\";\n\nconst SeeksListContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const history = useHistory();\n\n  const currentUserId = useSelector(\n    (state: RootState) => state.currentUser.userId\n  );\n\n  const seeks = useSelector((state: RootState) =>\n    denormalize(state.seeksList.items, [seekSchema], state.entities)\n  );\n  const isLoading = useSelector(\n    (state: RootState) => state.seeksList.isLoading\n  );\n  const error = useSelector((state: RootState) => state.seeksList.error);\n\n  const acceptSeekRequest = useSelector(\n    (state: RootState) => state.acceptSeekRequest\n  );\n\n  const acceptInProcess = acceptSeekRequest.inProcess\n    ? acceptSeekRequest.itemId\n    : null;\n\n  const handlePlay = useCallback(\n    (seekId: number) => {\n      return dispatch(acceptSeek(seekId))\n        .then((seek: Seek) => {\n          history.push(`/game/${seek.game!.id}`);\n        })\n        .catch(() => {});\n    },\n    [dispatch, history]\n  );\n\n  return (\n    <SeeksList\n      currentUserId={currentUserId}\n      seeks={seeks}\n      onPlay={handlePlay}\n      acceptInProcess={acceptInProcess}\n      isLoading={isLoading}\n      error={error}\n    />\n  );\n};\n\nexport default SeeksListContainer;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 9,\n  cy: 9,\n  r: 6,\n  stroke: \"#629924\",\n  strokeWidth: 1,\n  fill: \"#629924\"\n});\n\nvar SvgOnline = function SvgOnline(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 18,\n    width: 16,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOnline, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/online.5fbf667c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 9,\n  cy: 9,\n  r: 6,\n  stroke: \"#BBB6B4\",\n  strokeWidth: 1,\n  fill: \"#fff\"\n});\n\nvar SvgOffline = function SvgOffline(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 18,\n    width: 16,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOffline, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/offline.8ce2bca1.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from \"react\";\nimport cx from \"classnames\";\nimport moment from \"moment-timezone\";\nimport User from \"../../interfaces/User\";\nimport css from \"./UsersListItem.module.scss\";\nimport { ReactComponent as OnlineIcon } from \"../../assets/icons/online.svg\";\nimport { ReactComponent as OfflineIcon } from \"../../assets/icons/offline.svg\";\n\nexport interface UsersListItemProps {\n  currentUserId?: number | null;\n  user?: User;\n}\n\nexport const UsersListItem: FC<UsersListItemProps> = ({\n  currentUserId = null,\n  user,\n}) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"user-wrapper\"\n      className={cx(\"d-flex\", \"align-items-center\", \"border-bottom\", {\n        [css.currentUser]: user.id === currentUserId,\n      })}\n    >\n      <div className=\"d-flex pl-2\">\n        {user.isOnline && (\n          <OnlineIcon\n            data-testid=\"online-icon\"\n            className={css.connectedIcon}\n            title=\"online\"\n          />\n        )}\n        {!user.isOnline && (\n          <OfflineIcon\n            data-testid=\"offline-icon\"\n            className={css.connectedIcon}\n            title=\"offline\"\n          />\n        )}\n      </div>\n      <div data-testid=\"user-name\" className=\"mr-auto p-2\">\n        {user.fullName}\n      </div>\n      <div data-testid=\"registration-date\" title=\"registration date\">\n        {moment(user.createdAt).format(\"LLL\")}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport User from \"../../interfaces/User\";\nimport { ContentLoadingStatus } from \"../../components/ContentLoadingStatus\";\nimport { UsersListItem } from \"./UsersListItem\";\n\nexport interface UsersListProps {\n  currentUserId?: number | null;\n  users?: User[];\n  isLoading?: boolean;\n  error?: string | null;\n}\n\nexport const UsersList: FC<UsersListProps> = ({\n  currentUserId = null,\n  users = [],\n  isLoading = false,\n  error = null,\n}) => {\n  return (\n    <div>\n      <ContentLoadingStatus\n        isLoading={isLoading}\n        error={error}\n        isEmpty={users.length === 0}\n        emptyContentMessage=\"There is no players yet\"\n      />\n      <div>\n        {users.map((item) => (\n          <UsersListItem\n            currentUserId={currentUserId}\n            user={item}\n            key={item.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport { useDeepEqualSelector } from \"ii-react-libraries\";\nimport { UsersList } from \"./UsersList\";\nimport { RootState } from \"../../app/rootReducer\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\n\nconst UsersListContainer: FC<unknown> = () => {\n  const currentUserId = useSelector(\n    (state: RootState) => state.currentUser.userId\n  );\n\n  const users = useDeepEqualSelector((state: RootState) =>\n    denormalize(state.usersList.items, [userSchema], state.entities)\n  );\n\n  const isLoading = useSelector(\n    (state: RootState) => state.usersList.isLoading\n  );\n  const error = useSelector((state: RootState) => state.usersList.error);\n\n  return (\n    <UsersList\n      users={users}\n      isLoading={isLoading}\n      error={error}\n      currentUserId={currentUserId}\n    />\n  );\n};\n\nexport default UsersListContainer;\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport OngoingGamesContainer from \"../games-list/OngoingGamesContainer\";\nimport ChallengeButtonsContainer from \"./ChallengeButtonsContainer\";\nimport ChallengeAiModalContainer from \"../challenge-ai-modal/ChallengeAiModalContainer\";\nimport CompletedGamesContainer from \"../games-list/CompletedGamesContainer\";\nimport SeekModalContainer from \"../seek-modal/SeekModalContainer\";\nimport SeeksListContainer from \"../seeks-list/SeeksListContainer\";\nimport UsersListContainer from \"../users-list/UsersListContainer\";\n\nconst HomePage: FC<unknown> = () => {\n  return (\n    <>\n      <ChallengeAiModalContainer />\n      <SeekModalContainer />\n      <div className=\"d-flex justify-content-center\">\n        <ChallengeButtonsContainer />\n      </div>\n\n      <Card className=\"mb-3\">\n        <Card.Body>\n          <Card.Title>Our players</Card.Title>\n          <UsersListContainer />\n        </Card.Body>\n      </Card>\n\n      <Card className=\"mb-3\">\n        <Card.Body>\n          <Card.Title>Waiting for opponent</Card.Title>\n          <SeeksListContainer />\n        </Card.Body>\n      </Card>\n\n      <Card className=\"mb-3\">\n        <Card.Body>\n          <Card.Title>Playing right now</Card.Title>\n          <OngoingGamesContainer />\n        </Card.Body>\n      </Card>\n\n      <Card>\n        <Card.Body>\n          <Card.Title>Finished</Card.Title>\n          <CompletedGamesContainer />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default HomePage;\n","import Game from \"../interfaces/Game\";\n\nexport default (game: Game): string => {\n  if (game.status === \"outoftime\") {\n    if (game.winner === \"white\") {\n      return \"Time out • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Time out • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"resign\") {\n    if (game.winner === \"black\") {\n      return \"White resigned • Black is victorious\";\n    }\n    if (game.winner === \"white\") {\n      return \"Black resigned • White is victorious\";\n    }\n  }\n\n  if (game.status === \"aborted\") {\n    return \"Game aborted\";\n  }\n\n  if (game.status === \"mate\") {\n    if (game.winner === \"white\") {\n      return \"Checkmate • White is victorious\";\n    }\n    if (game.winner === \"black\") {\n      return \"Checkmate • Black is victorious\";\n    }\n  }\n\n  if (game.status === \"draw\") {\n    return \"Draw\";\n  }\n\n  if (game.status === \"stalemate\") {\n    return \"Stalemate\";\n  }\n\n  return \"Playing right now\";\n};\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport Game from \"../../interfaces/Game\";\nimport getGameStatusText from \"../../utils/getGameStatusText\";\nimport { ReactComponent as WhiteIcon } from \"../../assets/icons/white.svg\";\nimport { ReactComponent as BlackIcon } from \"../../assets/icons/black.svg\";\nimport css from \"./GameMeta.module.scss\";\n\nexport interface GameMetaProps {\n  game?: Game;\n}\n\nexport const GameMeta: FC<GameMetaProps> = ({ game }) => {\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body className=\"p-2\">\n        <div>\n          Time Control:{\" \"}\n          <span data-testid=\"time-control\">\n            {game.clockLimit / 60} + {game.clockIncrement}\n          </span>\n        </div>\n        <div\n          data-testid=\"game-status\"\n          className={cx({\n            \"text-success\": game.status === \"started\",\n            \"text-danger\": game.status !== \"started\",\n          })}\n        >\n          {getGameStatusText(game)}\n        </div>\n        <div data-testid=\"white-user\" className=\"d-flex align-items-center\">\n          <WhiteIcon className={cx(css.colorIcon, \"mr-1\")} />\n          {game.white ? game.white.fullName : `AI level ${game.aiLevel}`}\n        </div>\n        <div data-testid=\"black-user\" className=\"d-flex align-items-center\">\n          <BlackIcon className={cx(css.colorIcon, \"mr-1\")} />\n          {game.black ? game.black.fullName : `AI level ${game.aiLevel}`}\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { FC } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useDeepEqualSelector } from \"ii-react-libraries\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { GameMeta } from \"./GameMeta\";\n\nexport interface SingleGameMetaContainerProps {\n  id: number;\n}\n\nexport const GameMetaContainer: FC<SingleGameMetaContainerProps> = ({ id }) => {\n  const game = useDeepEqualSelector(\n    (state: RootState) => denormalize(id, gameSchema, state.entities),\n    (_value: unknown, _other: unknown, indexOrKey: unknown) => {\n      // ignore time to improve performance\n      if (indexOrKey === \"wtime\" || indexOrKey === \"btime\") {\n        return true;\n      }\n      return undefined;\n    }\n  );\n\n  if (!game) {\n    return null;\n  }\n\n  return <GameMeta game={game} />;\n};\n","import React, { FC } from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\nimport css from \"./GameClock.module.scss\";\n\nexport interface GameClockProps {\n  time?: number; // in msec\n  isRunning?: boolean;\n}\n\nexport const GameClock: FC<GameClockProps> = ({\n  time = 0,\n  isRunning = false,\n}) => {\n  const formattedTime = moment()\n    .startOf(\"day\")\n    .milliseconds(time)\n    .format(\"mm:ss\");\n\n  return (\n    <div\n      data-testid=\"time\"\n      className={cx(css.clock, {\n        [css.clockRun]: isRunning,\n        [css.clockEmerg]: time < 10000,\n      })}\n    >\n      {formattedTime}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport getGameStatusText from \"../../utils/getGameStatusText\";\nimport css from \"./GameControlPanelStatus.module.scss\";\n\nexport interface GameControlPanelStatusProps {\n  game?: Game;\n}\n\nexport const GameControlPanelStatus: FC<GameControlPanelStatusProps> = ({\n  game,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  let result = \"½-½\";\n  if (game.winner) {\n    if (game.winner === \"white\") {\n      result = \"1-0\";\n    } else {\n      result = \"0-1\";\n    }\n  }\n\n  return (\n    <div className={css.container}>\n      <div className={css.result} data-testid=\"game-result\">\n        {result}\n      </div>\n      <div className={css.status} data-testid=\"game-status\">\n        {getGameStatusText(game)}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/click-events-have-key-events */ // @todo\n/* eslint-disable jsx-a11y/interactive-supports-focus */ // @todo\n\nimport React, { FC, memo, useEffect, useRef } from \"react\";\nimport { chunk as _chunk, isEqualWith as _isEqualWith } from \"lodash\";\nimport { Move } from \"chess.js\";\nimport cx from \"classnames\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport css from \"./GameMoves.module.scss\";\nimport { GameControlPanelStatus } from \"./GameControlPanelStatus\";\nimport GameStatus from \"../../types/GameStatus\";\nimport { getMovesQnt } from \"../../utils/chess\";\n\nexport interface GameMovesProps {\n  game?: Game;\n  rewindToMoveIndex?: number | null;\n  onRewindToMove?(moveIndex: number): void;\n}\n\nconst formatMove = (move: Move): string => {\n  return `${move.from}${move.to}`;\n};\n\nexport const GameMoves: FC<GameMovesProps> = memo(\n  ({ game, rewindToMoveIndex = null, onRewindToMove }) => {\n    const scrollElementRef = useRef<HTMLDivElement>(null);\n    const lastMovesQnt = useRef<number>(-1);\n    const lastGameStatus = useRef<GameStatus>();\n\n    // @todo. add unit test\n    useEffect(() => {\n      if (!game) {\n        return;\n      }\n\n      const movesQnt = getMovesQnt(game);\n\n      if (\n        (lastMovesQnt.current !== movesQnt ||\n          lastGameStatus.current !== game.status) &&\n        rewindToMoveIndex === null\n      ) {\n        if (scrollElementRef.current) {\n          scrollElementRef.current.scrollTop =\n            scrollElementRef.current.scrollHeight;\n        }\n      }\n      lastMovesQnt.current = movesQnt;\n      lastGameStatus.current = game.status;\n    }, [\n      game,\n      lastMovesQnt,\n      lastGameStatus,\n      rewindToMoveIndex,\n      scrollElementRef,\n    ]);\n\n    if (!game) {\n      return null;\n    }\n\n    const chess = makeChessInstance(game);\n\n    const movesHistory = chess.history({ verbose: true });\n\n    const movesQnt = movesHistory.length;\n\n    const movesPairs = _chunk(movesHistory, 2);\n\n    const makeRewindToMoveHandler = (moveIndex: number) => {\n      return () => {\n        if (onRewindToMove) {\n          onRewindToMove(moveIndex);\n        }\n      };\n    };\n\n    return (\n      <div className={css.movesWrapper} ref={scrollElementRef}>\n        {movesPairs.map((pair, index) => {\n          const whiteMoveIndex = index * 2 + 1;\n          const blackMoveIndex = index * 2 + 2;\n\n          return (\n            <React.Fragment key={`move-${index}`}>\n              <div className={css.moveNumber}>{index + 1}</div>\n              <div\n                data-testid={`move-${whiteMoveIndex}`}\n                onClick={makeRewindToMoveHandler(whiteMoveIndex)}\n                role=\"button\"\n                className={cx(css.move, {\n                  [css.selected]:\n                    rewindToMoveIndex === whiteMoveIndex ||\n                    (rewindToMoveIndex === null && movesQnt === whiteMoveIndex),\n                })}\n              >\n                {formatMove(pair[0])}\n              </div>\n              {pair[1] && (\n                <div\n                  data-testid={`move-${blackMoveIndex}`}\n                  onClick={makeRewindToMoveHandler(blackMoveIndex)}\n                  role=\"button\"\n                  className={cx(css.move, {\n                    [css.selected]:\n                      rewindToMoveIndex === blackMoveIndex ||\n                      (rewindToMoveIndex === null &&\n                        movesQnt === blackMoveIndex),\n                  })}\n                >\n                  {formatMove(pair[1])}\n                </div>\n              )}\n            </React.Fragment>\n          );\n        })}\n\n        {game.status !== \"started\" && <GameControlPanelStatus game={game} />}\n      </div>\n    );\n  },\n  (a: GameMovesProps, b: GameMovesProps) => {\n    return _isEqualWith(\n      a,\n      b,\n      (_value: unknown, _other: unknown, indexOrKey: unknown) => {\n        // ignore time to improve performance\n        if (indexOrKey === \"wtime\" || indexOrKey === \"btime\") {\n          return true;\n        }\n        return undefined;\n      }\n    );\n  }\n);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC, memo } from \"react\";\nimport cx from \"classnames\";\nimport { isEqualWith as _isEqualWith } from \"lodash\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport css from \"./GameControlPanelUserName.module.scss\";\nimport { ReactComponent as OnlineIcon } from \"../../assets/icons/online.svg\";\nimport { ReactComponent as OfflineIcon } from \"../../assets/icons/offline.svg\";\n\nexport interface GameControlPanelUserNameProps {\n  game?: Game;\n  color?: PieceColor;\n}\n\nexport const GameControlPanelUserName: FC<GameControlPanelUserNameProps> = memo(\n  ({ game, color = \"white\" }) => {\n    if (!game) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cx(\n          css.userNameWrapper,\n          \"d-flex\",\n          \"align-items-center\",\n          \"pl-2\"\n        )}\n      >\n        {game[color] && (\n          <span data-testid=\"connected-icon\" className=\"d-flex mr-1\">\n            {game[color]!.isOnline && (\n              <OnlineIcon\n                data-testid=\"online-icon\"\n                className={css.connectedIcon}\n                title=\"online\"\n              />\n            )}\n            {!game[color]!.isOnline && (\n              <OfflineIcon\n                data-testid=\"offline-icon\"\n                className={css.connectedIcon}\n                title=\"offline\"\n              />\n            )}\n          </span>\n        )}\n        <span data-testid=\"user-name\" className={css.userName}>\n          {game[color] ? game[color]!.fullName : `AI level ${game.aiLevel}`}\n        </span>\n      </div>\n    );\n  },\n  (a: GameControlPanelUserNameProps, b: GameControlPanelUserNameProps) => {\n    return _isEqualWith(\n      a,\n      b,\n      (_value: unknown, _other: unknown, indexOrKey: unknown) => {\n        // ignore time to improve performance\n        if (indexOrKey === \"wtime\" || indexOrKey === \"btime\") {\n          return true;\n        }\n        return undefined;\n      }\n    );\n  }\n);\n","import React, { FC, memo, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faRetweet,\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport css from \"./GameControlPanelTopToolbar.module.scss\";\n\nexport interface GameControlPanelTopToolbarProps {\n  isFirstMove?: boolean;\n  isLastMove?: boolean;\n  hasPrevMove?: boolean;\n  hasNextMove?: boolean;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n}\n\nexport const GameControlPanelTopToolbar: FC<GameControlPanelTopToolbarProps> = memo(\n  ({\n    isFirstMove = false,\n    isLastMove = false,\n    hasPrevMove = false,\n    hasNextMove = false,\n    onFlipBoard,\n    onRewindToPrevMove,\n    onRewindToNextMove,\n    onRewindToFirstMove,\n    onRewindToLastMove,\n  }) => {\n    const handleFlipBoard = useCallback(() => {\n      if (onFlipBoard) {\n        onFlipBoard();\n      }\n    }, [onFlipBoard]);\n    const handleRewindToPrevMove = useCallback(() => {\n      if (onRewindToPrevMove) {\n        onRewindToPrevMove();\n      }\n    }, [onRewindToPrevMove]);\n    const handleRewindToNextMove = useCallback(() => {\n      if (onRewindToNextMove) {\n        onRewindToNextMove();\n      }\n    }, [onRewindToNextMove]);\n    const handleRewindToFirstMove = useCallback(() => {\n      if (onRewindToFirstMove) {\n        onRewindToFirstMove();\n      }\n    }, [onRewindToFirstMove]);\n    const handleRewindToLastMove = useCallback(() => {\n      if (onRewindToLastMove) {\n        onRewindToLastMove();\n      }\n    }, [onRewindToLastMove]);\n\n    return (\n      <div className={css.buttonsWrapper}>\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"flip-board-btn\"\n          onClick={handleFlipBoard}\n        >\n          <FontAwesomeIcon icon={faRetweet} />\n          <span className=\"sr-only\">Flip board</span>\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"rewind-to-first-move-btn\"\n          onClick={handleRewindToFirstMove}\n          disabled={isFirstMove}\n        >\n          <FontAwesomeIcon icon={faAngleDoubleLeft} />\n          <span className=\"sr-only\">Rewind to first move</span>\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"rewind-to-prev-move-btn\"\n          onClick={handleRewindToPrevMove}\n          disabled={!hasPrevMove}\n        >\n          <FontAwesomeIcon icon={faAngleLeft} />\n          <span className=\"sr-only\">Rewind to prev move</span>\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"rewind-to-next-move-btn\"\n          onClick={handleRewindToNextMove}\n          disabled={!hasNextMove}\n        >\n          <FontAwesomeIcon icon={faAngleRight} />\n          <span className=\"sr-only\">Rewind to next move</span>\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"rewind-to-last-move-btn\"\n          onClick={handleRewindToLastMove}\n          disabled={isLastMove}\n        >\n          <FontAwesomeIcon icon={faAngleDoubleRight} />\n          <span className=\"sr-only\">Rewind to last move</span>\n        </Button>\n      </div>\n    );\n  }\n);\n","import React, { FC, memo, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFlag,\n  faHandshake,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Button } from \"react-bootstrap\";\nimport css from \"./GameControlPanelBottomToolbar.module.scss\";\n\nexport interface GameControlPanelBottomToolbarProps {\n  canAbortGame?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanelBottomToolbar: FC<GameControlPanelBottomToolbarProps> = memo(\n  ({\n    canAbortGame = false,\n    canOfferDraw = false,\n    canResignGame = false,\n    onAbortGame,\n    onOfferDraw,\n    onResignGame,\n  }) => {\n    const handleAbortGame = useCallback(() => {\n      if (onAbortGame) {\n        onAbortGame();\n      }\n    }, [onAbortGame]);\n    const handleOfferDraw = useCallback(() => {\n      if (onOfferDraw) {\n        onOfferDraw();\n      }\n    }, [onOfferDraw]);\n    const handleResignGame = useCallback(() => {\n      if (onResignGame) {\n        onResignGame();\n      }\n    }, [onResignGame]);\n\n    return (\n      <div className={css.buttonsWrapper}>\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"abort-game-btn\"\n          onClick={handleAbortGame}\n          disabled={!canAbortGame}\n        >\n          <FontAwesomeIcon icon={faTimes} />\n          <span className=\"sr-only\">Abort</span>\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"offer-draw-btn\"\n          onClick={handleOfferDraw}\n          disabled={!canOfferDraw}\n        >\n          <FontAwesomeIcon icon={faHandshake} />\n          <span className=\"sr-only\">Offer a draw</span>\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"link\"\n          data-testid=\"resign-game-btn\"\n          onClick={handleResignGame}\n          disabled={!canResignGame}\n        >\n          <FontAwesomeIcon icon={faFlag} />\n          <span className=\"sr-only\">Resign</span>\n        </Button>\n      </div>\n    );\n  }\n);\n","import React, { FC, useCallback } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\nimport { faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport css from \"./DrawOfferDialog.module.scss\";\n\nexport interface DrawOfferDialogProps {\n  onAccept?(): void;\n  onDecline?(): void;\n}\n\nexport const DrawOfferDialog: FC<DrawOfferDialogProps> = ({\n  onAccept,\n  onDecline,\n}) => {\n  const handleAccept = useCallback(() => {\n    if (onAccept) {\n      onAccept();\n    }\n  }, [onAccept]);\n\n  const handleDecline = useCallback(() => {\n    if (onDecline) {\n      onDecline();\n    }\n  }, [onDecline]);\n\n  return (\n    <div className={css.dialogWrapper}>\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"accept-btn\"\n        onClick={handleAccept}\n        className={css.acceptBtn}\n      >\n        <FontAwesomeIcon icon={faCheck} />\n        <span className=\"sr-only\">Accept</span>\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"link\"\n        data-testid=\"decline-btn\"\n        onClick={handleDecline}\n        className={css.declineBtn}\n      >\n        <FontAwesomeIcon icon={faTimes} />\n        <span className=\"sr-only\">Decline</span>\n      </Button>\n      <div className={css.dialogText}>Your opponent offers a draw</div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport css from \"./GameControlPanel.module.scss\";\nimport Game from \"../../interfaces/Game\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport { GameClock } from \"./GameClock\";\nimport { GameMoves } from \"./GameMoves\";\nimport { GameControlPanelUserName } from \"./GameControlPanelUserName\";\nimport { GameControlPanelTopToolbar } from \"./GameControlPanelTopToolbar\";\nimport { GameControlPanelBottomToolbar } from \"./GameControlPanelBottomToolbar\";\nimport { DrawOfferDialog } from \"./DrawOfferDialog\";\nimport { getMovesQnt } from \"../../utils/chess\";\n\nexport interface GameControlPanelProps {\n  game?: Game;\n  orientation?: PieceColor;\n  rewindToMoveIndex?: number | null;\n  canAbortGame?: boolean;\n  canDrawOffer?: boolean;\n  canOfferDraw?: boolean;\n  canResignGame?: boolean;\n  drawOfferSentByCurrentUser?: boolean;\n  drawOfferSentByOpponent?: boolean;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onRewindToMove?(moveIndex: number): void;\n  onFlipBoard?(): void;\n  onRewindToPrevMove?(): void;\n  onRewindToNextMove?(): void;\n  onRewindToFirstMove?(): void;\n  onRewindToLastMove?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n}\n\nexport const GameControlPanel: FC<GameControlPanelProps> = ({\n  game,\n  orientation = \"white\",\n  rewindToMoveIndex = null,\n  canAbortGame = false,\n  canOfferDraw = false,\n  canResignGame = false,\n  drawOfferSentByCurrentUser = false,\n  drawOfferSentByOpponent = false,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onRewindToMove,\n  onFlipBoard,\n  onRewindToPrevMove,\n  onRewindToNextMove,\n  onRewindToFirstMove,\n  onRewindToLastMove,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n}) => {\n  if (!game) {\n    return null;\n  }\n\n  const movesQnt = getMovesQnt(game);\n\n  const isFirstMove = movesQnt === 0 || rewindToMoveIndex === 0;\n\n  const isLastMove = rewindToMoveIndex === null;\n\n  const hasPrevMove = movesQnt !== 0 && rewindToMoveIndex !== 0;\n\n  const hasNextMove = rewindToMoveIndex !== null;\n\n  return (\n    <div className={css.controlPanel}>\n      <GameClock\n        time={orientation === \"white\" ? game.btime : game.wtime}\n        isRunning={game.turn !== orientation}\n      />\n      <div className={css.controlPanelInner}>\n        <GameControlPanelUserName\n          game={game}\n          color={orientation === \"white\" ? \"black\" : \"white\"}\n        />\n        <GameControlPanelTopToolbar\n          isFirstMove={isFirstMove}\n          isLastMove={isLastMove}\n          hasPrevMove={hasPrevMove}\n          hasNextMove={hasNextMove}\n          onFlipBoard={onFlipBoard}\n          onRewindToPrevMove={onRewindToPrevMove}\n          onRewindToNextMove={onRewindToNextMove}\n          onRewindToFirstMove={onRewindToFirstMove}\n          onRewindToLastMove={onRewindToLastMove}\n        />\n        <GameMoves\n          game={game}\n          rewindToMoveIndex={rewindToMoveIndex}\n          onRewindToMove={onRewindToMove}\n        />\n        {drawOfferSentByOpponent && (\n          <DrawOfferDialog\n            onAccept={onAcceptDrawOffer}\n            onDecline={onDeclineDrawOffer}\n          />\n        )}\n        {drawOfferSentByCurrentUser && (\n          <div\n            className=\"alert alert-warning text-center\"\n            role=\"alert\"\n            data-testid=\"draw-offer-sent-message\"\n          >\n            Draw offer sent\n          </div>\n        )}\n        <GameControlPanelBottomToolbar\n          canAbortGame={canAbortGame}\n          canOfferDraw={canOfferDraw}\n          canResignGame={canResignGame}\n          onAbortGame={onAbortGame}\n          onOfferDraw={onOfferDraw}\n          onResignGame={onResignGame}\n        />\n        <GameControlPanelUserName\n          game={game}\n          color={orientation === \"white\" ? \"white\" : \"black\"}\n        />\n      </div>\n      <GameClock\n        time={orientation === \"white\" ? game.wtime : game.btime}\n        isRunning={game.turn === orientation}\n      />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC, useCallback } from \"react\";\nimport Game from \"../../interfaces/Game\";\nimport { GameControlPanel } from \"./GameControlPanel\";\nimport User from \"../../interfaces/User\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport { getMovesQnt } from \"../../utils/chess\";\n\nexport interface SingleGameControlPanelWrapperProps {\n  game?: Game;\n  currentUser?: User;\n  isFlipped?: boolean;\n  rewindToMoveIndex?: number | null;\n  onFlipBoard?(): void;\n  onAcceptDrawOffer?(): void;\n  onDeclineDrawOffer?(): void;\n  onAbortGame?(): void;\n  onOfferDraw?(): void;\n  onResignGame?(): void;\n  onRewindToMove?(moveIndex: number | null): void;\n}\n\nexport const GameControlPanelWrapper: FC<SingleGameControlPanelWrapperProps> = ({\n  game,\n  currentUser,\n  isFlipped = false,\n  rewindToMoveIndex = null,\n  onFlipBoard,\n  onAcceptDrawOffer,\n  onDeclineDrawOffer,\n  onAbortGame,\n  onOfferDraw,\n  onResignGame,\n  onRewindToMove,\n}) => {\n  const gameMoves: string | null = game ? game.moves : null;\n\n  const handleRewindToMove = useCallback(\n    (moveIndex: number) => {\n      const movesQnt = getMovesQnt({\n        moves: gameMoves!,\n      });\n\n      if (onRewindToMove) {\n        if (moveIndex === movesQnt) {\n          onRewindToMove(null);\n        } else {\n          onRewindToMove(moveIndex);\n        }\n      }\n    },\n    [gameMoves, onRewindToMove]\n  );\n\n  const handleRewindToFirstMove = useCallback(() => {\n    if (onRewindToMove) {\n      onRewindToMove(0);\n    }\n  }, [onRewindToMove]);\n\n  const handleRewindToLastMove = useCallback(() => {\n    if (onRewindToMove) {\n      onRewindToMove(null);\n    }\n  }, [onRewindToMove]);\n\n  const handleRewindToPrevMove = useCallback(() => {\n    const movesQnt = getMovesQnt({\n      moves: gameMoves!,\n    });\n\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === null) {\n        onRewindToMove(movesQnt - 1);\n      } else {\n        onRewindToMove(rewindToMoveIndex - 1);\n      }\n    }\n  }, [gameMoves, onRewindToMove, rewindToMoveIndex]);\n\n  const handleRewindToNextMove = useCallback(() => {\n    const movesQnt = getMovesQnt({\n      moves: gameMoves!,\n    });\n\n    if (onRewindToMove) {\n      if (rewindToMoveIndex === movesQnt - 1) {\n        onRewindToMove(null);\n      } else {\n        onRewindToMove((rewindToMoveIndex as number) + 1);\n      }\n    }\n  }, [gameMoves, onRewindToMove, rewindToMoveIndex]);\n\n  if (!game) {\n    return null;\n  }\n\n  const movesQnt = getMovesQnt(game);\n\n  let orientation: PieceColor = \"white\";\n  if (currentUser && currentUser.id === game.black?.id) {\n    orientation = \"black\";\n  }\n  if (isFlipped) {\n    orientation = orientation === \"white\" ? \"black\" : \"white\";\n  }\n\n  let playerPiecesColor: PieceColor | null = null;\n  if (currentUser) {\n    if (currentUser.id === game.white?.id) {\n      playerPiecesColor = \"white\";\n    } else if (currentUser.id === game.black?.id) {\n      playerPiecesColor = \"black\";\n    }\n  }\n\n  let drawOfferSentByCurrentUser = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer === playerPiecesColor\n  ) {\n    drawOfferSentByCurrentUser = true;\n  }\n\n  let drawOfferSentByOpponent = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    game.drawOffer !== null &&\n    game.drawOffer !== playerPiecesColor\n  ) {\n    drawOfferSentByOpponent = true;\n  }\n\n  let canAbortGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesQnt < 2\n  ) {\n    canAbortGame = true;\n  }\n\n  let canResignGame = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.status === \"started\" &&\n    movesQnt > 1\n  ) {\n    canResignGame = true;\n  }\n\n  let canOfferDraw = false;\n  if (\n    currentUser &&\n    (currentUser.id === game.white?.id || currentUser.id === game.black?.id) &&\n    game.drawOffer === null &&\n    game.aiLevel === 0 &&\n    game.status === \"started\" &&\n    movesQnt > 1\n  ) {\n    canOfferDraw = true;\n  }\n\n  return (\n    <GameControlPanel\n      game={game}\n      orientation={orientation}\n      rewindToMoveIndex={rewindToMoveIndex}\n      canAbortGame={canAbortGame}\n      canResignGame={canResignGame}\n      canOfferDraw={canOfferDraw}\n      drawOfferSentByCurrentUser={drawOfferSentByCurrentUser}\n      drawOfferSentByOpponent={drawOfferSentByOpponent}\n      onAcceptDrawOffer={onAcceptDrawOffer}\n      onDeclineDrawOffer={onDeclineDrawOffer}\n      onFlipBoard={onFlipBoard}\n      onAbortGame={onAbortGame}\n      onOfferDraw={onOfferDraw}\n      onResignGame={onResignGame}\n      onRewindToMove={handleRewindToMove}\n      onRewindToFirstMove={handleRewindToFirstMove}\n      onRewindToLastMove={handleRewindToLastMove}\n      onRewindToPrevMove={handleRewindToPrevMove}\n      onRewindToNextMove={handleRewindToNextMove}\n    />\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport {\n  useDeepEqualSelector,\n  useShallowEqualSelector,\n} from \"ii-react-libraries\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { GameControlPanelWrapper } from \"./GameControlPanelWrapper\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport {\n  abortGame,\n  acceptDrawOffer,\n  declineDrawOffer,\n  defaultSingleGameItemState,\n  flipBoard,\n  offerDraw,\n  resignGame,\n  rewindToMove,\n} from \"./singleGameSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nexport interface SingleGameControlPanelContainerProps {\n  id: number;\n}\n\nexport const GameControlPanelContainer: FC<SingleGameControlPanelContainerProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useDeepEqualSelector((state: RootState) =>\n    denormalize(id, gameSchema, state.entities)\n  );\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  const currentUser: User | undefined = useShallowEqualSelector(\n    (state: RootState) => {\n      if (state.currentUser.userId) {\n        return denormalize(\n          state.currentUser.userId,\n          userSchema,\n          state.entities\n        );\n      }\n      return undefined;\n    }\n  );\n\n  const handleFlipBoard = useCallback(() => {\n    dispatch(flipBoard(id));\n  }, [dispatch, id]);\n\n  const handleAbortGame = useCallback(() => {\n    dispatch(abortGame(id));\n  }, [dispatch, id]);\n\n  const handleAcceptDrawOffer = useCallback(() => {\n    dispatch(acceptDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleDeclineDrawOffer = useCallback(() => {\n    dispatch(declineDrawOffer(id));\n  }, [dispatch, id]);\n\n  const handleResignGame = useCallback(() => {\n    dispatch(resignGame(id));\n  }, [dispatch, id]);\n\n  const handleOfferDraw = useCallback(() => {\n    dispatch(offerDraw(id));\n  }, [dispatch, id]);\n\n  const handleRewindToMove = useCallback(\n    (moveIndex: number | null) => {\n      dispatch(\n        rewindToMove({\n          moveIndex,\n          gameId: id,\n        })\n      );\n    },\n    [dispatch, id]\n  );\n\n  if (game) {\n    return (\n      <GameControlPanelWrapper\n        game={game}\n        currentUser={currentUser}\n        isFlipped={singleGameItemState.isFlipped}\n        rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n        onFlipBoard={handleFlipBoard}\n        onAbortGame={handleAbortGame}\n        onAcceptDrawOffer={handleAcceptDrawOffer}\n        onDeclineDrawOffer={handleDeclineDrawOffer}\n        onOfferDraw={handleOfferDraw}\n        onResignGame={handleResignGame}\n        onRewindToMove={handleRewindToMove}\n      />\n    );\n  }\n  return null;\n};\n","import React, { FC } from \"react\";\nimport classNames from \"classnames\";\nimport { Modal } from \"react-bootstrap\";\nimport { PieceType } from \"chess.js\";\nimport { PieceColor } from \"../../types/PieceColor\";\nimport css from \"./PromotionChoiceModal.module.scss\";\n\nexport interface PromotionChoiceModalProps {\n  show?: boolean;\n  turnColor?: PieceColor;\n  onPromotion?: (promotionPiece: Exclude<PieceType, \"p\">) => void;\n}\n\nexport const PromotionChoiceModal: FC<PromotionChoiceModalProps> = ({\n  show = false,\n  turnColor = \"white\",\n  onPromotion,\n}) => {\n  const makePromotionHandler = (promotionPiece: Exclude<PieceType, \"p\">) => {\n    return () => {\n      if (onPromotion) {\n        onPromotion(promotionPiece);\n      }\n    };\n  };\n\n  return (\n    <Modal show={show} animation={false} backdrop=\"static\">\n      <Modal.Body>\n        <div style={{ textAlign: \"center\", cursor: \"pointer\" }}>\n          <span\n            data-testid=\"promotion-q\"\n            role=\"presentation\"\n            onClick={makePromotionHandler(\"q\")}\n          >\n            <div\n              className={classNames(css.piece, {\n                [css.wQ]: turnColor === \"white\",\n                [css.bQ]: turnColor === \"black\",\n              })}\n            />\n          </span>\n          <span\n            data-testid=\"promotion-r\"\n            role=\"presentation\"\n            onClick={makePromotionHandler(\"r\")}\n          >\n            <div\n              className={classNames(css.piece, {\n                [css.wR]: turnColor === \"white\",\n                [css.bR]: turnColor === \"black\",\n              })}\n            />\n          </span>\n          <span\n            data-testid=\"promotion-b\"\n            role=\"presentation\"\n            onClick={makePromotionHandler(\"b\")}\n          >\n            <div\n              className={classNames(css.piece, {\n                [css.wB]: turnColor === \"white\",\n                [css.bB]: turnColor === \"black\",\n              })}\n            />\n          </span>\n          <span\n            data-testid=\"promotion-n\"\n            role=\"presentation\"\n            onClick={makePromotionHandler(\"n\")}\n          >\n            <div\n              className={classNames(css.piece, {\n                [css.wN]: turnColor === \"white\",\n                [css.bN]: turnColor === \"black\",\n              })}\n            />\n          </span>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\nimport {\n  Board,\n  getValidMoves,\n  isValidMove,\n  Move,\n  PieceColor,\n  ValidMoves,\n} from \"ii-react-chessboard\";\nimport { ChessInstance, PieceType, ShortMove, Square } from \"chess.js\";\nimport Game from \"../../interfaces/Game\";\nimport makeChessInstance from \"../../utils/makeChessInstance\";\nimport User from \"../../interfaces/User\";\nimport css from \"./SingleGameBoard.module.scss\";\nimport { ContentLoadingStatus } from \"../../components/ContentLoadingStatus\";\nimport GameStatus from \"../../types/GameStatus\";\nimport {\n  playEndGameSound,\n  playMoveSound,\n  playStartGameSound,\n} from \"../../utils/sounds\";\nimport { getMovesQnt, isPromotionMove } from \"../../utils/chess\";\nimport { PromotionChoiceModal } from \"./PromotionChoiceModal\";\n\nexport interface SingleGameBoardProps {\n  currentUser?: User;\n  game?: Game;\n  isFlipped?: boolean;\n  onMove?(move: ShortMove): void;\n  rewindToMoveIndex?: number | null;\n  isLoading?: boolean;\n  error?: string | null;\n}\n\nexport const SingleGameBoard: FC<SingleGameBoardProps> = ({\n  currentUser,\n  game,\n  isFlipped = false,\n  onMove,\n  rewindToMoveIndex = null,\n  isLoading = false,\n  error = null,\n}) => {\n  const premove = useRef<[Move, () => void, () => void] | null>(null);\n\n  // @todo. test useEffect\n  const lastStatus = useRef<GameStatus | null>(null);\n  useEffect(() => {\n    if (!game) {\n      return;\n    }\n\n    if (lastStatus.current === \"started\" && game.status !== \"started\") {\n      playEndGameSound();\n    }\n    lastStatus.current = game.status;\n  }, [game, lastStatus]);\n\n  // cancel premove if game is over or if we rewind moves\n  // @todo. test useEffect\n  useEffect(() => {\n    if (!game) {\n      return;\n    }\n\n    if (\n      premove.current &&\n      (game.status !== \"started\" || rewindToMoveIndex !== null)\n    ) {\n      premove.current[2](); // cancelPremove()\n    }\n  }, [game, rewindToMoveIndex]);\n\n  // @todo. test useEffect\n  const lastSelectedMoveIndex = useRef<number | null>(null);\n  useEffect(() => {\n    if (!game) {\n      return;\n    }\n\n    const movesQnt = getMovesQnt(game);\n\n    if (lastSelectedMoveIndex.current === null && movesQnt === 0) {\n      playStartGameSound();\n    }\n\n    const selectedMoveIndex =\n      rewindToMoveIndex === null ? movesQnt : rewindToMoveIndex;\n\n    if (\n      lastSelectedMoveIndex.current !== null &&\n      selectedMoveIndex === lastSelectedMoveIndex.current + 1\n    ) {\n      playMoveSound();\n    }\n\n    lastSelectedMoveIndex.current = selectedMoveIndex;\n  }, [game, lastSelectedMoveIndex, rewindToMoveIndex]);\n\n  // play premove\n  // @todo. test useEffect\n  const lastMovesQnt = useRef<number | null>(null);\n  useEffect(() => {\n    if (!game) {\n      return;\n    }\n\n    const movesQnt = getMovesQnt(game);\n\n    if (\n      premove.current &&\n      lastMovesQnt.current !== null &&\n      movesQnt === lastMovesQnt.current + 1 &&\n      game.status === \"started\" &&\n      rewindToMoveIndex === null\n    ) {\n      const chess: ChessInstance = makeChessInstance(game);\n\n      if (isValidMove(chess, premove.current[0])) {\n        premove.current[1](); // playPremove()\n        premove.current = null;\n      } else {\n        premove.current[2](); // cancelPremove()\n      }\n    }\n\n    lastMovesQnt.current = movesQnt;\n  }, [game, lastMovesQnt, rewindToMoveIndex]);\n\n  const handleSetPremove = useCallback(\n    (move: Move, playPremove: () => void, cancelPremove: () => void) => {\n      premove.current = [move, playPremove, cancelPremove];\n    },\n    [premove]\n  );\n\n  const handleUnsetPremove = useCallback(() => {\n    premove.current = null;\n  }, [premove]);\n\n  const [showPromotionChoice, setShowPromotionChoice] = useState<boolean>(\n    false\n  );\n\n  // @todo. test useEffect\n  useEffect(() => {\n    if (!game) {\n      return;\n    }\n\n    if (showPromotionChoice && game.status !== \"started\") {\n      setShowPromotionChoice(false);\n    }\n  }, [showPromotionChoice, game]);\n\n  const promotionMove = useRef<Move | null>(null);\n\n  const handleMove = useCallback(\n    (move: Move) => {\n      if (!onMove) {\n        return;\n      }\n\n      if (isPromotionMove(game!, move)) {\n        setShowPromotionChoice(true);\n        promotionMove.current = move;\n      } else {\n        onMove(move as ShortMove);\n      }\n    },\n    [onMove, game]\n  );\n\n  const handlePromotion = useCallback(\n    (promotionPiece: Exclude<PieceType, \"p\">): void => {\n      setShowPromotionChoice(false);\n\n      const chess: ChessInstance = makeChessInstance(game!);\n\n      if (\n        onMove &&\n        promotionMove.current &&\n        isValidMove(chess, promotionMove.current)\n      ) {\n        const move: ShortMove = {\n          from: promotionMove.current.from as Square,\n          to: promotionMove.current.to as Square,\n          promotion: promotionPiece,\n        };\n        onMove(move);\n      }\n    },\n    [onMove, game]\n  );\n\n  let boardContent = null;\n\n  if (game) {\n    const chessWithAllMoves: ChessInstance = makeChessInstance(game);\n\n    const chess =\n      rewindToMoveIndex === null\n        ? chessWithAllMoves\n        : makeChessInstance(game, rewindToMoveIndex);\n\n    const fen: string = chess.fen();\n\n    const check: boolean = chess.in_check();\n\n    const turnColor: PieceColor = game.turn;\n\n    const validMoves: ValidMoves = getValidMoves(chess);\n\n    let viewOnly = true;\n    if (\n      currentUser &&\n      (currentUser.id === game.white?.id ||\n        currentUser.id === game.black?.id) &&\n      game.status === \"started\" &&\n      rewindToMoveIndex === null\n    ) {\n      viewOnly = false;\n    }\n\n    let movableColor: PieceColor | undefined;\n    if (currentUser && currentUser.id === game.white?.id) {\n      movableColor = \"white\";\n    }\n    if (currentUser && currentUser.id === game.black?.id) {\n      movableColor = \"black\";\n    }\n\n    let orientation: PieceColor = \"white\";\n    if (currentUser && currentUser.id === game.black?.id) {\n      orientation = \"black\";\n    }\n    if (isFlipped) {\n      orientation = orientation === \"white\" ? \"black\" : \"white\";\n    }\n\n    const movesHistory = chessWithAllMoves.history({ verbose: true });\n\n    let lastMoveSquares: string[] | undefined;\n    if (rewindToMoveIndex === null) {\n      if (movesHistory.length) {\n        const lastMove = movesHistory[movesHistory.length - 1];\n        lastMoveSquares = [lastMove.from, lastMove.to];\n      }\n    } else if (rewindToMoveIndex > 0) {\n      const lastMove = movesHistory[rewindToMoveIndex - 1];\n      lastMoveSquares = [lastMove.from, lastMove.to];\n    }\n\n    boardContent = (\n      <>\n        <PromotionChoiceModal\n          show={showPromotionChoice}\n          turnColor={game.turn}\n          onPromotion={handlePromotion}\n        />\n        <div className={css.singleGameBoard}>\n          <Board\n            allowMarkers\n            check={check}\n            clickable\n            draggable\n            lastMoveSquares={lastMoveSquares}\n            movableColor={movableColor}\n            onMove={handleMove}\n            onSetPremove={handleSetPremove}\n            onUnsetPremove={handleUnsetPremove}\n            orientation={orientation}\n            position={fen}\n            premovable\n            turnColor={turnColor}\n            validMoves={validMoves}\n            viewOnly={viewOnly}\n          />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <ContentLoadingStatus\n        isLoading={isLoading}\n        error={error}\n        isEmpty={!game}\n      />\n      {boardContent}\n    </div>\n  );\n};\n","export const playStartGameSound = (): void => {\n  const audio = new Audio(\n    \"https://lichess1.org/assets/_Iu1lae/sound/standard/GenericNotify.ogg\"\n  );\n\n  // sometimes if I reload page in browser I get this error:\n  // \"play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD \"\n  // This is why we use catch(() => {})\n  audio.play().catch(() => {});\n};\n\nexport const playEndGameSound = (): void => {\n  const audio = new Audio(\n    \"https://lichess1.org/assets/_Iu1lae/sound/standard/GenericNotify.ogg\"\n  );\n  audio.play();\n};\n\nexport const playMoveSound = (): void => {\n  const audio = new Audio(\n    \"https://lichess1.org/assets/sound/standard/Move.ogg\"\n  );\n  audio.play();\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ShortMove } from \"chess.js\";\nimport { denormalize } from \"normalizr\";\nimport {\n  useDeepEqualSelector,\n  useShallowEqualSelector,\n} from \"ii-react-libraries\";\nimport { RootState } from \"../../app/rootReducer\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport { SingleGameBoard } from \"./SingleGameBoard\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { defaultSingleGameItemState } from \"./singleGameSlice\";\nimport { makeMove } from \"../move/moveSlice\";\nimport { AppDispatch } from \"../../app/store\";\n\nexport interface SingleGameBoardProps {\n  id: number;\n}\n\nexport const SingleGameBoardContainer: FC<SingleGameBoardProps> = ({ id }) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const game = useDeepEqualSelector(\n    (state: RootState) => denormalize(id, gameSchema, state.entities),\n    (_value: unknown, _other: unknown, indexOrKey: unknown) => {\n      // ignore time to improve performance\n      if (indexOrKey === \"wtime\" || indexOrKey === \"btime\") {\n        return true;\n      }\n      return undefined;\n    }\n  );\n\n  const currentUser: User | undefined = useShallowEqualSelector(\n    (state: RootState) => {\n      if (state.currentUser.userId) {\n        return denormalize(\n          state.currentUser.userId,\n          userSchema,\n          state.entities\n        );\n      }\n      return undefined;\n    }\n  );\n\n  const singleGameItemState =\n    useSelector((state: RootState) => state.singleGame[id]) ||\n    defaultSingleGameItemState;\n\n  const handleMove = useCallback(\n    (move: ShortMove) => {\n      dispatch(makeMove(id, `${move.from}${move.to}${move.promotion || \"\"}`));\n    },\n    [dispatch, id]\n  );\n\n  return (\n    <SingleGameBoard\n      game={game}\n      currentUser={currentUser}\n      isFlipped={singleGameItemState.isFlipped}\n      rewindToMoveIndex={singleGameItemState.rewindToMoveIndex}\n      onMove={handleMove}\n      isLoading={singleGameItemState.isLoading}\n      error={singleGameItemState.error}\n    />\n  );\n};\n","import React, { FC } from \"react\";\nimport cx from \"classnames\";\nimport { ChatMessage } from \"../../interfaces/ChatMessage\";\nimport css from \"./ChatMessagesListItem.module.scss\";\n\nexport interface ChatMessagesListItemProps {\n  message?: ChatMessage;\n  currentUserId?: number | null;\n}\n\nexport const ChatMessagesListItem: FC<ChatMessagesListItemProps> = ({\n  message,\n  currentUserId = null,\n}) => {\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"message-wrapper\"\n      className={cx(css.messageWrapper, {\n        [css.currentUserMessage]: message.createdBy.id === currentUserId,\n      })}\n    >\n      <span data-testid=\"user-name\" className={css.userName}>\n        {message.createdBy.fullName}\n      </span>\n      <span data-testid=\"message-text\" className={css.messageText}>\n        {message.text}\n      </span>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useRef } from \"react\";\nimport { ChatMessage } from \"../../interfaces/ChatMessage\";\nimport { ChatMessagesListItem } from \"./ChatMessagesListItem\";\nimport { ContentLoadingStatus } from \"../../components/ContentLoadingStatus\";\nimport css from \"./ChatMessagesList.module.scss\";\n\nexport interface ChatMessagesListProps {\n  currentUserId?: number | null;\n  messages?: ChatMessage[];\n  isLoading?: boolean;\n  error?: string | null;\n}\n\nexport const ChatMessagesList: FC<ChatMessagesListProps> = ({\n  currentUserId = null,\n  messages = [],\n  isLoading = false,\n  error = null,\n}) => {\n  const scrollElementRef = useRef<HTMLDivElement>(null);\n  const lastMovesQnt = useRef<number>(0);\n\n  // @todo. add unit test\n  useEffect(() => {\n    if (lastMovesQnt.current !== messages.length) {\n      if (scrollElementRef.current) {\n        scrollElementRef.current.scrollTop =\n          scrollElementRef.current.scrollHeight;\n      }\n    }\n    lastMovesQnt.current = messages.length;\n  }, [scrollElementRef, messages]);\n\n  return (\n    <div className={css.chatMessages} ref={scrollElementRef}>\n      <ContentLoadingStatus\n        isLoading={isLoading}\n        error={error}\n        isEmpty={messages.length === 0}\n        showEmptyContentMessage={false}\n      />\n      <div>\n        {messages.map((item) => (\n          <ChatMessagesListItem\n            currentUserId={currentUserId}\n            message={item}\n            key={item.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { denormalize } from \"normalizr\";\nimport { useDeepEqualSelector } from \"ii-react-libraries\";\nimport { RootState } from \"../../app/rootReducer\";\nimport chatMessageSchema from \"../../normalizr/schemas/chatMessageSchema\";\nimport { defaultGameChatMessagesState } from \"./chatSlice\";\nimport { ChatMessagesList } from \"./ChatMessagesList\";\n\nexport interface ChatMessagesListContainerProps {\n  gameId: number;\n}\n\nexport const ChatMessagesListContainer: FC<ChatMessagesListContainerProps> = ({\n  gameId,\n}) => {\n  const currentUserId = useSelector(\n    (state: RootState) => state.currentUser.userId\n  );\n\n  const messages = useDeepEqualSelector((state: RootState) =>\n    state.chat[gameId]\n      ? denormalize(\n          state.chat[gameId].items,\n          [chatMessageSchema],\n          state.entities\n        )\n      : defaultGameChatMessagesState.items\n  );\n  const isLoading = useSelector((state: RootState) =>\n    state.chat[gameId]\n      ? state.chat[gameId].isLoading\n      : defaultGameChatMessagesState.isLoading\n  );\n  const error = useSelector((state: RootState) =>\n    state.chat[gameId]\n      ? state.chat[gameId].error\n      : defaultGameChatMessagesState.error\n  );\n\n  return (\n    <ChatMessagesList\n      messages={messages}\n      isLoading={isLoading}\n      error={error}\n      currentUserId={currentUserId}\n    />\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { Button, Form, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport css from \"./PostChatMessageForm.module.scss\";\n\nexport interface PostChatMessageFormData {\n  text: string;\n}\n\nexport interface PostChatMessageFormProps {\n  onSubmit?(\n    values: PostChatMessageFormData,\n    formikHelpers: FormikHelpers<PostChatMessageFormData>\n  ): void | Promise<any>;\n}\n\nexport const PostChatMessageForm: FC<PostChatMessageFormProps> = ({\n  onSubmit,\n}) => {\n  return (\n    <Formik\n      initialValues={{\n        text: \"\",\n      }}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(\n            values as PostChatMessageFormData,\n            formikHelpers as FormikHelpers<PostChatMessageFormData>\n          );\n        }\n        return undefined;\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        setStatus,\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          <div className=\"d-flex\">\n            <div className=\"flex-grow-1 mr-2\">\n              <Form.Control\n                className={css.textInput}\n                name=\"text\"\n                autoComplete=\"off\"\n                placeholder=\"Please be nice in the chat!\"\n                onBlur={handleBlur}\n                value={values.text}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <Button\n                disabled={isSubmitting || values.text === \"\"}\n                type=\"submit\"\n              >\n                {isSubmitting && (\n                  <Spinner\n                    animation=\"border\"\n                    data-testid=\"submit-btn-spinner\"\n                    size=\"sm\"\n                    className=\"mr-2\"\n                  >\n                    <span className=\"sr-only\">Sending...</span>\n                  </Spinner>\n                )}\n                <FontAwesomeIcon icon={faPaperPlane} />\n                <span className=\"sr-only\">Offer a draw</span>\n              </Button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { FormikHelpers } from \"formik\";\nimport React, { FC, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport {\n  PostChatMessageForm,\n  PostChatMessageFormData,\n} from \"./PostChatMessageForm\";\nimport { createChatMessage } from \"./chatSlice\";\n\nexport interface PostChatMessageFormContainerProps {\n  gameId: number;\n}\n\nexport const PostChatMessageFormContainer: FC<PostChatMessageFormContainerProps> = ({\n  gameId,\n}) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleSubmit = useCallback(\n    (\n      values: PostChatMessageFormData,\n      formikHelpers: FormikHelpers<PostChatMessageFormData>\n    ) => {\n      formikHelpers.resetForm();\n\n      return dispatch(createChatMessage(gameId, values.text));\n    },\n    [dispatch, gameId]\n  );\n\n  return <PostChatMessageForm onSubmit={handleSubmit} />;\n};\n","import React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { ChatMessagesListContainer } from \"./ChatMessagesListContainer\";\nimport { PostChatMessageFormContainer } from \"./PostChatMessageFormContainer\";\n\nexport interface ChatProps {\n  gameId: number;\n}\n\nexport const Chat: FC<ChatProps> = ({ gameId }) => {\n  return (\n    <Card>\n      <Card.Header className=\"p-2\">Chat room</Card.Header>\n      <Card.Body className=\"p-2\">\n        <ChatMessagesListContainer gameId={gameId} />\n      </Card.Body>\n      <Card.Footer className=\"p-2\">\n        <PostChatMessageFormContainer gameId={gameId} />\n      </Card.Footer>\n    </Card>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { GameMetaContainer } from \"./GameMetaContainer\";\nimport { GameControlPanelContainer } from \"./GameControlPanelContainer\";\nimport { SingleGameBoardContainer } from \"./SingleGameBoardContainer\";\nimport { fetchGame } from \"./singleGameSlice\";\nimport { AppDispatch } from \"../../app/store\";\nimport { Chat } from \"../chat/Chat\";\nimport { fetchChatMessages } from \"../chat/chatSlice\";\n\ninterface GamePageParams {\n  id: string;\n}\n\nconst GamePage: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { id } = useParams<GamePageParams>();\n\n  const idAsNumber = Number(id);\n\n  useEffect(() => {\n    dispatch(fetchGame(idAsNumber));\n    dispatch(fetchChatMessages(idAsNumber));\n  }, [dispatch, idAsNumber]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-3\">\n        <GameMetaContainer id={idAsNumber} />\n\n        <Chat gameId={idAsNumber} />\n      </div>\n      <div className=\"col-6\">\n        <SingleGameBoardContainer id={idAsNumber} />\n      </div>\n      <div className=\"col-3\">\n        <GameControlPanelContainer id={idAsNumber} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n","import React, { FC, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport User from \"../../interfaces/User\";\n\nexport interface HeaderProps {\n  currentUser?: User | null;\n  onLogout?(): void;\n  onShowAuthModal?(): void;\n}\n\nexport const Header: FC<HeaderProps> = ({\n  currentUser = null,\n  onLogout,\n  onShowAuthModal,\n}) => {\n  const handleLogout = useCallback(() => {\n    if (onLogout) {\n      onLogout();\n    }\n  }, [onLogout]);\n\n  const handleShowAuthModal = useCallback(() => {\n    if (onShowAuthModal) {\n      onShowAuthModal();\n    }\n  }, [onShowAuthModal]);\n\n  return (\n    <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n      <div className=\"offset-4 col-4 text-center\">\n        <Link className=\"blog-header-logo text-dark\" to=\"/\">\n          Chess PWA\n        </Link>\n      </div>\n      <div className=\"col-4 d-flex justify-content-end align-items-center\">\n        {currentUser ? (\n          <>\n            <div className=\"mr-3\">Hi, {currentUser.fullName}</div>\n            <Button\n              className=\"btn btn-sm btn-danger mr-3\"\n              data-testid=\"logout-btn\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </>\n        ) : (\n          <Button\n            className=\"btn btn-sm btn-success mr-3\"\n            data-testid=\"login-btn\"\n            onClick={handleShowAuthModal}\n          >\n            Login / Register\n          </Button>\n        )}\n\n        <a\n          href=\"https://github.com/ildar-icoosoft/chess-pwa\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/imgs/GitHub-Mark-32px.png`}\n            alt=\"\"\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { denormalize } from \"normalizr\";\nimport { useDispatch } from \"react-redux\";\nimport { useShallowEqualSelector } from \"ii-react-libraries\";\nimport { Header } from \"./Header\";\nimport User from \"../../interfaces/User\";\nimport { RootState } from \"../../app/rootReducer\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\nimport { logout } from \"../current-user/currentUserSlice\";\nimport { showModal } from \"../modal/modalSlice\";\n\nconst HeaderContainer: FC<unknown> = () => {\n  const currentUser: User | null = useShallowEqualSelector(\n    (state: RootState) => {\n      if (state.currentUser.userId) {\n        return denormalize(\n          state.currentUser.userId,\n          userSchema,\n          state.entities\n        );\n      }\n      return null;\n    }\n  );\n\n  const dispatch = useDispatch();\n\n  const handleLogout = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  const handleShowAuthModal = useCallback(() => {\n    dispatch(\n      showModal({\n        name: \"auth\",\n        allowClose: true,\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <Header\n      currentUser={currentUser}\n      onLogout={handleLogout}\n      onShowAuthModal={handleShowAuthModal}\n    />\n  );\n};\n\nexport default HeaderContainer;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport LoginData from \"../../interfaces/LoginData\";\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n});\n\nexport interface LoginFormProps {\n  onSubmit?(\n    values: LoginData,\n    formikHelpers: FormikHelpers<LoginData>\n  ): void | Promise<any>;\n}\n\nexport const LoginForm: FC<LoginFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={loginSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as LoginData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Login\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport React, { FC, FormEvent } from \"react\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport * as Yup from \"yup\";\nimport { FormikHelpers } from \"formik/dist/types\";\n\nconst registrationSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: Yup.string()\n    .min(6, \"Password length must be >= 6\")\n    .required(\"Required\"),\n  confirmPassword: Yup.string()\n    .equals([Yup.ref(\"password\")], \"Please repeat the password\")\n    .required(\"Required\"),\n});\n\nexport interface RegistrationFormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nexport interface RegistrationFormProps {\n  onSubmit?(\n    values: RegistrationFormData,\n    formikHelpers: FormikHelpers<RegistrationFormData>\n  ): void | Promise<any>;\n}\n\nexport const RegistrationForm: FC<RegistrationFormProps> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        fullName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={registrationSchema}\n      onSubmit={(values, formikHelpers): Promise<any> | void => {\n        if (onSubmit) {\n          return onSubmit(values as RegistrationFormData, formikHelpers);\n        }\n        return undefined;\n      }}\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        status,\n        setStatus,\n        /* and other goodies */\n      }) => (\n        <Form\n          noValidate\n          onSubmit={(e) => handleSubmit(e as FormEvent<HTMLFormElement>)}\n          onChange={() => setStatus(\"\")}\n        >\n          {!!status && <Alert variant=\"danger\">{status}</Alert>}\n\n          <Form.Group>\n            <Form.Label>Full name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"fullName\"\n              placeholder=\"Enter full name\"\n              onBlur={handleBlur}\n              value={values.fullName}\n              onChange={handleChange}\n              isValid={touched.fullName && !errors.fullName}\n              isInvalid={touched.fullName && !!errors.fullName}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.fullName}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onBlur={handleBlur}\n              value={values.email}\n              onChange={handleChange}\n              isValid={touched.email && !errors.email}\n              isInvalid={touched.email && !!errors.email}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.email}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              isValid={touched.password && !errors.password}\n              isInvalid={touched.password && !!errors.password}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.password}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.confirmPassword}\n              isValid={touched.confirmPassword && !errors.confirmPassword}\n              isInvalid={touched.confirmPassword && !!errors.confirmPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.confirmPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n            Register\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { FormikHelpers } from \"formik\";\nimport { LoginForm } from \"./LoginForm\";\nimport { RegistrationForm, RegistrationFormData } from \"./RegistrationForm\";\nimport LoginData from \"../../interfaces/LoginData\";\nimport { login, register } from \"../current-user/currentUserSlice\";\nimport { AppDispatch } from \"../../app/store\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\nconst LoginTabsContainer: FC<unknown> = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const doLogin = React.useCallback(\n    (values: LoginData, formikHelpers: FormikHelpers<LoginData>) => {\n      return dispatch(login(values)).catch((err) => {\n        formikHelpers.setStatus(getErrorMessageFromJWR(err));\n      });\n    },\n    [dispatch]\n  );\n\n  const doSignUp = React.useCallback(\n    (\n      values: RegistrationFormData,\n      formikHelpers: FormikHelpers<RegistrationFormData>\n    ) => {\n      return dispatch(\n        register({\n          fullName: values.fullName,\n          email: values.email,\n          password: values.password,\n        })\n      ).catch((err) => {\n        formikHelpers.setStatus(getErrorMessageFromJWR(err));\n      });\n    },\n    [dispatch]\n  );\n\n  return (\n    <Tabs transition={false}>\n      <Tab eventKey=\"home\" title=\"Login\">\n        <LoginForm onSubmit={doLogin} />\n      </Tab>\n      <Tab eventKey=\"profile\" title=\"Register\">\n        <RegistrationForm onSubmit={doSignUp} />\n      </Tab>\n    </Tabs>\n  );\n};\n\nexport default LoginTabsContainer;\n","import React, { FC } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport LoginTabsContainer from \"./LoginTabsContainer\";\n\nexport interface AuthModalProps {\n  show?: boolean;\n  onHide?(): void;\n}\n\nexport const AuthModal: FC<AuthModalProps> = ({ show = false, onHide }) => {\n  return (\n    <div>\n      <Modal show={show} onHide={onHide} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <LoginTabsContainer />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AuthModal } from \"./AuthModal\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideModal } from \"../modal/modalSlice\";\n\nconst AuthModalContainer: FC<unknown> = () => {\n  const isModalVisible = useSelector(\n    (state: RootState) => state.modal.showModal === \"auth\"\n  );\n\n  const dispatch = useDispatch();\n\n  const handleHide = useCallback(() => {\n    dispatch(hideModal());\n  }, [dispatch]);\n\n  return <AuthModal show={isModalVisible} onHide={handleHide} />;\n};\n\nexport default AuthModalContainer;\n","/* eslint-disable react/no-array-index-key */\n\nimport React, { FC, useCallback } from \"react\";\nimport { Toast } from \"react-bootstrap\";\nimport { Message } from \"../../interfaces/Message\";\nimport css from \"./Messages.module.scss\";\n\nexport interface MessagesProps {\n  items?: Message[];\n  onHideMessage?(messageId: string): void;\n}\n\nexport const Messages: FC<MessagesProps> = ({ items = [], onHideMessage }) => {\n  const makeHideMessageHandler = useCallback(\n    (messageId: string) => () => {\n      if (onHideMessage) {\n        onHideMessage(messageId);\n      }\n    },\n    [onHideMessage]\n  );\n\n  return (\n    <div className={css.messages}>\n      {items.map((item, index) => (\n        <Toast\n          key={index}\n          onClose={makeHideMessageHandler(item.id)}\n          show\n          delay={3000}\n          autohide\n          animation={false}\n        >\n          <Toast.Body>{item.body}</Toast.Body>\n        </Toast>\n      ))}\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Messages } from \"./Messages\";\nimport { RootState } from \"../../app/rootReducer\";\nimport { hideMessage } from \"./messagesSlice\";\n\nconst MessagesContainer: FC<unknown> = () => {\n  const dispatch = useDispatch();\n\n  const messages = useSelector((state: RootState) => state.messages);\n\n  const handleHideMessage = useCallback(\n    (messageId: string) => {\n      dispatch(hideMessage(messageId));\n    },\n    [dispatch]\n  );\n\n  return <Messages items={messages} onHideMessage={handleHideMessage} />;\n};\n\nexport default MessagesContainer;\n","import React, { FC, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\nimport HomePage from \"../features/home-page/HomePage\";\nimport GamePage from \"../features/single-game/GamePage\";\nimport { fetchCurrentUser } from \"../features/current-user/currentUserSlice\";\nimport {\n  watchChatMessages,\n  watchGames,\n  watchSeeks,\n  watchUsers,\n} from \"../features/data-subscription/dataSubscriptionSlice\";\nimport { startGameClock } from \"../features/game-clock/gameClockSlice\";\nimport HeaderContainer from \"../features/header/HeaderContainer\";\nimport AuthModalContainer from \"../features/auth-modal/AuthModalContainer\";\nimport { fetchGames } from \"../features/games-list/gamesListSlice\";\nimport { fetchSeeks } from \"../features/seeks-list/seeksListSlice\";\nimport MessagesContainer from \"../features/messages/MessagesContainer\";\nimport { fetchUsers } from \"../features/users-list/usersListSlice\";\nimport { AppDispatch } from \"./store\";\n\nconst App: FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n    const stopGameClock = dispatch(startGameClock());\n    dispatch(watchChatMessages());\n    dispatch(watchGames());\n    dispatch(watchSeeks());\n    dispatch(watchUsers());\n    dispatch(fetchGames());\n    dispatch(fetchUsers());\n    dispatch(fetchSeeks());\n\n    return () => {\n      stopGameClock();\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"container-fluid\">\n      <Router>\n        <HeaderContainer />\n        <AuthModalContainer />\n        <MessagesContainer />\n\n        <Switch>\n          <Route path=\"/game/:id\">\n            <GamePage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  getCurrentUserSuccess,\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\nimport { getGamesListSuccess } from \"../games-list/gamesListSlice\";\nimport { getSeeksListSuccess } from \"../seeks-list/seeksListSlice\";\nimport { getUsersListSuccess } from \"../users-list/usersListSlice\";\nimport {\n  getSingleGameSuccess,\n  abortGameSuccess,\n  resignGameSuccess,\n  offerDrawSuccess,\n  acceptDrawOfferSuccess,\n  declineDrawOfferSuccess,\n} from \"../single-game/singleGameSlice\";\nimport {\n  challengeAiSuccess,\n  createSeekSuccess,\n  acceptSeekSuccess,\n} from \"../challenge/challengeSlice\";\nimport { oneSecondPassed } from \"../game-clock/gameClockSlice\";\nimport {\n  updateGameBySubscription,\n  createGameBySubscription,\n  createSeekBySubscription,\n  updateSeekBySubscription,\n  removeSeekBySubscription,\n  createUserBySubscription,\n  updateUserBySubscription,\n  createChatMessageBySubscription,\n} from \"../data-subscription/dataSubscriptionSlice\";\nimport {\n  makeMoveRequest,\n  makeMoveSuccess,\n  MoveRequestPayload,\n} from \"../move/moveSlice\";\nimport NormalizedUserEntity from \"../../normalizr/interfaces/NormalizedUserEntity\";\nimport NormalizedGameEntity from \"../../normalizr/interfaces/NormalizedGameEntity\";\nimport NormalizedSeekEntity from \"../../normalizr/interfaces/NormalizedSeekEntity\";\nimport NormalizedChatMessageEntity from \"../../normalizr/interfaces/NormalizedChatMessageEntity\";\nimport {\n  getChatMessagesListSuccess,\n  GetChatMessagesListSuccessPayload,\n  createChatMessageSuccess,\n} from \"../chat/chatSlice\";\nimport { getMovesQnt } from \"../../utils/chess\";\n\nexport interface EntitiesState {\n  users: Record<string, NormalizedUserEntity>;\n  games: Record<string, NormalizedGameEntity>;\n  seeks: Record<string, NormalizedSeekEntity>;\n  chatMessages: Record<string, NormalizedChatMessageEntity>;\n}\n\nconst initialState: EntitiesState = {\n  users: {},\n  games: {},\n  seeks: {},\n  chatMessages: {},\n};\n\nconst getNormalizedDataReducer = (\n  state: EntitiesState,\n  action: Pick<\n    PayloadAction<{\n      entities: Partial<EntitiesState>;\n    }>,\n    \"payload\"\n  >\n) => {\n  Object.assign(state.users, action.payload.entities.users);\n  Object.assign(state.games, action.payload.entities.games);\n  Object.assign(state.seeks, action.payload.entities.seeks);\n  Object.assign(state.chatMessages, action.payload.entities.chatMessages);\n};\n\nconst entitiesSlice = createSlice({\n  name: \"entities\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getCurrentUserSuccess.type]: (\n      state: EntitiesState,\n      action: PayloadAction<null | {\n        entities: Partial<EntitiesState>;\n      }>\n    ) => {\n      if (action.payload) {\n        getNormalizedDataReducer(state, {\n          payload: action.payload,\n        });\n      }\n    },\n    [loginSuccess.type]: getNormalizedDataReducer,\n    [registerSuccess.type]: getNormalizedDataReducer,\n    [getGamesListSuccess.type]: getNormalizedDataReducer,\n    [getSeeksListSuccess.type]: getNormalizedDataReducer,\n    [getSingleGameSuccess.type]: getNormalizedDataReducer,\n    [abortGameSuccess.type]: getNormalizedDataReducer,\n    [createChatMessageSuccess.type]: getNormalizedDataReducer,\n    [createChatMessageBySubscription.type]: getNormalizedDataReducer,\n    [getChatMessagesListSuccess.type]: (\n      state: EntitiesState,\n      action: PayloadAction<GetChatMessagesListSuccessPayload>\n    ) =>\n      getNormalizedDataReducer(state, {\n        payload: action.payload.normalizedChatMessages,\n      }),\n    [resignGameSuccess.type]: getNormalizedDataReducer,\n    [offerDrawSuccess.type]: getNormalizedDataReducer,\n    [acceptDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [declineDrawOfferSuccess.type]: getNormalizedDataReducer,\n    [challengeAiSuccess.type]: getNormalizedDataReducer,\n    [createSeekSuccess.type]: getNormalizedDataReducer,\n    [createSeekBySubscription.type]: getNormalizedDataReducer,\n    [updateSeekBySubscription.type]: getNormalizedDataReducer,\n    [removeSeekBySubscription.type]: (\n      state: EntitiesState,\n      action: PayloadAction<number>\n    ) => {\n      delete state.seeks[action.payload];\n    },\n    [updateGameBySubscription.type]: getNormalizedDataReducer,\n    [createGameBySubscription.type]: getNormalizedDataReducer,\n    [getUsersListSuccess.type]: getNormalizedDataReducer,\n    [createUserBySubscription.type]: getNormalizedDataReducer,\n    [updateUserBySubscription.type]: getNormalizedDataReducer,\n    [makeMoveRequest.type]: (\n      state: EntitiesState,\n      action: PayloadAction<MoveRequestPayload>\n    ) => {\n      state.games[action.payload.gameId].turn =\n        state.games[action.payload.gameId].turn === \"white\" ? \"black\" : \"white\";\n      state.games[action.payload.gameId].moves = `${\n        state.games[action.payload.gameId].moves\n      } ${action.payload.move}`.trim();\n    },\n    [makeMoveSuccess.type]: getNormalizedDataReducer,\n    [acceptSeekSuccess.type]: getNormalizedDataReducer,\n    [oneSecondPassed.type]: (state: EntitiesState) => {\n      const gameIds = Object.keys(state.games);\n\n      gameIds.forEach((gameId) => {\n        const game = state.games[gameId];\n\n        if (game.status === \"started\") {\n          if (getMovesQnt(game) > 1) {\n            const timePropName = game.turn === \"white\" ? \"wtime\" : \"btime\";\n\n            game[timePropName] -= 1000;\n            if (game[timePropName] < 0) {\n              game[timePropName] = 0;\n            }\n\n            if (game[timePropName] === 0) {\n              game.status = \"outoftime\";\n              game.winner = game.turn === \"white\" ? \"black\" : \"white\";\n            }\n          }\n        }\n      });\n    },\n  },\n});\n\nexport default entitiesSlice.reducer;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  acceptSeekRequest,\n  acceptSeekSuccess,\n  acceptSeekError,\n} from \"../challenge/challengeSlice\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\n\ninterface AcceptSeekRequestState {\n  inProcess: boolean;\n  itemId: number | null;\n  error: string | null;\n}\n\nconst initialState: AcceptSeekRequestState = {\n  inProcess: false,\n  itemId: null,\n  error: null,\n};\n\nconst acceptSeekRequestSlice = createSlice({\n  name: \"acceptSeekRequest\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [acceptSeekRequest.type]: (state, action: PayloadAction<number>) => {\n      state.inProcess = true;\n      state.itemId = action.payload;\n      state.error = null;\n    },\n    [acceptSeekSuccess.type]: (\n      state,\n      _action: PayloadAction<NormalizedData<number>>\n    ) => {\n      state.inProcess = false;\n      state.itemId = null;\n      state.error = null;\n    },\n    [acceptSeekError.type]: (\n      state,\n      action: PayloadAction<ItemErrorPayload>\n    ) => {\n      state.inProcess = false;\n      state.itemId = action.payload.itemId;\n      state.error = action.payload.error;\n    },\n  },\n});\n\nexport default acceptSeekRequestSlice.reducer;\n","/* eslint-disable import/no-cycle */\n\nimport { combineReducers } from \"@reduxjs/toolkit\";\nimport chatReducer from \"../features/chat/chatSlice\";\nimport gamesListReducer from \"../features/games-list/gamesListSlice\";\nimport seeksListReducer from \"../features/seeks-list/seeksListSlice\";\nimport usersListReducer from \"../features/users-list/usersListSlice\";\nimport currentUserReducer from \"../features/current-user/currentUserSlice\";\nimport entitiesReducer from \"../features/entities/entitiesSlice\";\nimport singleGameReducer from \"../features/single-game/singleGameSlice\";\nimport acceptSeekRequestReducer from \"../features/accept-seek-request/acceptSeekRequestSlice\";\nimport messagesReducer from \"../features/messages/messagesSlice\";\nimport modalReducer from \"../features/modal/modalSlice\";\n\nconst rootReducer = combineReducers({\n  // challenge: challengeReducer,\n  chat: chatReducer,\n  currentUser: currentUserReducer,\n  gamesList: gamesListReducer,\n  entities: entitiesReducer,\n  // dataSubscription: dataSubscriptionReducer,\n  singleGame: singleGameReducer,\n  seeksList: seeksListReducer,\n  usersList: usersListReducer,\n  acceptSeekRequest: acceptSeekRequestReducer,\n  messages: messagesReducer,\n  modal: modalReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable import/no-cycle */\n\nimport { Action, configureStore } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk<R> = ThunkAction<R, RootState, unknown, Action<string>>;\n\nexport default store;\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./app/store\";\n\nconst render = () => {\n  const App = require(\"./app/App\").default;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./app/App\", render);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable prefer-object-spread */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport ItemErrorPayload from \"../../interfaces/ItemErrorPayload\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\nimport { ChatMessage } from \"../../interfaces/ChatMessage\";\nimport chatMessageSchema from \"../../normalizr/schemas/chatMessageSchema\";\nimport { createChatMessageBySubscription } from \"../data-subscription/dataSubscriptionSlice\";\n\ninterface GameChatMessagesState {\n  isLoading: boolean;\n  error: string | null;\n  items: number[];\n}\n\nexport interface GetChatMessagesListSuccessPayload {\n  gameId: number;\n  normalizedChatMessages: NormalizedData<number[]>;\n}\n\ninterface ChatMessagesState {\n  [gameId: string]: GameChatMessagesState;\n}\n\nexport const defaultGameChatMessagesState: GameChatMessagesState = {\n  isLoading: true,\n  error: null,\n  items: [],\n};\n\nconst initialState: ChatMessagesState = {};\n\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    getChatMessagesListRequest(state, action: PayloadAction<number>) {\n      state[action.payload] = Object.assign(\n        {},\n        defaultGameChatMessagesState,\n        state[action.payload],\n        {\n          isLoading: true,\n          error: null,\n        }\n      );\n    },\n    getChatMessagesListSuccess(\n      state,\n      action: PayloadAction<GetChatMessagesListSuccessPayload>\n    ) {\n      const { gameId } = action.payload;\n\n      state[gameId] = {\n        isLoading: false,\n        error: null,\n        items: action.payload.normalizedChatMessages.result,\n      };\n    },\n    getChatMessagesListError(state, action: PayloadAction<ItemErrorPayload>) {\n      const gameId = action.payload.itemId;\n\n      state[gameId] = {\n        isLoading: false,\n        error: action.payload.error,\n        items: [],\n      };\n    },\n    createChatMessageRequest(_state, _action: PayloadAction<number>) {},\n    createChatMessageSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number>>\n    ) {\n      const chatMessageId = action.payload.result;\n      const gameId = action.payload.entities.chatMessages![chatMessageId].game;\n\n      state[gameId].items.push(chatMessageId);\n    },\n    createChatMessageError(_state, _action: PayloadAction<ItemErrorPayload>) {},\n  },\n  extraReducers: {\n    [createChatMessageBySubscription.type]: (\n      state,\n      action: PayloadAction<NormalizedData<number>>\n    ) => {\n      const chatMessageId = action.payload.result;\n      const gameId = action.payload.entities.chatMessages![chatMessageId].game;\n\n      // ignore message if there is no such game in the state\n      if (state[gameId]) {\n        state[gameId].items.push(chatMessageId);\n      }\n    },\n  },\n});\n\nexport const {\n  getChatMessagesListRequest,\n  getChatMessagesListSuccess,\n  getChatMessagesListError,\n  createChatMessageRequest,\n  createChatMessageSuccess,\n  createChatMessageError,\n} = chatSlice.actions;\n\nexport default chatSlice.reducer;\n\nexport const fetchChatMessages = (\n  gameId: number\n): AppThunk<Promise<ChatMessage[]>> => (dispatch) => {\n  dispatch(getChatMessagesListRequest(gameId));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\n      `/api/v1/board/game/${gameId}/chat`,\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedChatMessages = normalize(body as ChatMessage[], [\n            chatMessageSchema,\n          ]);\n          dispatch(\n            getChatMessagesListSuccess({\n              gameId,\n              normalizedChatMessages,\n            })\n          );\n\n          resolve(body as ChatMessage[]);\n        } else {\n          dispatch(\n            getChatMessagesListError({\n              itemId: gameId,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n\nexport const createChatMessage = (\n  gameId: number,\n  text: string\n): AppThunk<Promise<ChatMessage>> => (dispatch) => {\n  dispatch(createChatMessageRequest(gameId));\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${gameId}/chat`,\n      {\n        text,\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedChatMessage = normalize(\n            body as ChatMessage,\n            chatMessageSchema\n          );\n          dispatch(createChatMessageSuccess(normalizedChatMessage));\n\n          resolve(body as ChatMessage);\n        } else {\n          dispatch(\n            createChatMessageError({\n              itemId: gameId,\n              error: getErrorMessageFromJWR(jwr),\n            })\n          );\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable import/prefer-default-export */\n\nimport { Move } from \"ii-react-chessboard\";\nimport { ChessInstance } from \"chess.js\";\nimport Game from \"../interfaces/Game\";\nimport makeChessInstance from \"./makeChessInstance\";\n\nexport const isPromotionMove = (game: Game, move: Move): boolean => {\n  const chess: ChessInstance = makeChessInstance(game);\n  const moves = chess.moves({ verbose: true });\n\n  for (let i = 0, movesQnt = moves.length; i < movesQnt; i += 1) {\n    if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const getMovesQnt = (game: Pick<Game, \"moves\">): number => {\n  if (game.moves.length === 0) {\n    return 0;\n  }\n\n  return game.moves.split(\" \").length;\n};\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-param-reassign */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  challengeAiSuccess,\n  createSeekError,\n  createSeekRequest,\n  createSeekSuccess,\n} from \"../challenge/challengeSlice\";\nimport {\n  loginSuccess,\n  registerSuccess,\n} from \"../current-user/currentUserSlice\";\n\nexport type ModalName = \"auth\" | \"challengeAi\" | \"seek\";\n\nexport interface ShowModalPayload {\n  name: ModalName;\n  allowClose: boolean;\n}\n\ninterface ModalState {\n  allowClose: boolean;\n  showModal: ModalName | null;\n}\n\nconst initialState: ModalState = {\n  allowClose: true,\n  showModal: null,\n};\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    showModal(state, action: PayloadAction<ShowModalPayload>) {\n      state.showModal = action.payload.name;\n      state.allowClose = action.payload.allowClose;\n    },\n    hideModal(state) {\n      state.showModal = null;\n      state.allowClose = true;\n    },\n  },\n  extraReducers: {\n    [createSeekRequest.type]: (state) => {\n      state.allowClose = false;\n    },\n    [createSeekSuccess.type]: (state) => {\n      state.showModal = null;\n      state.allowClose = true;\n    },\n    [createSeekError.type]: (state) => {\n      state.allowClose = true;\n    },\n    [loginSuccess.type]: (state) => {\n      state.showModal = null;\n      state.allowClose = true;\n    },\n    [registerSuccess.type]: (state) => {\n      state.showModal = null;\n      state.allowClose = true;\n    },\n    [challengeAiSuccess.type]: (state) => {\n      state.showModal = null;\n      state.allowClose = true;\n    },\n  },\n});\n\nexport const { showModal, hideModal } = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"piece\":\"PromotionChoiceModal_piece__3X8mT\",\"bB\":\"PromotionChoiceModal_bB__1a2sj\",\"bK\":\"PromotionChoiceModal_bK__1-JsQ\",\"bN\":\"PromotionChoiceModal_bN__1_xeb\",\"bP\":\"PromotionChoiceModal_bP__1L1RS\",\"bQ\":\"PromotionChoiceModal_bQ__14de1\",\"bR\":\"PromotionChoiceModal_bR__Gvlcg\",\"wB\":\"PromotionChoiceModal_wB__3zy1F\",\"wK\":\"PromotionChoiceModal_wK__mz-Oc\",\"wN\":\"PromotionChoiceModal_wN__3SOQS\",\"wP\":\"PromotionChoiceModal_wP__3qDSP\",\"wQ\":\"PromotionChoiceModal_wQ__28Iaa\",\"wR\":\"PromotionChoiceModal_wR__2E7j8\"};","import { Chess, ChessInstance } from \"chess.js\";\nimport Game from \"../interfaces/Game\";\n\nconst startPositionFen =\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nexport default (\n  game: Pick<Game, \"initialFen\" | \"moves\">,\n  rewindToMoveIndex: number | null = null\n): ChessInstance => {\n  let { initialFen } = game;\n  if (initialFen === \"startpos\") {\n    initialFen = startPositionFen;\n  }\n\n  const chess = new Chess(initialFen);\n\n  if (game.moves) {\n    game.moves.split(\" \").forEach((move, index) => {\n      if (rewindToMoveIndex !== null && index >= rewindToMoveIndex) {\n        return;\n      }\n\n      const result = chess.move(move, {\n        sloppy: true,\n      });\n\n      if (!result) {\n        throw Error(`incorrect move: ${move}`);\n      }\n    });\n  }\n\n  return chess;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorSubmits\":\"CreateSeekForm_colorSubmits__1rtRc\",\"colorSubmitsButton\":\"CreateSeekForm_colorSubmitsButton__2SUlU\",\"whiteButton\":\"CreateSeekForm_whiteButton__2Jb8D\",\"blackButton\":\"CreateSeekForm_blackButton__1J0eY\",\"randomButton\":\"CreateSeekForm_randomButton__34hZ3\",\"spinnerWrapper\":\"CreateSeekForm_spinnerWrapper__1uHk1\",\"spinnerButton\":\"CreateSeekForm_spinnerButton__2VfoE\"};","import { schema } from \"normalizr\";\nimport userSchema from \"./userSchema\";\nimport gameSchema from \"./gameSchema\";\n\nconst seekSchema = new schema.Entity(\"seeks\", {\n  createdBy: userSchema,\n  game: gameSchema,\n});\n\nexport default seekSchema;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"levelButtonGroup\":\"ChallengeAiForm_levelButtonGroup__1lnm_\",\"colorSubmits\":\"ChallengeAiForm_colorSubmits__1pM28\",\"colorSubmitsButton\":\"ChallengeAiForm_colorSubmitsButton__2P6Lx\",\"whiteButton\":\"ChallengeAiForm_whiteButton__2nTjs\",\"blackButton\":\"ChallengeAiForm_blackButton__1LVeL\",\"randomButton\":\"ChallengeAiForm_randomButton__1S07l\"};","import { schema } from \"normalizr\";\nimport userSchema from \"./userSchema\";\n\nconst chatMessageSchema = new schema.Entity(\"chatMessages\", {\n  createdBy: userSchema,\n});\n\nexport default chatMessageSchema;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\ninterface MoveState {}\n\nconst initialState: MoveState = {};\n\nconst moveSlice = createSlice({\n  name: \"move\",\n  initialState,\n  reducers: {\n    makeMoveRequest(_state, _action: PayloadAction<MoveRequestPayload>) {},\n    makeMoveSuccess(_state, _action: PayloadAction<NormalizedData<number>>) {},\n    makeMoveError(_state, _action: PayloadAction<string>) {},\n  },\n  extraReducers: {},\n});\n\nexport const {\n  makeMoveRequest,\n  makeMoveSuccess,\n  makeMoveError,\n} = moveSlice.actions;\n\nexport default moveSlice.reducer;\n\nexport interface MoveRequestPayload {\n  gameId: number;\n  move: string;\n}\n\nexport const makeMove = (\n  gameId: number,\n  move: string\n): AppThunk<Promise<Game>> => (dispatch) => {\n  dispatch(\n    makeMoveRequest({\n      gameId,\n      move,\n    })\n  );\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.post(\n      `/api/v1/board/game/${gameId}/move/${move}`,\n      {},\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGame = normalize(body as Game, gameSchema);\n\n          dispatch(makeMoveSuccess(normalizedGame));\n          resolve(body as Game);\n        } else {\n          dispatch(makeMoveError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movesWrapper\":\"GameMoves_movesWrapper__2X9ck\",\"moveNumber\":\"GameMoves_moveNumber__3tyZT\",\"move\":\"GameMoves_move__21iOk\",\"selected\":\"GameMoves_selected__2FXRO\"};","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport { AppThunk } from \"../../app/store\";\nimport Game from \"../../interfaces/Game\";\nimport ioClient from \"../../services/ioClient\";\nimport gameSchema from \"../../normalizr/schemas/gameSchema\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\ninterface GamesListState {\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: GamesListState = {\n  isLoading: true,\n  error: null,\n};\n\nconst gamesListSlice = createSlice({\n  name: \"games\",\n  initialState,\n  reducers: {\n    getGamesListRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getGamesListSuccess(\n      state,\n      _action: PayloadAction<NormalizedData<number[]>>\n    ) {\n      state.isLoading = false;\n      state.error = null;\n    },\n    getGamesListError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getGamesListRequest,\n  getGamesListSuccess,\n  getGamesListError,\n} = gamesListSlice.actions;\n\nexport default gamesListSlice.reducer;\n\nexport const fetchGames = (): AppThunk<Promise<Game[]>> => (dispatch) => {\n  dispatch(getGamesListRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\n      \"/api/v1/game\",\n      { limit: 300, sort: \"createdAt DESC\" },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGames = normalize(body as Game[], [gameSchema]);\n          dispatch(getGamesListSuccess(normalizedGames));\n\n          resolve(body as Game[]);\n        } else {\n          dispatch(getGamesListError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { pull as _pull } from \"lodash\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport { Seek } from \"../../interfaces/Seek\";\nimport seekSchema from \"../../normalizr/schemas/seekSchema\";\nimport {\n  createSeekBySubscription,\n  updateSeekBySubscription,\n  removeSeekBySubscription,\n} from \"../data-subscription/dataSubscriptionSlice\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\n\ninterface SeeksListState {\n  isLoading: boolean;\n  error: string | null;\n  items: number[];\n}\n\nconst initialState: SeeksListState = {\n  isLoading: true,\n  error: null,\n  items: [],\n};\n\nconst seeksListSlice = createSlice({\n  name: \"seeks\",\n  initialState,\n  reducers: {\n    getSeeksListRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getSeeksListSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number[]>>\n    ) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload.result;\n    },\n    getSeeksListError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.items = [];\n    },\n  },\n  extraReducers: {\n    [createSeekBySubscription.type]: (\n      state: SeeksListState,\n      action: PayloadAction<NormalizedData<number>>\n    ) => {\n      if (!state.items.includes(action.payload.result)) {\n        state.items.unshift(action.payload.result);\n      }\n    },\n    [updateSeekBySubscription.type]: (\n      state: SeeksListState,\n      action: PayloadAction<NormalizedData<number>>\n    ) => {\n      if (!state.items.includes(action.payload.result)) {\n        state.items.unshift(action.payload.result);\n      }\n    },\n    [removeSeekBySubscription.type]: (\n      state: SeeksListState,\n      action: PayloadAction<number>\n    ) => {\n      _pull(state.items, action.payload);\n    },\n  },\n});\n\nexport const {\n  getSeeksListRequest,\n  getSeeksListSuccess,\n  getSeeksListError,\n} = seeksListSlice.actions;\n\nexport default seeksListSlice.reducer;\n\nexport const fetchSeeks = (): AppThunk<Promise<Seek[]>> => (dispatch) => {\n  dispatch(getSeeksListRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\n      \"/api/v1/seek\",\n      {\n        sort: \"createdAt DESC\",\n      },\n      (body: unknown, jwr: JWR) => {\n        if (jwr.statusCode === 200) {\n          const normalizedGames = normalize(body as Seek[], [seekSchema]);\n          dispatch(getSeeksListSuccess(normalizedGames));\n\n          resolve(body as Seek[]);\n        } else {\n          dispatch(getSeeksListError(getErrorMessageFromJWR(jwr)));\n          reject(jwr);\n        }\n      }\n    );\n  });\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-cycle */\n\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { JWR } from \"sails.io.js\";\nimport { normalize } from \"normalizr\";\nimport NormalizedData from \"../../normalizr/interfaces/NormalizedData\";\nimport {\n  createUserBySubscription,\n  updateUserBySubscription,\n} from \"../data-subscription/dataSubscriptionSlice\";\nimport { registerSuccess } from \"../current-user/currentUserSlice\";\nimport { AppThunk } from \"../../app/store\";\nimport ioClient from \"../../services/ioClient\";\nimport getErrorMessageFromJWR from \"../../utils/getErrorMessageFromJWR\";\nimport User from \"../../interfaces/User\";\nimport userSchema from \"../../normalizr/schemas/userSchema\";\n\ninterface UsersListState {\n  isLoading: boolean;\n  error: string | null;\n  items: number[];\n}\n\nconst initialState: UsersListState = {\n  isLoading: true,\n  error: null,\n  items: [],\n};\n\nconst usersListSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    getUsersListRequest(state) {\n      state.isLoading = true;\n      state.error = null;\n    },\n    getUsersListSuccess(\n      state,\n      action: PayloadAction<NormalizedData<number[]>>\n    ) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload.result;\n    },\n    getUsersListError(state, action: PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.items = [];\n    },\n  },\n  extraReducers: {\n    [registerSuccess.type]: (\n      state: UsersListState,\n      action: PayloadAction<NormalizedData<number>>\n    ) => {\n      if (!state.items.includes(action.payload.result)) {\n        state.items.push(action.payload.result);\n      }\n    },\n    [createUserBySubscription.type]: (\n      state: UsersListState,\n      action: PayloadAction<NormalizedData<number>>\n    ) => {\n      if (!state.items.includes(action.payload.result)) {\n        state.items.push(action.payload.result);\n      }\n    },\n    [updateUserBySubscription.type]: (\n      state: UsersListState,\n      action: PayloadAction<NormalizedData<number>>\n    ) => {\n      if (!state.items.includes(action.payload.result)) {\n        state.items.push(action.payload.result);\n      }\n    },\n  },\n});\n\nexport const {\n  getUsersListRequest,\n  getUsersListSuccess,\n  getUsersListError,\n} = usersListSlice.actions;\n\nexport default usersListSlice.reducer;\n\nexport const fetchUsers = (): AppThunk<Promise<User[]>> => (dispatch) => {\n  dispatch(getUsersListRequest());\n\n  return new Promise((resolve, reject) => {\n    ioClient.socket.get(\"/api/v1/user\", (body: unknown, jwr: JWR) => {\n      if (jwr.statusCode === 200) {\n        const normalizedUsers = normalize(body as User[], [userSchema]);\n        dispatch(getUsersListSuccess(normalizedUsers));\n\n        resolve(body as User[]);\n      } else {\n        dispatch(getUsersListError(getErrorMessageFromJWR(jwr)));\n        reject(jwr);\n      }\n    });\n  });\n};\n"],"sourceRoot":""}